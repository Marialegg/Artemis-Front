{"version":3,"sources":["webpack:///./node_modules/@syncfusion/ej2-data/src/query.js","webpack:///./node_modules/@syncfusion/ej2-data/src/adaptors.js","webpack:///./node_modules/@syncfusion/ej2-data/src/manager.js","webpack:///./node_modules/@syncfusion/ej2-data/src/util.js"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","lazyLoad","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sortByForeignKey","direction","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","result","preds","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","create","consts","GroupGuid","Adaptor","ds","options","requestType","count","aggregates","dataSource","pvt","processResponse","data","xhr","_super","JsonAdaptor","processQuery","countFlg","keyCount","agg","undefined","lazyLoadData","lazyLoadGroup","getAggregate","onDemandGroupInfo","onPage","formGroupResult","req","onWhere","level","uid","childLevel","records","aggQuery","tmp","getValue","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","obj","onAggregates","onSearch","getFieldList","onSortBy","fnCompare","sort","onGroup","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","callAdaptorFunction","getFiltersFrom","getModuleName","keys_3","keys","keys_1","prop","isNull","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","request1","param","selects","getResponseHeader","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","isExpand","isArray","val","formRemoteGroupedData","getAggregateResult","items","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","pKey","predicats","pData","aggregateData","isServerGrouping","groupQuery","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","requiresCast","guid","returnValue","getField","replacer","encodeURIComponent","isGuid","odBiOperator","odUniOperator","odv4UniOperator","onComplexPredicate","onEachWhere","join","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","split","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","parseInt","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","substring","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","map","metaName","dataUrl","dataCount","WebApiAdaptor","_loop_1","x","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","newData","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","index","crossDomain","DataManager","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","isCors","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","lookup","buildHierarchy","makeRequest","deffered","Deferred","isCustomDataAdaptor","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","error","reject","process","actual","virtualSelectRecords","toString","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","isGraphQLAdaptor","ajaxReqOption","httpRequest","virtualRecords","ajax_1","send","catch","Promise","all","pResult","cResult","saveChanges","doAjaxRequest","deff_1","ajax_2","successFunc","failureFunc","ajaxDeffered","ajaxFunc","bind","ajax_3","DataUtil","inst","input","substr","startsWith","fnAscending","fnDescending","y","localeCompare","extractFields","newObj","setValue","jsonArray","isLazyLoad","jsonData","this_1","indx","childLevels","grouped","groupedArray","this_2","getVal","tempObj","aggs","source","grp","fKeyData","prefix","copyObj","nameSpace","fromObj","middle","left","right","merge","ignoreDiacritics","newValue","diacritics","current","shift","array","fnName","param1","param2","adp","rand","hexs","crypto","Uint8Array","getRandomValues","Math","random","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","prepareQuery","sampledata","requiresCounts","predicateList","getPredicate","sorted","mainPred","childPred","cpre","serverTimezoneOffset","message","stack","sum","isNaN","average","min","max","truecount","falsecount","operatorSymbols","equal","expected","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","contains","notnull","isnull","startswith","endswith","processSymbols","jsonText","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","ms","offSet","toTimeZone","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","regex","match","jsonReplacer","arrayReplacer","getTimezoneOffset","toUTC","offset","utc","unix","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds"],"mappings":"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","file":"js/chunk-vendors~b61af9c0.3251fb96.js","sourcesContent":["import { DataUtil } from './util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        this.lazyLoad = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        cloned.lazyLoad = this.lazyLoad.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        if (!operator || operator === 'none') {\n            operator = 'contains';\n        }\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     * @param  {string} direction - Defines the sort direction .\n     */\n    Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n        var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = \"(\" + res + \")\";\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, \"''\");\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length == 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\nexport { CustomDataAdaptor };\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\nvar GraphQLAdaptor = /** @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     * @param  {Query} query\n     * @param  {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\nexport { GraphQLAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                if (!isNullOrUndefined(data['errors'])) {\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.ajaxReqOption, request);\n            }\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            req = ajax_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.        \n            this.requests.push(ajax_1);\n        }\n        else {\n            this.ajaxReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var ajax_2 = new Ajax(req);\n            ajax_2.beforeSend = function () {\n                _this.beforeSend(ajax_2.httpRequest, ajax_2);\n            };\n            ajax_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    if (!isNullOrUndefined(data['errors'])) {\n                        ajax_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_2.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.doAjaxRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.doAjaxRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = JSON.parse(record);\n            if (!isNullOrUndefined(data['errors'])) {\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.ajaxReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n        this.ajaxDeffered.resolve(record);\n    };\n    ;\n    DataManager.prototype.failureFunc = function (e) {\n        this.ajaxDeffered.reject([{ error: e }]);\n    };\n    ;\n    DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.ajaxDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_3 = new Ajax(res);\n            ajax_3.beforeSend = function () {\n                _this.beforeSend(ajax_3.httpRequest, ajax_3);\n            };\n            ajax_3.onSuccess = this.successFunc.bind(this);\n            ajax_3.onFailure = this.failureFunc.bind(this);\n            ajax_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.ajaxReqOption = res;\n            ajaxFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.ajaxDeffered.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Process the given records based on the datamanager string.\n     * @param  {string} datamanager\n     * @param  {Object[]} records\n     */\n    DataUtil.processData = function (dm, records) {\n        var query = this.prepareQuery(dm);\n        var sampledata = new DataManager(records);\n        if (dm.requiresCounts) {\n            query.requiresCount();\n        }\n        var result = sampledata.executeLocal(query);\n        var returnValue = {\n            result: dm.requiresCounts ? result.result : result,\n            count: result.count,\n            aggregates: JSON.stringify(result.aggregates)\n        };\n        return dm.requiresCounts ? returnValue : result;\n    };\n    DataUtil.prepareQuery = function (dm) {\n        var _this = this;\n        var query = new Query();\n        if (dm.select) {\n            query.select(dm.select);\n        }\n        if (dm.where) {\n            var where = DataUtil.parse.parseJson(dm.where);\n            where.filter(function (pred) {\n                if (isNullOrUndefined(pred.condition)) {\n                    query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n                }\n                else {\n                    var predicateList = [];\n                    if (pred.field) {\n                        predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n                    }\n                    else {\n                        predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n                    }\n                    if (pred.condition == 'or') {\n                        query.where(Predicate.or(predicateList));\n                    }\n                    else if (pred.condition == 'and') {\n                        query.where(Predicate.and(predicateList));\n                    }\n                }\n            });\n        }\n        if (dm.search) {\n            var search = DataUtil.parse.parseJson(dm.search);\n            search.filter(function (e) { return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']); });\n        }\n        if (dm.aggregates) {\n            dm.aggregates.filter(function (e) { return query.aggregate(e.type, e.field); });\n        }\n        if (dm.sorted) {\n            dm.sorted.filter(function (e) { return query.sortBy(e.name, e.direction); });\n        }\n        if (dm.skip) {\n            query.skip(dm.skip);\n        }\n        if (dm.take) {\n            query.take(dm.take);\n        }\n        if (dm.group) {\n            dm.group.filter(function (grp) { return query.group(grp); });\n        }\n        return query;\n    };\n    DataUtil.getPredicate = function (pred) {\n        var mainPred = [];\n        for (var i = 0; i < pred.length; i++) {\n            var e = pred[i];\n            if (e.field) {\n                mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n            }\n            else {\n                var childPred = [];\n                var cpre = this.getPredicate(e.predicates);\n                for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    childPred.push(cpre[prop]);\n                }\n                mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n            }\n        }\n        return mainPred;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n"],"sourceRoot":""}