{"version":3,"sources":["webpack:///../../../src/components/VProgressCircular/index.ts","webpack:///../../../src/components/VProgressCircular/VProgressCircular.ts","webpack:///../../../src/components/VBtn/VBtn.ts"],"names":["VProgressCircular","Colorable","extend","name","directives","intersect","props","button","Boolean","indeterminate","rotate","type","Number","String","default","size","width","value","data","radius","isVisible","computed","calculatedSize","this","circumference","Math","PI","classes","normalizedValue","parseFloat","strokeDashArray","round","strokeDashOffset","strokeWidth","viewBoxSize","styles","height","convertToUnit","svgStyles","transform","methods","genCircle","offset","$createElement","class","attrs","fill","cx","cy","r","genSvg","children","style","xmlns","viewBox","genInfo","staticClass","$slots","onObserve","entries","observer","isIntersecting","render","h","setTextColor","color","role","undefined","on","$listeners","baseMixins","mixins","VSheet","Routable","Positionable","Sizeable","GroupableFactory","ToggleableFactory","activeClass","btnToggle","block","depressed","fab","icon","loading","outlined","plain","retainFocusOnClick","rounded","tag","text","tile","proxyClass","options","call","absolute","bottom","disabled","isElevated","fixed","hasBg","left","right","isRound","to","top","themeClasses","groupClasses","elevationClasses","sizeableClasses","computedElevation","Elevatable","computedRipple","defaultRipple","circle","ripple","elevation","measurableStyles","created","breakingProps","forEach","original","replacement","$attrs","hasOwnProperty","breaking","click","e","detail","$el","blur","$emit","toggle","genContent","genLoader","loader","generateRouteLink","setColor","setBackgroundColor","includes","JSON","stringify"],"mappings":"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","file":"js/chunk-43481b7b.c31186bc.js","sourcesContent":["import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","// Styles\nimport './VProgressCircular.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  directives: { intersect },\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n    isVisible: true,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--visible': this.isVisible,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n    onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n      this.isVisible = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      directives: [{\n        name: 'intersect',\n        value: this.onObserve,\n      }],\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Elevatable from '../../mixins/elevatable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator, PropType } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    plain: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    tile: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--disabled': this.disabled,\n        'v-btn--is-elevated': this.isElevated,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--has-bg': this.hasBg,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--plain': this.plain,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    computedElevation (): string | number | undefined {\n      if (this.disabled) return undefined\n\n      return Elevatable.options.computed.computedElevation.call(this)\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple ?? defaultRipple\n    },\n    hasBg (): boolean {\n      return !this.text && !this.plain && !this.outlined && !this.icon\n    },\n    isElevated (): boolean {\n      return Boolean(\n        !this.icon &&\n        !this.text &&\n        !this.outlined &&\n        !this.depressed &&\n        !this.disabled &&\n        !this.plain &&\n        (this.elevation == null || Number(this.elevation) > 0)\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      // TODO: Remove this in v3\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const { tag, data } = this.generateRouteLink()\n    const setColor = this.hasBg\n      ? this.setBackgroundColor\n      : this.setTextColor\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n"],"sourceRoot":""}