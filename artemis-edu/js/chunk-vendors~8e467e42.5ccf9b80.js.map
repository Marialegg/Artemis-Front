{"version":3,"sources":["webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/action.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/pdf-annotation.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/connector-util.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/tools.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/dom-util.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/html-element.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/selector.js","webpack:///./node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing-util.js"],"names":["findActiveElement","event","pdfBase","pdfViewer","isOverlapped","activeElements","activePageID","objects","findObjectsUnderMouse","object","findObjectUnderMouse","pt","currentPosition","x","offsetX","y","offsetY","getZoomFactor","pageTable","getPageTable","objArray","findObjects","touchArg","actualTarget","type","indexOf","annotation","pageDiv","getElement","getEventPageNumber","pageCurrentRect","getBoundingClientRect","changedTouches","clientX","left","clientY","top","target","path","parentElement","classList","contains","targetParentRect","offsetParent","isNaN","position","offsetForSelector","boundsDiff","i","length","shapeAnnotationType","tool","obj","findElementUnderMouse","isOver","newpoint","CalculateLeaderPoints","rect","toBounds","Inflate","containsPoint","bounds","wrapper","rotationValue","width","height","objectBounds","selector","currentobject","leaderCount","sourcePoint","targetPoint","segment","newPoint1","angle","findAngle","id","center","children","leaderHeight","matrix","rotatedPoint","padding","findTargetShapeElement","insertObject","key","collection","push","splice","low","high","mid","Math","floor","container","shapeElement","j","currentTarget","targetElement","this","findTargetElement","style","fill","element","paddingValue","rotateThumbDistance","parentTransform","pivot","actualSize","rotateThumb","region","objCollection","_i","objCollection_1","ActiveElements","activePage","undefined","Object","defineProperty","prototype","get","set","offset","enumerable","configurable","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","create","__decorate","decorators","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","PdfBounds","_super","apply","PdfFont","PdfAnnotationBase","parent","propName","defaultValue","isArray","call","isBold","isItalic","isStrikeout","isUnderline","PdfFormFieldBase","ZOrderPageTable","pageIdTemp","zIndexTemp","childNodesTemp","childNodes","getConnectorPoints","points","vertexPoints","newPoints","slice","getSegmentPath","connector","getPt","pts","clipDecorators","k","updateSegmentElement","segmentPath","data","getSegmentElement","segmentElement","staticSize","updateDecoratorElement","adjacentPoint","isSource","thickness","getPath","getDecoratorShape","sourceDecoraterShapes","taregetDecoraterShapes","size","transform","Self","fillColor","rotateAngle","canMeasurePath","getDecoratorElement","offsetPoint","decEle","clipDecorator","point","start","end","len","distancePoints","round","strokeWidth","adjustPoint","initDistanceLabel","measure","pdfviewer","labels","textele","textElement","enableImportAnnotationMeasurement","notes","content","setConversion","pixelToPointFactor","rotateValue","enableShapeLabel","strokeColor","labelBorderColor","labelFillColor","fontSize","color","fontColor","fontFamily","initPerimeterLabel","calculatePerimeter","updatePerimeterLabel","perimeter","textElement_3","text","refreshTextElement","getPolygonPath","seg","horizontalAlignment","verticalAlignment","relativeMode","setOffsetWithRespectToBounds","textWrapping","initLeaders","leaders","leader","initLeader","point1","point2","isSecondLeader","finalPoint","isPointOverConnector","reference","intersectinPt","findNearestPoint","segment1","x1","x2","y1","y2","segment2","intersectDetails","enabled","distance","findLength","intersectPt","abs","rect_1","equals","shortestPoint","shortest","shortest1","angleBWStAndEnd","angleBWStAndRef","vaAngle","cos","PI","sin","shape","decoratorShapes","ToolBase","pdfViewerBase","protectChange","commandHandler","inAction","currentElement","blocked","isTooltipVisible","childTable","helper","undoElement","annotations","undoParentElement","startAction","mouseDown","args","source","startPosition","prevPosition","mouseMove","prevPageId","mouseUp","endAction","remove","mouseWheel","mouseLeave","updateSize","startPoint","endPoint","corner","initialBounds","isMouseUp","zoom","viewerBase","difx","dify","diff","deltaWidth","deltaHeight","formFieldAnnotationType","annotName","annotationSettings","annotationModule","findAnnotationSettings","annotationMaxHeight","annotationMaxWidth","annotationMinHeight","annotationMinWidth","minWidth","maxWidth","minHeight","maxHeight","isAnnotationSet","getPositions","newWidth","newHeight","getPivot","SelectTool","base","mouseEventHelper","overlappedCollections","isLock","checkAllowedInteractions","currentSelctor","annotationSelectorSettings","selectedObject","selectedItems","formField","formFields","currentAnnot","currentSource","info","ctrlKey","freeTextAnnotationModule","isInuptBoxInFocus","formDesignerModule","clearSelection","isFreeTextSelected","select","isAnnotationMouseDown","isFormFieldMouseDown","enableToolbar","isDevice","enableDesktopMode","toolbarModule","showToolbar","fireAnnotationUnSelect","pageIndex","field","name","value","fontStyle","backgroundColor","alignment","isReadonly","isReadOnly","visibility","maxLength","isRequired","isPrint","rotation","tooltip","options","isChecked","isSelected","fireFormFieldUnselectEvent","formField_1","className","fireFocusOutFormField","MoveTool","_this","prevNode","nodeMouseDown","redoElement","checkisAnnotationMove","dragSelectedObjects","calculateMouseActionXDiff","calculateMouseActionYDiff","updateHTMLElement","renderSelector","isAnnotationMouseMove","isFormFieldMouseMove","newShapeObject","modifiedDate","node","borderColor","X","Y","Width","Height","previousPosition","fireFormFieldMoveEvent","addAction","stampAnnotationModule","updateSessionStorage","stickyNotesAnnotationModule","updateStickyNotes","calculateMouseXDiff","calculateMouseYDiff","requiredX","requiredY","isStamp","isSkip","diffX","diffY","selectedItem","cobject","borderDashArray","stampFillColor","opacity","dynamicText","labelContent","add","checkBoundaryConstraints","currentSelctor_1","triggerAnnotationMove","StampTool","newObject","nodeElement","moveStampElement","textWidth","getTextWidth","widthRatio","getFontSize","defaultFontSize","sourceWrapper","font","fontName","canvas","document","createElement","context","getContext","getComputedStyle","body","measureText","InkDrawingTool","sourceObject","disableTextSelectionMode","inkAnnotationModule","drawInkInCanvas","storePathData","ConnectTool","initialPosition","prevSource","measureType","sizeObject","checkAnnotationWidth","nodePropertyChange","newShapeElementObject","updateCalibrateValues","cloneShapebject","dragConnectorEnds","selectedSegment","ResizeTool","isPreventHistory","oldObject","isAnnotationSelect","isFormFieldSelect","deltaValues","scaleObjects","stampSettings","boundsRatio","fireFormFieldResizeEvent","annotationElement","getPoints","changes","getChanges","getTooltipContent","pdfAnnotationBaseModel","change","isCtrlKeyPressed","max","scaleSelectedItems","NodeDrawingTool","updateFreeTextProperties","isFormDesign","formFieldElement","getElementById","drawingObject","pageNumber","getActivePage","updateFormFieldInitialSize","pageWidth","pageContainer","firstElementChild","clientWidth","pageHeight","clientHeight","offsetLeft","updateNodeDimension","formFieldCollection","signatureIndicatorSettings","formFieldCollections","drawHTMLContent","action","isMouseDown","dragging","updateRadiusLinePosition","trasPoint","renderDrawing","PolygonDrawingTool","lastPoint","nodeAnnotElement","author","subject","borderStyle","measureAnnotationModule","isDoubleClineck","isMouseLeave","currentSelector","enableShapeAnnotation","shapeAnnotationModule","renderShapeAnnotations","enableMeasureAnnotation","calculateArea","addTextToComments","calculateVolume","renderMeasureShapeAnnotations","annotationObject","LineTool","nodeAnnot","lineHeadEnd","lineHeadStart","measureModule","annotationNode","leaderLength","RotateTool","refPoint","rotate","toString","renderAdornerLayer","commonStyle","cavas","index","divElement","nextElement","pageBound","svgAdornerSvg","createSvg","setAttribute","adornerSvgLayer","appendChild","insertBefore","svgSelector","applyElementStyles","svgObj","createElementNS","DiagramHtmlElement","nodeTemplate","templateFn","templateCompiler","template","querySelectorAll","querySelector","innerHTML","trim","e","getNodeTemplate","Drawing","viewer","isDynamicStamps","renderer","svgRenderer","renderLabels","initObject","createNewZindexTable","pageId","zIndexTable","zIndex","notFound","setZIndex","tabelLength","initLine","arrange","desiredSize","initNode","nameTable","initContainer","init","pathContent","basicElement","initFormFields","initAnnotationObject","drawSignatureWithTool","isRectElement","htmlContent","textLabel","labelOpacity","annotationAddMode","isDynamicStamp","cornerRadius","stampStrokeColor","textele_1","italic","bold","margin","bottom","pathContent1","content1","pathContent11","setNodePosition","radiusTextEle","pathContent2","rectElements","signatureText","textAlign","rectElement","freeTextEle","toLowerCase","textDecoration","freeTextSettings","enableAutoFit","srcDecorator","targetDecorator","segments","anglePoints","allowServerDataBind","allowServerDataBinding","enableServerDataBinding","split","getPageObjects","refreshCanvasDiagramLayer","inputField","fireFormFieldRemoveEvent","removeFieldsFromAnnotationCollections","diagramLayer","objectId","ctx","lineCap","lineJoin","lineWidth","devicePixelRatio_1","getWindowDevicePixelRatio","zoomRatio","setTransform","clearRect","renderElement","clearHighlighter","adornerSvg","getAdornerLayerSvg","highlighter","parentNode","removeChild","getSelectorElement","diagramId","adornerLayer","elementcoll","adornerLayerSvg","diagramElement","getElementsByClassName","clearSelectorLayer","selectionRect","child","isSelect","selectorModel","selectorElement","designerMode","renderResizeHandle","thumbsConstraints","fireFormFieldSelectEvent","isProgrammaticSelection","renderEndPointHandle","scale","tx","ty","isSignature","isNewSignatureAdded","selectSignature","signatureName","isAddComment","isInkAdded","isNewStamp","annotationSelect","concat","rotateObjects","includeParent","objects_1","newOffset","getParentSvg","renderBorder","enableNode","isBorderTickness","isSwimlane","isSticky","shapeType","annotationSelector","JSON","parse","selectionBorderColor","stroke","selectionBorderThickness","lineDash","selectorLineDashArray","dashArray","getBorderSelector","isFormFieldSign","checkSignatureFormField","getSignBorder","class","parentSvg","drawRectangle","handWrittenSignatureSettings","inkAnnotationSettings","rectangleSettings","borderColor_1","lineDash_1","circleSettings","borderColor_3","lineDash_3","radiusSettings","borderColor_4","lineDash_4","borderColor_5","lineDash_5","stickyNotesSettings","borderColor_6","lineDash_6","borderColor_7","lineDash_7","borderColor_2","lineDash_2","renderCircularHandle","cx","cy","visible","enableSelector","t","connected","canMask","ariaLabel","count","newPoint","getResizerColors","getShapeSize","centerX","centerY","getShape","drawCircle","radius","resizerSize","lineSettings","arrowSettings","distanceSettings","polygonSettings","perimeterSettings","areaSettings","volumeSettings","resizerShape","resizerBorderColor","resizerFillColor","renderRotateThumb","selectorConstraints","pivotX","pivotY","Rotate","constraints","currentZoom","nodeConstraints","isPath","isFreeText","renderPivotLine","nodeWidth","nodeHeight","allowPermission","allowedInteraction","updateAnnotationAllowedInteractions","checkIsLockSettings","getAllowedInteractions","resizerLocation","getResizerLocation","isNodeShape","ResizeNorthWest","ResizeNorthEast","ResizeSouthWest","ResizeSouthEast","ResizeNorth","ResizeSouth","ResizeWest","ResizeEast","drawLine","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","initSelectorWrapper","multipleSelection","preventUpdate","drag","_a","_b","_c","dragAnnotation","nodes","dragControlPoint","measureChildren","segmentNumber","updateEndPoint","actualObject","outerBounds","updateConnector","i_1","names","ratio","fontSizeCalculation","isDirt","i_2","textNodes","i_3","i_4","i_5","i_6","i_7","i_8","strokeDashArray","setLineDistance","i_9","childElement","i_10","i_11","childNodeHeight","dy","heightDiff","contString","childHeight","boundsWidth","textwidth","newsize","node1","sx","sy","scaleAnnotation","scaleObject","sw","sh","refObject","isResize","bound","right","refWrapper","newPosition","getShapePoint","nodeBounds","selectorBounds","heightDifference","top_1","eventArgs","RestrictStamp","getShapeBounds","shapeBounds","shapeCorners","shapeMiddleLeft","middleLeft","shapeTopCenter","topCenter","shapeBottomCenter","bottomCenter","shapeMiddleRight","middleRight","shapeTopLeft","topLeft","shapeTopRight","topRight","shapeBottomLeft","bottomLeft","shapeBottomRight","bottomRight","corners","w","h","cornerPoint","pivotPoint","transformMatrix","targetPortId","length_2","rotatedPoint1","rotatedPoint2","Number","parseFloat","dragSourceEnd","anglePoint","copy","clipboardData","pasteIndex","clipObject","copyObjects","selectedItems_1","item","deleteFormField","deleteAnnotationById","deleteAnnotation","sortByZIndex","getNewObject","newObj","newobjs","paste","zoomfactor","copiedItems","objectTable","copiedItems_1","events","mouseLeft","mouseTop","mouseDownEvent","calculateCopyPosition","newNode","contextMenuModule","previousAction","updateAnnotationCollection","signatureModule","storeSignatureData","addedAnnot","formDesigner","triggerAnnotationAddEvent","cut","removedAnnotationCollection","nodeArray","sortID","sort","a","Selector","diagram","isLineShapes","setElementStype","findPointsLength","getBaseShapeAttributes","baseShapeAttributes","getFunction","window","cloneObject","additionalProp","keys","prop","properties","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","isEventEmmitter","cloneArray","HTMLElement","cloneNode","innerHtml","sourceArray","clonedArray","isLeader"],"mappings":"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","file":"js/chunk-vendors~8e467e42.5ccf9b80.js","sourcesContent":["import { contains } from '@syncfusion/ej2-drawings';\nimport { Rect } from '@syncfusion/ej2-drawings';\nimport { Point, identityMatrix, rotateMatrix } from '@syncfusion/ej2-drawings';\nimport { Container, transformPointByMatrix } from '@syncfusion/ej2-drawings';\nimport { isPointOverConnector } from './connector-util';\nimport { LineTool, NodeDrawingTool, StampTool } from './tools';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @private\n * @param {MouseEvent | TouchEvent} event - Specified the annotaion event.\n * @param {PdfViewerBase} pdfBase - Specified the pdfviewer base element.\n * @param {PdfViewer} pdfViewer - Specified the pdfviewer element.\n * @param {boolean} isOverlapped - Specified the overlapped element or not.\n * @returns {any} - Returns the active element.\n */\n// eslint-disable-next-line\nexport function findActiveElement(event, pdfBase, pdfViewer, isOverlapped) {\n    if (pdfViewer && pdfBase.activeElements.activePageID > -1) {\n        var objects = findObjectsUnderMouse(pdfBase, pdfViewer, event);\n        var object = findObjectUnderMouse(objects, event, pdfBase, pdfViewer);\n        if (isOverlapped) {\n            return objects;\n        }\n        return object;\n    }\n    return undefined;\n}\n/**\n * @private\n * @param {PdfViewerBase} pdfBase - Specified the pdfviewer base element.\n * @param {PdfViewer} pdfViewer - Specified the pdfviewer element.\n * @param {MouseEvent} event - Specified the annotaion event.\n * @returns {IElement[]} - Returns the annotaion elements.\n */\nexport function findObjectsUnderMouse(pdfBase, pdfViewer, event) {\n    var pt = pdfBase.currentPosition || { x: event.offsetX, y: event.offsetY };\n    pt = { x: pt.x / pdfBase.getZoomFactor(), y: pt.y / pdfBase.getZoomFactor() };\n    var pageTable = pdfViewer.getPageTable(pdfBase.activeElements.activePageID);\n    var objArray = findObjects(pt, pageTable.objects);\n    return objArray;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel[]} objects - Specified the annotaion object model.\n * @param {any} event - Specified the annotaion event.\n * @param {PdfViewerBase} pdfBase - Specified the pdfviewer base element.\n * @param {PdfViewer} pdfViewer - Specified the pdfviewer element.\n * @returns {IElement} - Returns the annotaion element.\n */\nexport function findObjectUnderMouse(\n// eslint-disable-next-line\nobjects, event, pdfBase, pdfViewer) {\n    var actualTarget = null;\n    var touchArg;\n    var offsetX;\n    var offsetY;\n    if (event && event.type && event.type.indexOf('touch') !== -1) {\n        touchArg = event;\n        if (pdfViewer.annotation) {\n            var pageDiv = pdfBase.getElement('_pageDiv_' + pdfViewer.annotation.getEventPageNumber(event));\n            if (pageDiv) {\n                var pageCurrentRect = pageDiv.getBoundingClientRect();\n                offsetX = touchArg.changedTouches[0].clientX - pageCurrentRect.left;\n                offsetY = touchArg.changedTouches[0].clientY - pageCurrentRect.top;\n            }\n        }\n        // eslint-disable-next-line\n    }\n    else if (event && event.target && event.path && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object')) {\n        // eslint-disable-next-line\n        var targetParentRect = event.path[4].getBoundingClientRect();\n        offsetX = event.clientX - targetParentRect.left;\n        offsetY = event.clientY - targetParentRect.top;\n    }\n    else if (event.target && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object')) {\n        // eslint-disable-next-line\n        var targetParentRect = event.target.offsetParent.offsetParent.offsetParent.getBoundingClientRect();\n        offsetX = event.clientX - targetParentRect.left;\n        offsetY = event.clientY - targetParentRect.top;\n        // eslint-disable-next-line\n    }\n    else if (event.target && event.target.parentElement && event.target.parentElement.parentElement && event.target.parentElement.parentElement.classList.contains('foreign-object')) {\n        // eslint-disable-next-line\n        var targetParentRect = event.target.offsetParent.offsetParent.offsetParent.offsetParent.getBoundingClientRect();\n        offsetX = event.clientX - targetParentRect.left;\n        offsetY = event.clientY - targetParentRect.top;\n        // eslint-disable-next-line\n    }\n    else {\n        offsetX = !isNaN(event.offsetX) ? event.offsetX : (event.position ? event.position.x : 0);\n        offsetY = !isNaN(event.offsetY) ? event.offsetY : (event.position ? event.position.y : 0);\n    }\n    var offsetForSelector = 5;\n    var boundsDiff = 0;\n    for (var i = 0; i < objects.length; i++) {\n        if (!(objects[i].shapeAnnotationType === 'Distance' || objects[i].shapeAnnotationType === 'Line' || objects[i].shapeAnnotationType === 'LineWidthArrowHead' || pdfBase.tool instanceof LineTool)) {\n            var bounds = objects[i].wrapper.bounds;\n            var rotationValue = 0;\n            if (objects[i].shapeAnnotationType === 'Stamp' || objects[i].shapeAnnotationType === 'Image') {\n                rotationValue = 25;\n            }\n            // eslint-disable-next-line max-len\n            if ((((bounds.x - offsetForSelector) * pdfBase.getZoomFactor()) < offsetX) && (((bounds.x + bounds.width + offsetForSelector) * pdfBase.getZoomFactor()) > offsetX) &&\n                // eslint-disable-next-line max-len\n                (((bounds.y - offsetForSelector - rotationValue) * pdfBase.getZoomFactor()) < offsetY) && (((bounds.y + bounds.height + offsetForSelector) * pdfBase.getZoomFactor()) > offsetY)) {\n                if (pdfBase.tool instanceof NodeDrawingTool || pdfBase.tool instanceof StampTool) {\n                    actualTarget = objects[i];\n                }\n                else {\n                    if (!boundsDiff) {\n                        actualTarget = objects[i];\n                        // eslint-disable-next-line max-len\n                        boundsDiff = (offsetX - ((bounds.x - offsetForSelector) * pdfBase.getZoomFactor())) + (((bounds.x + bounds.width + offsetForSelector) * pdfBase.getZoomFactor()) - offsetX) +\n                            // eslint-disable-next-line max-len\n                            (offsetY - ((bounds.y - offsetForSelector - rotationValue) * pdfBase.getZoomFactor())) + (((bounds.y + bounds.height + offsetForSelector) * pdfBase.getZoomFactor()) - offsetY);\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        var objectBounds = (offsetX - ((bounds.x - offsetForSelector) * pdfBase.getZoomFactor())) + (((bounds.x + bounds.width + offsetForSelector) * pdfBase.getZoomFactor()) - offsetX) +\n                            // eslint-disable-next-line max-len\n                            (offsetY - ((bounds.y - offsetForSelector - rotationValue) * pdfBase.getZoomFactor())) + (((bounds.y + bounds.height + offsetForSelector) * pdfBase.getZoomFactor()) - offsetY);\n                        if (boundsDiff > objectBounds) {\n                            actualTarget = objects[i];\n                            boundsDiff = objectBounds;\n                        }\n                        else if (boundsDiff === objectBounds) {\n                            actualTarget = objects[i];\n                            boundsDiff = objectBounds;\n                        }\n                        else if ((objects[i].shapeAnnotationType === \"Image\") || (objects[i].shapeAnnotationType === \"Stamp\")) {\n                            actualTarget = objects[i];\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            var pt = { x: offsetX / pdfBase.getZoomFactor(), y: offsetY / pdfBase.getZoomFactor() };\n            var obj = findElementUnderMouse(objects[i], pt, offsetForSelector);\n            var isOver = isPointOverConnector(objects[i], pt);\n            if (obj && !isOver) {\n                var newpoint = CalculateLeaderPoints(objects[i], obj);\n                if (newpoint) {\n                    var rect = Rect.toBounds([newpoint, newpoint]);\n                    rect.Inflate(10);\n                    if (rect.containsPoint(pt)) {\n                        isOver = true;\n                    }\n                }\n            }\n            if (obj && isOver) {\n                actualTarget = objects[i];\n            }\n        }\n    }\n    return actualTarget;\n}\n/**\n * @private\n * @param {any} selector - Specified the annotaion selctor.\n * @param {any} currentobject - Specified the current annotaion object.\n * @returns {any} - Returns the leader points.\n */\n// eslint-disable-next-line\nexport function CalculateLeaderPoints(selector, currentobject) {\n    var leaderCount = 0;\n    var sourcePoint = selector.sourcePoint;\n    var targetPoint = selector.targetPoint;\n    if (selector.shapeAnnotationType === 'Distance') {\n        var segment = currentobject;\n        var newPoint1 = void 0;\n        var angle = Point.findAngle(selector.sourcePoint, selector.targetPoint);\n        if (segment.id.indexOf('leader') > -1) {\n            var center = selector.wrapper.children[0].bounds.center;\n            if (leaderCount === 0 && segment.id.indexOf('leader1') > -1) {\n                newPoint1 = { x: selector.sourcePoint.x, y: selector.sourcePoint.y - selector.leaderHeight };\n                center = sourcePoint;\n            }\n            else {\n                newPoint1 = { x: selector.targetPoint.x, y: selector.targetPoint.y - selector.leaderHeight };\n                center = targetPoint;\n            }\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, center.x, center.y);\n            var rotatedPoint = transformPointByMatrix(matrix, { x: newPoint1.x, y: newPoint1.y });\n            return rotatedPoint;\n        }\n    }\n}\n/**\n * @private\n * @param {IElement} obj - Specified the annotation element.\n * @param {PointModel} position - Specified the annotation position value.\n * @param {number} padding - Specified the annotation padding.\n * @returns {DrawingElement} - Returns the annotation drawing element.\n */\nexport function findElementUnderMouse(obj, position, padding) {\n    return findTargetShapeElement(obj.wrapper, position, padding);\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object model.\n * @param {string} key - Specified the annotation key value.\n * @param {Object[]} collection - Specified the annotation collection.\n * @returns {void}\n */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        // eslint-disable-next-line\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            // eslint-disable-next-line\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n                // eslint-disable-next-line\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        // eslint-disable-next-line\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n            // eslint-disable-next-line\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n            // eslint-disable-next-line\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/**\n * @private\n * @param {Container} container - Specified the annotaion container.\n * @param {PointModel} position - Specified the annotation position.\n * @param {number} padding - Specified the annotaion padding value.\n * @returns {DrawingElement} - Returns the annotation drawing element.\n */\nexport function findTargetShapeElement(container, position, padding) {\n    if (container && container.children) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var shapeElement = container.children[i];\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(shapeElement.children) && shapeElement.children.length > 0) {\n                // eslint-disable-next-line\n                for (var j = shapeElement.children.length - 1; j >= 0; j--) {\n                    // eslint-disable-next-line\n                    var currentTarget = shapeElement.children[j];\n                    if (currentTarget && currentTarget.bounds.containsPoint(position, 10)) {\n                        if (currentTarget instanceof Container) {\n                            var targetElement = this.findTargetElement(currentTarget, position);\n                            if (targetElement) {\n                                return targetElement;\n                            }\n                        }\n                        if (currentTarget.bounds.containsPoint(position, 10)) {\n                            return currentTarget;\n                        }\n                    }\n                }\n            }\n            else {\n                if (shapeElement && shapeElement.bounds.containsPoint(position, 10)) {\n                    if (shapeElement instanceof Container) {\n                        var targetElement = this.findTargetElement(shapeElement, position);\n                        if (targetElement) {\n                            return targetElement;\n                        }\n                    }\n                    if (shapeElement.bounds.containsPoint(position, 10)) {\n                        return shapeElement;\n                    }\n                }\n            }\n        }\n    }\n    if (container && container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n        var element = container;\n        var paddingValue = 10;\n        var rotateThumbDistance = 30;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.parentTransform, element.offsetX, element.offsetY);\n        var x = element.offsetX - element.pivot.x * element.actualSize.width;\n        var y = element.offsetY - element.pivot.y * element.actualSize.height;\n        var rotateThumb = {\n            x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n            y: y - rotateThumbDistance\n        };\n        rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n        if (contains(position, rotateThumb, paddingValue)) {\n            return container;\n        }\n    }\n    return null;\n}\n/**\n * @private\n * @param {PointModel} region - Specified the annotation region point model.\n * @param {PdfAnnotationBaseModel[]} objCollection - Specified the annotation object collections.\n * @returns {PdfAnnotationBaseModel[]} - Returns the annotation object collections.\n */\nexport function findObjects(region, objCollection) {\n    var objects = [];\n    for (var _i = 0, objCollection_1 = objCollection; _i < objCollection_1.length; _i++) {\n        var obj = objCollection_1[_i];\n        if (findElementUnderMouse(obj, region, 10) || ((obj.shapeAnnotationType === 'Stamp') && findElementUnderMouse(obj, region, 40))) {\n            insertObject(obj, 'zIndex', objects);\n        }\n    }\n    return objects;\n}\n/**\n * @private\n * @param {MouseEvent} event - Specified the annotaion mouse event.\n * @param {PdfViewerBase} pdfBase - Specified the pdfBase element.\n * @returns {number} - Returns the active page Id.\n */\nexport function findActivePage(event, pdfBase) {\n    var activePageID = undefined;\n    if (event.target && event.target.wrapper) {\n        return event.target.pageIndex;\n    }\n    if (event.target) {\n        var elementIdColl = event.target.id.split('_');\n        if (elementIdColl.length > 0) {\n            // eslint-disable-next-line radix\n            activePageID = parseInt(elementIdColl[elementIdColl.length - 1]);\n        }\n    }\n    return activePageID;\n}\n/**\n * @hidden\n */\nvar ActiveElements = /** @class */ (function () {\n    function ActiveElements() {\n        this.activePage = undefined;\n        this.activePageID = undefined;\n    }\n    Object.defineProperty(ActiveElements.prototype, \"activePageID\", {\n        /**\n         * @private\n         * @returns {number} - Returns the active page Id.\n         */\n        get: function () {\n            return this.activePage;\n        },\n        /**\n         * @private\n         * @param {number} offset - The page offset value.\n         */\n        set: function (offset) {\n            this.activePage = offset;\n            // eslint-disable-next-line\n            if (offset !== this.activePage) { }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ActiveElements;\n}());\nexport { ActiveElements };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Complex } from '@syncfusion/ej2-base';\nimport { Point } from '@syncfusion/ej2-drawings';\nimport { Size } from '@syncfusion/ej2-drawings';\n/**\n * The `PdfBounds` is base for annotation bounds.\n *\n * @hidden\n */\nvar PdfBounds = /** @class */ (function (_super) {\n    __extends(PdfBounds, _super);\n    function PdfBounds() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"y\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfBounds.prototype, \"bottom\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PdfBounds.prototype, \"location\", void 0);\n    __decorate([\n        Complex(new Size(0, 0), Size)\n    ], PdfBounds.prototype, \"size\", void 0);\n    return PdfBounds;\n}(ChildProperty));\nexport { PdfBounds };\n/**\n * The `PdfFont` is base for annotation Text styles.\n *\n * @hidden\n */\nvar PdfFont = /** @class */ (function (_super) {\n    __extends(PdfFont, _super);\n    function PdfFont() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], PdfFont.prototype, \"isBold\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFont.prototype, \"isItalic\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFont.prototype, \"isUnderline\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFont.prototype, \"isStrikeout\", void 0);\n    return PdfFont;\n}(ChildProperty));\nexport { PdfFont };\n/**\n * Defines the common behavior of PdfAnnotationBase\n *\n * @hidden\n */\nvar PdfAnnotationBase = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBase, _super);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function PdfAnnotationBase(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"id\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], PdfAnnotationBase.prototype, \"shapeAnnotationType\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"formFieldAnnotationType\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"measureType\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"author\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"modifiedDate\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"subject\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"notes\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfAnnotationBase.prototype, \"isCommentLock\", void 0);\n    __decorate([\n        Property('black')\n    ], PdfAnnotationBase.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('#ffffff00')\n    ], PdfAnnotationBase.prototype, \"fillColor\", void 0);\n    __decorate([\n        Property('#ffffff00')\n    ], PdfAnnotationBase.prototype, \"stampFillColor\", void 0);\n    __decorate([\n        Property('black')\n    ], PdfAnnotationBase.prototype, \"stampStrokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"data\", void 0);\n    __decorate([\n        Property(1)\n    ], PdfAnnotationBase.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(1)\n    ], PdfAnnotationBase.prototype, \"thickness\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"borderStyle\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"borderDashArray\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfAnnotationBase.prototype, \"isCloudShape\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"cloudIntensity\", void 0);\n    __decorate([\n        Property(40)\n    ], PdfAnnotationBase.prototype, \"leaderHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"lineHeadStart\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"lineHeadEnd\", void 0);\n    __decorate([\n        Property([])\n    ], PdfAnnotationBase.prototype, \"vertexPoints\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Property('None')\n    ], PdfAnnotationBase.prototype, \"sourceDecoraterShapes\", void 0);\n    __decorate([\n        Property('None')\n    ], PdfAnnotationBase.prototype, \"taregetDecoraterShapes\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"targetPoint\", void 0);\n    __decorate([\n        Property([])\n    ], PdfAnnotationBase.prototype, \"segments\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, PdfBounds)\n    ], PdfAnnotationBase.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"pageIndex\", void 0);\n    __decorate([\n        Property(-1)\n    ], PdfAnnotationBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfAnnotationBase.prototype, \"isDynamicStamp\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"dynamicText\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"annotName\", void 0);\n    __decorate([\n        Property({})\n    ], PdfAnnotationBase.prototype, \"review\", void 0);\n    __decorate([\n        Property([])\n    ], PdfAnnotationBase.prototype, \"comments\", void 0);\n    __decorate([\n        Property('#000')\n    ], PdfAnnotationBase.prototype, \"fontColor\", void 0);\n    __decorate([\n        Property(16)\n    ], PdfAnnotationBase.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Helvetica')\n    ], PdfAnnotationBase.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('None')\n    ], PdfAnnotationBase.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfAnnotationBase.prototype, \"enableShapeLabel\", void 0);\n    __decorate([\n        Property('label')\n    ], PdfAnnotationBase.prototype, \"labelContent\", void 0);\n    __decorate([\n        Property('#ffffff00')\n    ], PdfAnnotationBase.prototype, \"labelFillColor\", void 0);\n    __decorate([\n        Property(15)\n    ], PdfAnnotationBase.prototype, \"labelMaxLength\", void 0);\n    __decorate([\n        Property(1)\n    ], PdfAnnotationBase.prototype, \"labelOpacity\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"annotationSelectorSettings\", void 0);\n    __decorate([\n        Property('#ffffff00')\n    ], PdfAnnotationBase.prototype, \"labelBorderColor\", void 0);\n    __decorate([\n        Property('left')\n    ], PdfAnnotationBase.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"signatureName\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfAnnotationBase.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfAnnotationBase.prototype, \"isLock\", void 0);\n    __decorate([\n        Property('UI Drawn Annotation')\n    ], PdfAnnotationBase.prototype, \"annotationAddMode\", void 0);\n    __decorate([\n        Property('')\n    ], PdfAnnotationBase.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(16)\n    ], PdfAnnotationBase.prototype, \"previousFontSize\", void 0);\n    __decorate([\n        Complex({ isBold: false, isItalic: false, isStrikeout: false, isUnderline: false }, PdfFont)\n    ], PdfAnnotationBase.prototype, \"font\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, PdfBounds)\n    ], PdfAnnotationBase.prototype, \"labelBounds\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfAnnotationBase.prototype, \"customData\", void 0);\n    __decorate([\n        Property(['None'])\n    ], PdfAnnotationBase.prototype, \"allowedInteractions\", void 0);\n    __decorate([\n        Property(true)\n    ], PdfAnnotationBase.prototype, \"isPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfAnnotationBase.prototype, \"isReadonly\", void 0);\n    return PdfAnnotationBase;\n}(ChildProperty));\nexport { PdfAnnotationBase };\n/**\n * Defines the common behavior of PdfFormFieldBase\n *\n * @hidden\n */\nvar PdfFormFieldBase = /** @class */ (function (_super) {\n    __extends(PdfFormFieldBase, _super);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function PdfFormFieldBase(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], PdfFormFieldBase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], PdfFormFieldBase.prototype, \"signatureType\", void 0);\n    __decorate([\n        Property('')\n    ], PdfFormFieldBase.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], PdfFormFieldBase.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfFormFieldBase.prototype, \"formFieldAnnotationType\", void 0);\n    __decorate([\n        Property('#daeaf7ff')\n    ], PdfFormFieldBase.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('black')\n    ], PdfFormFieldBase.prototype, \"color\", void 0);\n    __decorate([\n        Property('#303030')\n    ], PdfFormFieldBase.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property('')\n    ], PdfFormFieldBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(1)\n    ], PdfFormFieldBase.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(1)\n    ], PdfFormFieldBase.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, PdfBounds)\n    ], PdfFormFieldBase.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"pageIndex\", void 0);\n    __decorate([\n        Property(1)\n    ], PdfFormFieldBase.prototype, \"pageNumber\", void 0);\n    __decorate([\n        Property(-1)\n    ], PdfFormFieldBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], PdfFormFieldBase.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(16)\n    ], PdfFormFieldBase.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Helvetica')\n    ], PdfFormFieldBase.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('None')\n    ], PdfFormFieldBase.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('left')\n    ], PdfFormFieldBase.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], PdfFormFieldBase.prototype, \"maxLength\", void 0);\n    __decorate([\n        Property('visible')\n    ], PdfFormFieldBase.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(true)\n    ], PdfFormFieldBase.prototype, \"isPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFormFieldBase.prototype, \"isReadonly\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFormFieldBase.prototype, \"isChecked\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFormFieldBase.prototype, \"isSelected\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFormFieldBase.prototype, \"isRequired\", void 0);\n    __decorate([\n        Property(false)\n    ], PdfFormFieldBase.prototype, \"isMultiline\", void 0);\n    __decorate([\n        Property('')\n    ], PdfFormFieldBase.prototype, \"options\", void 0);\n    __decorate([\n        Property()\n    ], PdfFormFieldBase.prototype, \"signatureIndicatorSettings\", void 0);\n    __decorate([\n        Complex({ isBold: false, isItalic: false, isStrikeout: false, isUnderline: false }, PdfFont)\n    ], PdfFormFieldBase.prototype, \"font\", void 0);\n    __decorate([\n        Property()\n    ], PdfFormFieldBase.prototype, \"selectedIndex\", void 0);\n    return PdfFormFieldBase;\n}(ChildProperty));\nexport { PdfFormFieldBase };\n/**\n * @hidden\n */\nvar ZOrderPageTable = /** @class */ (function () {\n    function ZOrderPageTable() {\n        this.pageIdTemp = 0;\n        this.zIndexTemp = -1;\n        this.childNodesTemp = [];\n        this.objects = [];\n        this.zIndexTemp = -1;\n        this.pageIdTemp = 0;\n    }\n    Object.defineProperty(ZOrderPageTable.prototype, \"pageId\", {\n        /**\n         * @private\n         * @returns {number} - Returns the page Id.\n         */\n        get: function () {\n            return this.pageIdTemp;\n        },\n        /**\n         * @private\n         * @param {number} offset - The page offset value.\n         */\n        set: function (offset) {\n            this.pageIdTemp = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZOrderPageTable.prototype, \"zIndex\", {\n        /**\n         * @private\n         * @returns {number} - Returns the z-index value.\n         */\n        get: function () {\n            return this.zIndexTemp;\n        },\n        /**\n         * @private\n         * @param {number} offset - The page offset value.\n         */\n        set: function (offset) {\n            this.zIndexTemp = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZOrderPageTable.prototype, \"objects\", {\n        /**\n         * @private\n         * @returns {PdfAnnotationBaseModel[]} - Returns the annotation childNodes.\n         */\n        get: function () {\n            return this.childNodesTemp;\n        },\n        /**\n         * @private\n         * @param {PdfAnnotationBaseModel[]} childNodes - Specified the annotation child nodes.\n         */\n        set: function (childNodes) {\n            this.childNodesTemp = childNodes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ZOrderPageTable;\n}());\nexport { ZOrderPageTable };\n","import { PathElement, Rect, Point, Size, RotateTransform, TextElement, randomId, identityMatrix, rotateMatrix, transformPointByMatrix, intersect3 } from '@syncfusion/ej2-drawings';\nimport { setElementStype, findPointsLength } from './drawing-util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @private\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel[]} points - Specified the annotation points.\n * @returns {PointModel[]} - Returns the annotation points model array.\n */\nexport function getConnectorPoints(obj, points) {\n    points = obj.vertexPoints;\n    var newPoints = points.slice(0);\n    if (newPoints && newPoints.length > 0) {\n        obj.sourcePoint = newPoints[0];\n        obj.targetPoint = newPoints[newPoints.length - 1];\n    }\n    return newPoints;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} connector - Specified the annotation connector model.\n * @param {PointModel[]} points - Specified the annotation points.\n * @returns {string} - Returns the annotation path value.\n */\nexport function getSegmentPath(connector, points) {\n    var path = '';\n    var getPt;\n    var pts = [];\n    var j = 0;\n    while (j < points.length) {\n        pts.push({ x: points[j].x, y: points[j].y });\n        j++;\n    }\n    pts = clipDecorators(connector, pts);\n    for (var k = 0; k < pts.length; k++) {\n        getPt = pts[k];\n        if (k === 0) {\n            path = 'M' + getPt.x + ' ' + getPt.y;\n        }\n        if (k > 0) {\n            path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n        }\n    }\n    return path;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} connector - Specified the annotation connector model.\n * @param {PointModel[]} points - Specified the annotation points.\n * @param {PathElement} element - Specified the annotation element.\n * @returns {PathElement} - Returns the annotation path element.\n */\nexport function updateSegmentElement(connector, points, element) {\n    var bounds = new Rect();\n    var segmentPath = getSegmentPath(connector, points);\n    bounds = Rect.toBounds(points);\n    element.width = bounds.width;\n    element.height = bounds.height;\n    element.offsetX = bounds.x + element.width / 2;\n    element.offsetY = bounds.y + element.height / 2;\n    element.data = segmentPath;\n    if (connector.wrapper) {\n        connector.wrapper.offsetX = element.offsetX;\n        connector.wrapper.offsetY = element.offsetY;\n        connector.wrapper.width = bounds.width;\n        connector.wrapper.height = bounds.height;\n    }\n    return element;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} connector - Specified the annotation connector model.\n * @param {PathElement} segmentElement - Specified the annotation segment element.\n * @returns {PathElement} - Returns the annotation path element.\n */\nexport function getSegmentElement(connector, segmentElement) {\n    var points = [];\n    points = getConnectorPoints(connector);\n    segmentElement.staticSize = true;\n    segmentElement = updateSegmentElement(connector, points, segmentElement);\n    setElementStype(connector, segmentElement);\n    return segmentElement;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {DrawingElement} element - Specified the annotation drawing element.\n * @param {PointModel} pt - Specified the annotation point.\n * @param {PointModel} adjacentPoint - Specified the annotation adjacent point.\n * @param {boolean} isSource - Specified the is source value or not.\n * @returns {void}\n */\nexport function updateDecoratorElement(obj, element, pt, adjacentPoint, isSource) {\n    element.offsetX = pt.x;\n    element.offsetY = pt.y;\n    var angle = Point.findAngle(pt, adjacentPoint);\n    var thickness = obj.thickness <= 5 ? 5 : obj.thickness;\n    var getPath = getDecoratorShape(isSource ? obj.sourceDecoraterShapes : obj.taregetDecoraterShapes);\n    var size = new Size(thickness * 2, thickness * 2);\n    element.transform = RotateTransform.Self;\n    setElementStype(obj, element);\n    element.style.fill = (obj.fillColor !== 'tranparent') ? obj.fillColor : 'white';\n    element.rotateAngle = angle;\n    element.data = getPath;\n    element.canMeasurePath = true;\n    element.width = size.width;\n    element.height = size.height;\n    if (obj.sourceDecoraterShapes === 'Butt') {\n        element.width = size.width - 10;\n        element.height = size.height + 10;\n    }\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel} offsetPoint - Specified the annotation offset point.\n * @param {PointModel} adjacentPoint - Specified the annotation adjacent point.\n * @param {boolean} isSource - Specified the is source value or not.\n * @returns {PathElement} - Returns the annotation path element.\n */\nexport function getDecoratorElement(obj, offsetPoint, adjacentPoint, isSource) {\n    var decEle = new PathElement();\n    updateDecoratorElement(obj, decEle, offsetPoint, adjacentPoint, isSource);\n    return decEle;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} connector - Specified the annotation object.\n * @param {PointModel[]} pts - Specified the annotation point model array.\n * @returns {PointModel[]} - Returns the annotation point model array.\n */\nexport function clipDecorators(connector, pts) {\n    pts[0] = clipDecorator(connector, pts, true);\n    pts[pts.length - 1] = clipDecorator(connector, pts, false);\n    return pts;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} connector - Specified the annotation connector object.\n * @param {PointModel[]} points - Specified the annotation offset point.\n * @param {boolean} isSource - Specified the is source value or not.\n * @returns {PointModel} - Returns the annotation point model.\n */\nexport function clipDecorator(connector, points, isSource) {\n    var point = { x: 0, y: 0 };\n    var start = { x: 0, y: 0 };\n    var end = { x: 0, y: 0 };\n    var length = points.length;\n    start = !isSource ? points[length - 1] : points[0];\n    end = !isSource ? points[length - 2] : points[1];\n    var len = Point.distancePoints(start, end);\n    len = (len === 0) ? 1 : len;\n    var width = connector.thickness;\n    point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n    point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n    var strokeWidth = 1;\n    point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n    return point;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel[]} points - Specified the annotation point model array.\n * @param {MeasureAnnotation} measure - Specified the measure annotation object.\n * @param {PdfViewer} pdfviewer - Specified the pdfviewer element.\n * @hidden\n * @returns {TextElement[]} - Returns the text element collections.\n */\n// eslint-disable-next-line max-len\nexport function initDistanceLabel(obj, points, measure, pdfviewer) {\n    var labels = [];\n    var angle = Point.findAngle(points[0], points[1]);\n    var textele = textElement(obj, angle);\n    if (!pdfviewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n        textele.content = obj.notes;\n    }\n    else {\n        textele.content = measure.setConversion(findPointsLength([points[0], points[1]]) * measure.pixelToPointFactor, obj);\n    }\n    textele.rotateValue = { y: -10, angle: angle };\n    if (obj.enableShapeLabel === true) {\n        textele.style.strokeColor = obj.labelBorderColor;\n        textele.style.fill = obj.labelFillColor;\n        textele.style.fontSize = obj.fontSize;\n        textele.style.color = obj.fontColor;\n        textele.style.fontFamily = obj.fontFamily;\n    }\n    labels.push(textele);\n    return labels;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel[]} points - Specified the annotation point model array.\n * @param {MeasureAnnotation} measure - Specified the measure annotation object.\n * @hidden\n * @returns {string} - Returns the distance value.\n */\nexport function updateDistanceLabel(obj, points, measure) {\n    var distance;\n    for (var i = 0; i < obj.wrapper.children.length; i++) {\n        var textElement_1 = obj.wrapper.children[i];\n        if (textElement_1 && !isNullOrUndefined(textElement_1.content)) {\n            distance = measure.setConversion(findPointsLength([points[0], points[1]]) * measure.pixelToPointFactor, obj);\n            textElement_1.content = distance;\n            textElement_1.childNodes[0].text = textElement_1.content;\n            textElement_1.refreshTextElement();\n        }\n    }\n    return distance;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {MeasureAnnotation} measure - Specified the measure annotation object.\n * @hidden\n * @returns {string} - Returns the radius label value.\n */\nexport function updateRadiusLabel(obj, measure) {\n    var radius;\n    for (var i = 0; i < obj.wrapper.children.length; i++) {\n        var textElement_2 = obj.wrapper.children[i];\n        if (textElement_2 && !isNullOrUndefined(textElement_2.content)) {\n            radius = measure.setConversion((obj.bounds.width / 2) * measure.pixelToPointFactor, obj);\n            textElement_2.content = radius;\n            if (textElement_2.childNodes.length === 2) {\n                textElement_2.childNodes[0].text = radius;\n                textElement_2.childNodes.splice(textElement_2.childNodes.length - 1, 1);\n            }\n            else {\n                textElement_2.childNodes[0].text = radius;\n            }\n            textElement_2.refreshTextElement();\n        }\n    }\n    return radius;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel[]} points - Specified the annotation point model array.\n * @param {MeasureAnnotation} measure - Specified the measure annotation object.\n * @param {PdfViewer} pdfviewer - Specified the pdfviewer element.\n * @hidden\n * @returns {TextElement[]} - Returns the text element collections.\n */\n// eslint-disable-next-line max-len\nexport function initPerimeterLabel(obj, points, measure, pdfviewer) {\n    var labels = [];\n    var angle = Point.findAngle(points[0], points[1]);\n    var textele = textElement(obj, angle);\n    if (!pdfviewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n        textele.content = obj.notes;\n    }\n    else {\n        textele.content = measure.calculatePerimeter(obj);\n    }\n    if (obj.enableShapeLabel === true) {\n        textele.style.strokeColor = obj.labelBorderColor;\n        textele.style.fill = obj.labelFillColor;\n        textele.style.fontSize = obj.fontSize;\n        textele.style.color = obj.fontColor;\n        textele.style.fontFamily = obj.fontFamily;\n    }\n    textele.rotateValue = { y: -10, angle: angle };\n    labels.push(textele);\n    return labels;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel[]} points - Specified the annotation point model array.\n * @param {MeasureAnnotation} measure - Specified the measure annotation object.\n * @hidden\n * @returns {string} - Returns the perimeter label value.\n */\nexport function updatePerimeterLabel(obj, points, measure) {\n    var perimeter;\n    for (var i = 0; i < obj.wrapper.children.length; i++) {\n        var textElement_3 = obj.wrapper.children[i];\n        if (textElement_3 && !isNullOrUndefined(textElement_3.content)) {\n            perimeter = measure.calculatePerimeter(obj);\n            textElement_3.content = perimeter;\n            textElement_3.childNodes[0].text = textElement_3.content;\n            textElement_3.refreshTextElement();\n        }\n    }\n    return perimeter;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @hidden\n * @returns {void}\n */\nexport function removePerimeterLabel(obj) {\n    for (var i = 0; i < obj.wrapper.children.length; i++) {\n        var textElement_4 = obj.wrapper.children[i];\n        if (textElement_4 && !isNullOrUndefined(textElement_4.content)) {\n            obj.wrapper.children.splice(i, 1);\n        }\n    }\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @hidden\n * @returns {void}\n */\nexport function updateCalibrateLabel(obj) {\n    if (obj.wrapper && obj.wrapper.children) {\n        for (var i = 0; i < obj.wrapper.children.length; i++) {\n            var textElement_5 = obj.wrapper.children[i];\n            if (textElement_5 && !isNullOrUndefined(textElement_5.content)) {\n                textElement_5.content = obj.notes;\n                textElement_5.childNodes[0].text = textElement_5.content;\n                textElement_5.refreshTextElement();\n            }\n        }\n    }\n}\n/**\n * Used to find the path for polygon shapes\n *\n * @param {PointModel[]} collection - Specified the polygon annotaion points collection.\n * @hidden\n * @returns {string} - Returns the polygon annotation path.\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {number} angle - Specified the annotaion rotation angle.\n * @hidden\n * @returns {TextElement} - Returns the annotation text element.\n */\nexport function textElement(obj, angle) {\n    var textele = new TextElement();\n    setElementStype(obj, textele);\n    textele.style.fill = 'transparent';\n    textele.id = randomId();\n    textele.horizontalAlignment = 'Center';\n    textele.rotateValue = { y: 10, angle: angle };\n    textele.verticalAlignment = 'Top';\n    textele.relativeMode = 'Object';\n    textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n    // eslint-disable-next-line\n    textele.offsetX;\n    textele.style.textWrapping = 'NoWrap';\n    return textele;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel[]} points - Specified the annotaion leader points.\n * @hidden\n * @returns {PathElement[]} - Returns the annotation path elements.\n */\nexport function initLeaders(obj, points) {\n    var leaders = [];\n    var leader = initLeader(obj, points[0], points[1]);\n    leaders.push(leader);\n    leader = initLeader(obj, points[1], points[0], true);\n    leaders.push(leader);\n    return leaders;\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {PointModel} point1 - Specified the annotaion leader point1.\n * @param {PointModel} point2 - Specified the annotaion leader point2.\n * @param {boolean} isSecondLeader - Specified the is second leader or not.\n * @hidden\n * @returns {PathElement} - Returns the annotation path element.\n */\nexport function initLeader(obj, point1, point2, isSecondLeader) {\n    var element = new PathElement();\n    element.offsetX = point1.x;\n    element.offsetY = point1.y;\n    var angle = Point.findAngle(point1, point2);\n    var center = { x: (point1.x + point2.x) / 2, y: (point1.y + point2.y) / 2 };\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, 0 - angle, center.x, center.y);\n    var rotatedPoint = transformPointByMatrix(matrix, point1);\n    var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y - obj.leaderHeight };\n    matrix = identityMatrix();\n    rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n    rotatedPoint = transformPointByMatrix(matrix, newPoint1);\n    var finalPoint = { x: point1.x, y: point1.y };\n    element.offsetX = finalPoint.x;\n    element.offsetY = finalPoint.y;\n    element.transform = RotateTransform.Self;\n    var getPath = 'M' + point1.x + ',' + point1.y + ',L' + rotatedPoint.x + ',' + rotatedPoint.y + 'Z';\n    var size = new Size(0, obj.leaderHeight);\n    element.pivot.x = .5;\n    if (isSecondLeader) {\n        element.id = 'leader2_' + randomId();\n        element.pivot.y = 0;\n    }\n    else {\n        element.id = 'leader1_' + randomId();\n        element.pivot.y = 1;\n    }\n    setElementStype(obj, element);\n    element.rotateAngle = angle;\n    element.data = getPath;\n    element.canMeasurePath = true;\n    element.width = size.width;\n    element.height = size.height;\n    return element;\n}\n/**\n * @private\n * @param {PdfAnnotationBaseModel} connector - Specified the annotation connector object.\n * @param {PointModel} reference - Specified the pointer reference value.\n * @returns {boolean} - Returns true or false.\n */\nexport function isPointOverConnector(connector, reference) {\n    var vertexPoints = connector.vertexPoints;\n    for (var i = 0; i < vertexPoints.length - 1; i++) {\n        var start = vertexPoints[i];\n        var end = vertexPoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(10);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < 10) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n * @param {PointModel} reference - Specified the pointer reference value.\n * @param {PointModel} start - Specified the pointer start value.\n * @param {PointModel} end - Specified the pointer end value.\n * @private\n * @returns {PointModel} - Returns annotation point model.\n */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\n/**\n * @param {DecoratorShapes} shape - Specified the annotation decorator shapes.\n * @hidden\n * @returns {string} - Returns the annotation decorator shape value.\n */\nexport function getDecoratorShape(shape) {\n    // eslint-disable-next-line\n    return decoratorShapes[shape];\n}\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Butt': 'M0,0 L0,90'\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { randomId, Point } from '@syncfusion/ej2-drawings';\nimport { rotatePoint } from '@syncfusion/ej2-drawings';\nimport { Rect } from '@syncfusion/ej2-drawings';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '@syncfusion/ej2-drawings';\nimport { TextElement } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { findActiveElement } from './action';\nimport { cloneObject, isLineShapes } from './drawing-util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { updatePerimeterLabel } from './connector-util';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n *\n * @hidden\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     *\n     * @param {PdfViewer} pdfViewer - Specified the pdfviewer component.\n     * @param {PdfViewerBase} pdfViewerBase - Specified the pdfViewer base component.\n     * @param {boolean} protectChange - Set the default value as false.\n     */\n    function ToolBase(pdfViewer, pdfViewerBase, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.pdfViewerBase = null;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        /**   @private  */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /** @private */\n        this.helper = undefined;\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { annotations: [] };\n        this.undoParentElement = { annotations: [] };\n        this.commandHandler = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param {IElement} currentElement - Specified the current element.\n     * @returns {void}\n     */\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        this.prevPageId = this.pdfViewerBase.activeElements.activePageID;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        //At the end\n        this.endAction();\n        this.helper = null;\n    };\n    ToolBase.prototype.endAction = function () {\n        //remove helper\n        if (this.commandHandler) {\n            this.commandHandler.tool = '';\n            if (this.helper) {\n                this.commandHandler.remove(this.helper);\n            }\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse wheel event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse leave event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    // eslint-disable-next-line\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle, isMouseUp) {\n        var zoom = this.commandHandler.viewerBase.getZoomFactor();\n        var difx = this.currentPosition.x / zoom - this.startPosition.x / zoom;\n        var dify = this.currentPosition.y / zoom - this.startPosition.y / zoom;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.wrapper.bounds.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.wrapper.bounds.height;\n        // eslint-disable-next-line\n        var obj = shape;\n        if (!shape.formFieldAnnotationType) {\n            if (!shape.annotName && !shape.shapeAnnotationType) {\n                if (shape) {\n                    // eslint-disable-next-line\n                    obj = shape.annotations[0];\n                }\n            }\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (isAnnotationSet && isMouseUp) {\n            // eslint-disable-next-line\n            var size = this.getPositions(corner, difx, dify);\n            var newWidth = width + size.x;\n            var newHeight = height + size.y;\n            // eslint-disable-next-line max-len\n            if ((newHeight > annotationMinHeight && newHeight < annotationMaxHeight) && (newWidth > annotationMinWidth && newWidth < annotationMaxWidth)) {\n                // eslint-disable-next-line\n                difx = difx;\n                // eslint-disable-next-line\n                dify = dify;\n            }\n            else {\n                if (newHeight < annotationMinHeight || newHeight > annotationMaxHeight) {\n                    if (newHeight < annotationMinHeight) {\n                        dify = annotationMinHeight - height;\n                    }\n                    else {\n                        dify = annotationMaxHeight - height;\n                    }\n                }\n                if (newWidth < annotationMinWidth || newWidth > annotationMaxWidth) {\n                    if (newWidth < annotationMinWidth) {\n                        difx = annotationMinWidth - width;\n                    }\n                    else {\n                        difx = annotationMaxWidth - width;\n                    }\n                }\n            }\n        }\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                // eslint-disable-next-line\n                difx = difx;\n                dify = 0;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = 0;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                }\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    ToolBase.prototype.getPositions = function (corner, x, y) {\n        switch (corner) {\n            case 'ResizeEast':\n                return { x: x, y: 0 };\n            case 'ResizeSouthEast':\n                return { x: x, y: y };\n            case 'ResizeSouth':\n                return { x: 0, y: y };\n            case 'ResizeNorth':\n                return { x: 0, y: -y };\n            case 'ResizeNorthEast':\n                return { x: x, y: -y };\n            case 'ResizeNorthWest':\n                return { x: -x, y: -y };\n            case 'ResizeWest':\n                return { x: -x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -x, y: y };\n        }\n        return { x: x, y: y };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n *\n * @hidden\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, base) {\n        return _super.call(this, commandHandler, base, true) || this;\n        //     this.action = action;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse down event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.mouseEventHelper(args);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseEventHelper = function (args) {\n        if (this.commandHandler && this.commandHandler.annotationModule) {\n            // eslint-disable-next-line\n            this.commandHandler.annotationModule.overlappedCollections = findActiveElement(args, this.pdfViewerBase, this.commandHandler, true);\n        }\n        // eslint-disable-next-line\n        var object = findActiveElement(args, this.pdfViewerBase, this.commandHandler);\n        // if (!isNullOrUndefined(object) && (object as any).shapeAnnotationType != 'Path'){\n        var isLock = false;\n        // eslint-disable-next-line\n        if (object && object.shapeAnnotationType === 'StickyNotes') {\n            // eslint-disable-next-line\n            if (object.annotationSettings && object.annotationSettings.isLock) {\n                if (this.commandHandler.annotationModule.checkAllowedInteractions('Select', object)) {\n                    isLock = false;\n                }\n                else {\n                    isLock = true;\n                }\n            }\n        }\n        if (!isLock) {\n            // eslint-disable-next-line\n            var currentSelctor = void 0;\n            if (args.source && args.annotationSelectorSettings !== null) {\n                currentSelctor = args.source.annotationSelectorSettings;\n            }\n            else {\n                currentSelctor = '';\n            }\n            if (this.commandHandler) {\n                var selectedObject = this.commandHandler.selectedItems;\n                if (selectedObject) {\n                    // eslint-disable-next-line\n                    var annotation = selectedObject.annotations[0];\n                    // eslint-disable-next-line\n                    var formField = selectedObject.formFields[0];\n                    var currentAnnot = this.commandHandler.selectedItems.annotations[0];\n                    var currentSource = args.source;\n                    if ((selectedObject.annotations.length) && args.info && !args.info.ctrlKey\n                        // eslint-disable-next-line\n                        && this.commandHandler.annotationModule && this.commandHandler.annotationModule.freeTextAnnotationModule.isInuptBoxInFocus === false) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    else if (args.info && args.info.ctrlKey && ((currentSource && currentSource.shapeAnnotationType === 'FreeText') || (currentAnnot && currentAnnot.shapeAnnotationType === 'FreeText'))) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    else if (isNullOrUndefined(object) && this.commandHandler.formDesignerModule && !((currentSource && currentSource.shapeAnnotationType === 'FreeText') || (currentAnnot && (currentAnnot.shapeAnnotationType === 'FreeText' || currentAnnot.shapeAnnotationType === 'Image' || currentAnnot.shapeAnnotationType === 'StickyNotes')))) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    if (object) {\n                        if (!isNullOrUndefined(this.pdfViewerBase.isFreeTextSelected) && !this.pdfViewerBase.isFreeTextSelected) {\n                            this.commandHandler.select([object.id], currentSelctor);\n                            this.commandHandler.viewerBase.isAnnotationMouseDown = true;\n                        }\n                        this.pdfViewerBase.isFreeTextSelected = false;\n                        this.commandHandler.viewerBase.isFormFieldMouseDown = true;\n                    }\n                    if (selectedObject.annotations.length === 0 && annotation && annotation.shapeAnnotationType !== 'HandWrittenSignature' && annotation.shapeAnnotationType !== 'SignatureText' && annotation.shapeAnnotationType !== 'SignatureImage' && annotation.shapeAnnotationType !== 'Path' && !annotation.formFieldAnnotationType) {\n                        if (this.commandHandler.enableToolbar && Browser.isDevice && !this.commandHandler.enableDesktopMode) {\n                            this.commandHandler.toolbarModule.showToolbar(true);\n                        }\n                        this.commandHandler.fireAnnotationUnSelect(annotation.annotName, annotation.pageIndex, annotation);\n                    }\n                    // eslint-disable-next-line max-len\n                    if (selectedObject.formFields.length === 0 && this.commandHandler.formDesignerModule && formField && formField.formFieldAnnotationType) {\n                        // eslint-disable-next-line\n                        var field = { name: formField.name, id: formField.id, value: formField.value, fontFamily: formField.fontFamily, fontSize: formField.fontSize, fontStyle: formField.fontStyle,\n                            // eslint-disable-next-line\n                            color: formField.color, backgroundColor: formField.backgroundColor, alignment: formField.alignment, isReadonly: formField.isReadOnly, visibility: formField.visibility,\n                            // eslint-disable-next-line\n                            maxLength: formField.maxLength, isRequired: formField.isRequired, isPrint: formField.isPrint, rotation: formField.rotation, tooltip: formField.tooltip,\n                            // eslint-disable-next-line\n                            options: formField.options, isChecked: formField.isChecked, isSelected: formField.isSelected };\n                        this.commandHandler.fireFormFieldUnselectEvent('formFieldUnselect', field, formField.pageIndex);\n                    }\n                    else if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id && this.commandHandler.formFields && event.type === 'mousedown') {\n                        for (var i = 0; i < this.commandHandler.formFields.length; i++) {\n                            var formField_1 = this.commandHandler.formFields[i];\n                            if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id === formField_1.id) {\n                                // eslint-disable-next-line\n                                var field = {\n                                    value: formField_1.value, fontFamily: formField_1.fontFamily, fontSize: formField_1.fontSize, fontStyle: formField_1.fontStyle,\n                                    // eslint-disable-next-line\n                                    color: formField_1.color, backgroundColor: formField_1.backgroundColor, alignment: formField_1.alignment, isReadonly: formField_1.isReadonly, visibility: formField_1.visibility,\n                                    // eslint-disable-next-line\n                                    maxLength: formField_1.maxLength, isRequired: formField_1.isRequired, isPrint: formField_1.isPrint, rotation: formField_1.rotateAngle, tooltip: formField_1.tooltip,\n                                    // eslint-disable-next-line\n                                    options: formField_1.options, isChecked: formField_1.isChecked, isSelected: formField_1.isSelected\n                                };\n                                if (!object) {\n                                    this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                                    this.pdfViewerBase.currentTarget = null;\n                                }\n                                else {\n                                    if (this.pdfViewerBase.currentTarget.id != event.target.id && event.target.className != 'e-pv-text-layer') {\n                                        this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                                        this.pdfViewerBase.currentTarget = null;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // } else {\n        //     if (!isNullOrUndefined(this.commandHandler))\n        //         this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        // }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse move event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.mouseEventHelper(args);\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse leave event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/** @hidden */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, base) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        /**   @private  */\n        _this.prevNode = null;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse down event arguments.\n     * @returns {void}\n     */\n    MoveTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.offset = { x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY };\n        this.startPosition = args.position;\n        var nodeMouseDown = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: nodeMouseDown.wrapper.offsetX, y: nodeMouseDown.wrapper.offsetY,\n                width: nodeMouseDown.wrapper.actualSize.width, height: nodeMouseDown.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(nodeMouseDown)) {\n            this.redoElement.vertexPoints = nodeMouseDown.vertexPoints;\n            this.redoElement.leaderHeight = nodeMouseDown.leaderHeight;\n        }\n        this.inAction = true;\n    };\n    /**\n     * @private\n     * @param {any} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    MoveTool.prototype.mouseUp = function (args) {\n        if (this.commandHandler && args.source) {\n            this.checkisAnnotationMove(args);\n            var currentSelctor = args.source.annotationSelectorSettings;\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.select([args.source.id], currentSelctor);\n            // eslint-disable-next-line max-len\n            this.commandHandler.dragSelectedObjects(this.calculateMouseActionXDiff(args), this.calculateMouseActionYDiff(args), this.pdfViewerBase.activeElements.activePageID, currentSelctor, null);\n            if (args.source && (args.source.formFieldAnnotationType === 'Textbox' || args.source.formFieldAnnotationType === 'Checkbox'\n                || args.source.formFieldAnnotationType === 'RadioButton' || args.source.formFieldAnnotationType === 'ListBox'\n                || args.source.formFieldAnnotationType === 'SignatureField' || args.source.formFieldAnnotationType === 'InitialField' || args.source.formFieldAnnotationType === 'DropdownList'\n                || args.source.formFieldAnnotationType === 'PasswordField')) {\n                this.commandHandler.formDesignerModule.updateHTMLElement(args.source);\n            }\n            this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n            this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n            this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n            // eslint-disable-next-line\n            var newShapeObject = {\n                bounds: {\n                    x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                }, modifiedDate: args.source.modifiedDate\n            };\n            if (isLineShapes(args.source)) {\n                newShapeObject.vertexPoints = args.source.vertexPoints;\n                newShapeObject.leaderHeight = args.source.leaderHeight;\n            }\n            if (args.target && args.target.formFieldAnnotationType) {\n                var node = args.target;\n                var field = {\n                    // eslint-disable-next-line\n                    value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color, backgroundColor: node.backgroundColor, borderColor: node.borderColor,\n                    // eslint-disable-next-line\n                    thickness: node.thickness, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip, options: node.options,\n                    // eslint-disable-next-line\n                    isChecked: node.isChecked, isSelected: node.isSelected\n                };\n                // eslint-disable-next-line max-len\n                var currentPosition = { X: args.source.wrapper.offsetX, Y: args.source.wrapper.offsetY, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                // eslint-disable-next-line max-len\n                var previousPosition = { X: this.offset.x, Y: this.offset.y, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                this.commandHandler.fireFormFieldMoveEvent('formFieldMove', field, node.pageIndex, previousPosition, currentPosition);\n            }\n            if (this.commandHandler.annotation) {\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Drag', '', this.redoElement, newShapeObject);\n                this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Drag');\n                this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n            }\n        }\n        var shapeAnnotationType = this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].shapeAnnotationType : null;\n        if (shapeAnnotationType && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n            _super.prototype.mouseUp.call(this, args);\n        }\n        else if (this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n            _super.prototype.mouseUp.call(this, args);\n        }\n    };\n    MoveTool.prototype.calculateMouseXDiff = function () {\n        if (this.currentPosition && this.startPosition) {\n            return this.currentPosition.x - this.startPosition.x;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseYDiff = function () {\n        if (this.currentPosition && this.startPosition) {\n            return this.currentPosition.y - this.startPosition.y;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseActionXDiff = function (args) {\n        var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n        // let y: number = this.calculateMouseYDiff() / this.commandHandler.magnification.zoomFactor;\n        if (this.offset) {\n            var requiredX = this.offset.x + x;\n            // let requiredY: number = this.offset.y + y;\n            return requiredX - args.source.wrapper.offsetX;\n            //let diffY: number = requiredY - args.source.wrapper.offsetY;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseActionYDiff = function (args) {\n        // let x: number = this.calculateMouseXDiff() / this.commandHandler.magnification.zoomFactor;\n        var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n        if (this.offset) {\n            // let requiredX: number = this.offset.x + x;\n            var requiredY = this.offset.y + y;\n            // let diffX: number = requiredX - args.source.wrapper.offsetX;\n            return requiredY - args.source.wrapper.offsetY;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isStamp - Specified the stamp annotation or not.\n     * @param {boolean} isSkip - Specified the annotation skip or not.\n     * @returns {boolean} - Returns the true or false.\n     */\n    MoveTool.prototype.mouseMove = function (args, isStamp, isSkip) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.currentPosition = args.position;\n            this.currentTarget = args.target;\n            var currentSelctor = args.source.annotationSelectorSettings;\n            var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n            var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n            var requiredX = this.offset.x + x;\n            var requiredY = this.offset.y + y;\n            var diffX = this.calculateMouseActionXDiff(args);\n            var diffY = this.calculateMouseActionYDiff(args);\n            var selectedItem = this.commandHandler.selectedItems.annotations[0];\n            var cobject = void 0;\n            if (!this.helper) {\n                // eslint-disable-next-line\n                cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n                if (cobject.wrapper) {\n                    diffX = requiredX - cobject.wrapper.offsetX;\n                    diffY = requiredY - cobject.wrapper.offsetY;\n                    // eslint-disable-next-line max-len\n                    cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n                }\n                cobject.wrapper = undefined;\n                cobject.id = 'diagram_helper';\n                if (cobject.shapeAnnotationType === 'Stamp') {\n                    cobject.strokeColor = '';\n                    cobject.borderDashArray = '';\n                    cobject.fillColor = 'transparent';\n                    cobject.stampFillColor = 'transparent';\n                    cobject.data = '';\n                }\n                else if (cobject.shapeAnnotationType === 'FreeText') {\n                    cobject.strokeColor = 'blue';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 1;\n                    cobject.opacity = 1;\n                    cobject.dynamicText = '';\n                }\n                else if (cobject.shapeAnnotationType === 'SignatureText') {\n                    cobject.strokeColor = 'red';\n                    cobject.borderDashArray = '5,5';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 2;\n                    cobject.opacity = 1;\n                    cobject.data = '';\n                }\n                else {\n                    cobject.strokeColor = 'red';\n                    cobject.borderDashArray = '5,5';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 2;\n                    cobject.opacity = 1;\n                }\n                if (cobject.enableShapeLabel === true) {\n                    cobject.labelContent = '';\n                }\n                var shapeAnnotationType = cobject.shapeAnnotationType;\n                if (!isStamp && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n                    this.helper = cobject = this.commandHandler.add(cobject);\n                }\n                else {\n                    cobject = this.helper = args.source;\n                }\n                if (this.commandHandler.selectedItems.annotations.length > 0) {\n                    this.commandHandler.selectedItems.annotations = [cobject];\n                }\n                else {\n                    this.commandHandler.selectedItems.formFields = [cobject];\n                }\n            }\n            else {\n                diffX = requiredX - this.helper.wrapper.offsetX;\n                diffY = requiredY - this.helper.wrapper.offsetY;\n            }\n            if (this.helper && this.helper.shapeAnnotationType === 'Stamp') {\n                isStamp = true;\n            }\n            // eslint-disable-next-line max-len\n            if (this.commandHandler.checkBoundaryConstraints(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, this.helper.wrapper.bounds, isStamp, isSkip)) {\n                var shapeAnnotationType = this.helper.shapeAnnotationType;\n                if (this.helper && (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage')) {\n                    this.checkisAnnotationMove(args);\n                    // eslint-disable-next-line max-len\n                    var currentSelctor_1 = args.source.annotationSelectorSettings;\n                    this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    this.commandHandler.select([args.source.id], currentSelctor_1);\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor_1, this.helper);\n                    this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor_1);\n                }\n                else {\n                    this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor, this.helper);\n                }\n                this.prevNode = this.helper;\n                this.prevPosition = this.currentPosition;\n            }\n            else {\n                this.currentPosition = this.prevPosition;\n            }\n            if (selectedItem && selectedItem.annotName) {\n                this.commandHandler.annotation.triggerAnnotationMove(selectedItem, true);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    MoveTool.prototype.mouseLeave = function (args) {\n        var currentSelctor = args.source.annotationSelectorSettings;\n        var requiredX = this.offset.x + this.calculateMouseXDiff();\n        var requiredY = this.offset.y + this.calculateMouseYDiff();\n        var diffX = requiredX - args.source.wrapper.offsetX;\n        var diffY = requiredY - args.source.wrapper.offsetY;\n        this.commandHandler.dragSelectedObjects(diffX, diffY, this.prevPageId, currentSelctor, null);\n        this.commandHandler.renderSelector(this.prevPageId, currentSelctor);\n        _super.prototype.mouseLeave.call(this, args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    MoveTool.prototype.checkisAnnotationMove = function (args) {\n        // eslint-disable-next-line max-len\n        if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n            if (this.commandHandler.selectedItems.annotations[0].annotName === args.source.annotName) {\n                this.commandHandler.viewerBase.isAnnotationMouseMove = true;\n            }\n        }\n        else {\n            this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n        }\n        // eslint-disable-next-line max-len\n        if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n            if (this.commandHandler.selectedItems.formFields[0].name === args.source.name) {\n                this.commandHandler.viewerBase.isFormFieldMouseMove = true;\n            }\n        }\n        else {\n            this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n        }\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/** @hidden */\nvar StampTool = /** @class */ (function (_super) {\n    __extends(StampTool, _super);\n    function StampTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {any} - Returns the mouse up event.\n     */\n    // eslint-disable-next-line\n    StampTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns the true or false.\n     */\n    StampTool.prototype.mouseMove = function (args) {\n        // eslint-disable-next-line\n        var newObject;\n        if (!this.inAction) {\n            var pageIndex = this.pdfViewerBase.activeElements.activePageID;\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            // eslint-disable-next-line max-len\n            var nodeElement = this.commandHandler.annotation.stampAnnotationModule.moveStampElement(args.position.x, args.position.y, pageIndex);\n            if (nodeElement.shapeAnnotationType === 'SignatureText') {\n                var textWidth = this.getTextWidth(nodeElement.data, nodeElement.fontSize, nodeElement.fontFamily);\n                var widthRatio = 1;\n                if (textWidth > nodeElement.bounds.width)\n                    widthRatio = nodeElement.bounds.width / textWidth;\n                nodeElement.fontSize = this.getFontSize(Math.floor((nodeElement.fontSize * widthRatio)));\n                var defaultFontSize = 32; // default font size.\n                nodeElement.bounds.height = nodeElement.fontSize < defaultFontSize ? nodeElement.fontSize * 2 : nodeElement.bounds.height;\n                nodeElement.thickness = 0;\n            }\n            newObject = this.commandHandler.add(nodeElement);\n            args.source = this.commandHandler.annotations[this.commandHandler.annotations.length - 1];\n            args.sourceWrapper = args.source.wrapper;\n            this.inAction = true;\n            // eslint-disable-next-line\n            var currentSource = args.source;\n            if (currentSource && (currentSource.shapeAnnotationType === 'HandWrittenSignature' || currentSource.shapeAnnotationType === 'SignatureText' || currentSource.shapeAnnotationType === 'SignatureImage')) {\n                this['offset'] = { x: args.source.wrapper.offsetX - (args.source.wrapper.bounds.width / 2), y: args.source.wrapper.offsetY - (args.source.wrapper.bounds.height / 2) };\n            }\n            else {\n                this['offset'] = { x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY };\n            }\n            this.startPosition = args.position;\n            this.commandHandler.select([newObject.id]);\n        }\n        var currentSelctor = args.source.annotationSelectorSettings;\n        _super.prototype.mouseMove.call(this, args, true, true);\n        this.commandHandler.renderSelector(args.source.pageIndex, currentSelctor);\n        return this.inAction;\n    };\n    StampTool.prototype.getTextWidth = function (text, font, fontFamily) {\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var fontName;\n        if (font) {\n            fontName = font + 'px' + ' ' + fontFamily;\n        }\n        context.font = fontName || getComputedStyle(document.body).font;\n        return context.measureText(text).width;\n    };\n    /**\n     * @param {number} fontSize - Font size.\n     * @returns {number} - Returns the font size.\n     */\n    StampTool.prototype.getFontSize = function (fontSize) {\n        return (fontSize % 2 === 0) ? fontSize : --fontSize;\n    };\n    return StampTool;\n}(MoveTool));\nexport { StampTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar InkDrawingTool = /** @class */ (function (_super) {\n    __extends(InkDrawingTool, _super);\n    function InkDrawingTool(commandHandler, base, sourceObject) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.mouseDown = function (args) {\n        this.pdfViewerBase.disableTextSelectionMode();\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        // eslint-disable-next-line\n        var node = { currentPosition: this.currentPosition, prevPosition: this.prevPosition };\n        this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    InkDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            // eslint-disable-next-line\n            var node = { currentPosition: this.currentPosition, prevPosition: this.pdfViewerBase.prevPosition };\n            this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n        }\n        return this.inAction;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true.\n     */\n    InkDrawingTool.prototype.mouseUp = function (args) {\n        this.commandHandler.annotation.inkAnnotationModule.storePathData();\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.mouseLeave = function (args) {\n        //this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return InkDrawingTool;\n}(ToolBase));\nexport { InkDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, base, endPoint) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.annotations) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            connectors = args.source.annotations[0];\n        }\n        this.initialPosition = args.position;\n        this.prevSource = this.commandHandler.selectedItems.annotations[0];\n        var nodeElement = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: nodeElement.wrapper.offsetX, y: nodeElement.wrapper.offsetY,\n                width: nodeElement.wrapper.actualSize.width, height: nodeElement.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(nodeElement)) {\n            this.redoElement.vertexPoints = nodeElement.vertexPoints;\n            this.redoElement.leaderHeight = nodeElement.leaderHeight;\n            if (nodeElement.measureType === 'Distance' || nodeElement.measureType === 'Perimeter' || nodeElement.measureType === 'Area' || nodeElement.measureType === 'Volume') {\n                this.redoElement.notes = nodeElement.notes;\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseUp = function (args) {\n        if (this.commandHandler) {\n            var node = this.commandHandler.selectedItems.annotations[0];\n            if (node) {\n                // eslint-disable-next-line\n                var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n                var annotationMaxHeight = 0;\n                var annotationMaxWidth = 0;\n                var annotationMinHeight = 0;\n                var annotationMinWidth = 0;\n                // eslint-disable-next-line max-len\n                if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n                    annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n                    annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n                    annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n                    annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n                }\n                if (node.vertexPoints.length > 3) {\n                    // eslint-disable-next-line\n                    var sizeObject = this.commandHandler.viewerBase.checkAnnotationWidth(node.vertexPoints);\n                    var width = sizeObject.width;\n                    var height = sizeObject.height;\n                    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n                        // eslint-disable-next-line max-len\n                        if ((height > annotationMinHeight && height < annotationMaxHeight) || (width > annotationMinWidth && width < annotationMaxWidth)) {\n                            // eslint-disable-next-line max-len\n                            this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                    }\n                }\n                else {\n                    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n                        if (node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'LineWidthArrowHead') {\n                            var x = 0;\n                            var y = 0;\n                            if (node.vertexPoints[0].x > node.vertexPoints[1].x) {\n                                x = node.vertexPoints[0].x - node.vertexPoints[1].x;\n                            }\n                            else {\n                                x = node.vertexPoints[1].x - node.vertexPoints[0].x;\n                            }\n                            if (node.vertexPoints[0].y > node.vertexPoints[1].y) {\n                                y = node.vertexPoints[0].y - node.vertexPoints[1].y;\n                            }\n                            else {\n                                y = node.vertexPoints[1].y - node.vertexPoints[0].y;\n                            }\n                            var diff = (x > y) ? x : y;\n                            if (diff < (annotationMaxHeight || annotationMaxWidth) && diff > (annotationMinHeight || annotationMinWidth)) {\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                            }\n                        }\n                        else {\n                            // eslint-disable-next-line max-len\n                            this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                    }\n                }\n                var currentSelctor = args.source.annotationSelectorSettings;\n                this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                this.commandHandler.select([this.prevSource.id], currentSelctor);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n                // eslint-disable-next-line\n                var newShapeElementObject = {\n                    bounds: {\n                        x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                        width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                    }\n                };\n                if (node.measureType === 'Distance' || node.measureType === 'Perimeter' || node.measureType === 'Area' || node.measureType === 'Volume') {\n                    this.commandHandler.annotation.updateCalibrateValues(this.commandHandler.selectedItems.annotations[0]);\n                    newShapeElementObject.notes = args.source.notes;\n                }\n                if (isLineShapes(args.source)) {\n                    newShapeElementObject.vertexPoints = args.source.vertexPoints;\n                    newShapeElementObject.leaderHeight = args.source.leaderHeight;\n                }\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newShapeElementObject);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var connector;\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            if (args.source && args.source.annotations) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                connector = args.source.annotations[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (!this.helper) {\n                    // eslint-disable-next-line\n                    var cloneShapebject = cloneObject(this.commandHandler.selectedItems.annotations[0]);\n                    cloneShapebject.id = 'diagram_helper';\n                    cloneShapebject.strokeColor = 'red';\n                    cloneShapebject.borderDashArray = '5,5';\n                    cloneShapebject.fillColor = 'transparent';\n                    cloneShapebject.thickness = 2;\n                    cloneShapebject.opacity = 1;\n                    if (cloneShapebject.enableShapeLabel === true) {\n                        cloneShapebject.labelContent = '';\n                    }\n                    this.helper = cloneShapebject = this.commandHandler.add(cloneShapebject);\n                    this.commandHandler.selectedItems.annotations = [cloneShapebject];\n                }\n                var currentSelctor = args.source.annotationSelectorSettings;\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.helper, this.currentPosition, this.selectedSegment, args.target, null, currentSelctor);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Scales the selected objects\n *\n * @hidden\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, base, corner) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n        this.initialPosition = args.position;\n        var node = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: node.wrapper.offsetX, y: node.wrapper.offsetY,\n                width: node.wrapper.actualSize.width, height: node.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(node)) {\n            this.redoElement.vertexPoints = node.vertexPoints;\n            this.redoElement.leaderHeight = node.leaderHeight;\n        }\n        if (node.measureType === 'Radius') {\n            this.redoElement.notes = node.notes;\n        }\n        // eslint-disable-next-line max-len\n        this.prevSource = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0] : this.commandHandler.selectedItems.formFields[0];\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isPreventHistory - Specified the prevent history value.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        var object = args.source;\n        var oldObject = cloneObject(args.source);\n        if (this.commandHandler && this.prevSource) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.viewerBase.isAnnotationSelect = true;\n            this.commandHandler.viewerBase.isFormFieldSelect = true;\n            this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n            // eslint-disable-next-line max-len\n            var deltaValues = this.updateSize(this.prevSource, this.currentPosition, this.initialPosition, this.corner, this.initialBounds, null, true);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.initialPosition, this.prevSource, args.info.ctrlKey);\n            if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations &&\n                this.commandHandler.selectedItems.annotations[0] && this.commandHandler.selectedItems.annotations[0].shapeAnnotationType === 'Stamp') {\n                if (this.commandHandler.stampSettings.minHeight || this.commandHandler.stampSettings.minWidth) {\n                    this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n                }\n            }\n            if (this.commandHandler.selectedItems.formFields.length > 0 && (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Textbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Checkbox'\n                || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'RadioButton' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'InitialField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField'\n                || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'DropdownList' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'ListBox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'PasswordField')) {\n                this.commandHandler.formDesignerModule.updateHTMLElement(this.commandHandler.selectedItems.formFields[0]);\n            }\n            this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n            if (this.commandHandler.annotation && args.source.wrapper) {\n                // eslint-disable-next-line\n                var newObject = {\n                    bounds: {\n                        x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                        width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                    }\n                };\n                if (isLineShapes(args.source)) {\n                    newObject.vertexPoints = args.source.vertexPoints;\n                    newObject.leaderHeight = args.source.leaderHeight;\n                }\n                if (this.prevSource.measureType === 'Radius') {\n                    newObject.notes = args.source.notes;\n                    this.commandHandler.annotation.updateCalibrateValues(this.prevSource);\n                }\n                if (this.prevSource.shapeAnnotationType === 'SignatureText') {\n                    var boundsRatio = newObject.bounds.width / oldObject.width;\n                    newObject.fontSize = this.prevSource.wrapper.children[1].style.fontSize * boundsRatio;\n                    if (args.target != null) {\n                        args.target.fontSize = newObject.fontSize;\n                        // eslint-disable-next-line\n                        args.target.wrapper.children[1].style.fontSize = newObject.fontSize;\n                        args.target.wrapper.children[1].horizontalAlignment = 'Center';\n                        args.target.wrapper.children[1].verticalAlignment = 'Center';\n                        args.target.wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                        // eslint-disable-next-line\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].style.fontSize = newObject.fontSize;\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].horizontalAlignment = 'Center';\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].verticalAlignment = 'Center';\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                        this.commandHandler.selectedItems.annotations[0].fontSize = newObject.fontSize;\n                    }\n                }\n                if ((this.prevSource.shapeAnnotationType === 'SignatureText') && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.nodePropertyChange(this.commandHandler.selectedItems.annotations[0], { fontSize: newObject.fontSize });\n                }\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newObject);\n            }\n            if (args.target && args.target.formFieldAnnotationType) {\n                var node = args.target;\n                // eslint-disable-next-line\n                var field = { value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                    // eslint-disable-next-line\n                    options: node.options, isChecked: node.isChecked, isSelected: node.isSelected };\n                // eslint-disable-next-line max-len\n                var currentPosition = { X: args.source.wrapper.offsetX, Y: args.source.wrapper.offsetY, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                // eslint-disable-next-line max-len\n                var previousPosition = { X: this.initialBounds.x, Y: this.initialBounds.y, Width: this.initialBounds.width, Height: this.initialBounds.height };\n                this.commandHandler.fireFormFieldResizeEvent('formFieldResize', field, node.pageIndex, previousPosition, currentPosition);\n            }\n            if (this.commandHandler.annotation && this.commandHandler.annotation.stampAnnotationModule) {\n                this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, this.prevSource.id, 'Resize');\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object = args.source;\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        x = x / this.commandHandler.viewerBase.getZoomFactor();\n        y = y / this.commandHandler.viewerBase.getZoomFactor();\n        // eslint-disable-next-line\n        var annotationElement = args.source;\n        // eslint-disable-next-line\n        var size = this.getPoints(x, y);\n        var width = annotationElement.width + size.x;\n        var height = annotationElement.height + size.y;\n        // eslint-disable-next-line\n        var obj = object;\n        if (object && object.annotations) {\n            // eslint-disable-next-line\n            obj = object.annotations[0];\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            // eslint-disable-next-line max-len\n            if ((height >= annotationMinHeight && height <= annotationMaxHeight) && (width >= annotationMinWidth && width <= annotationMaxWidth)) {\n                // eslint-disable-next-line\n                x = x;\n                // eslint-disable-next-line\n                y = y;\n            }\n            else {\n                if (height < annotationMinHeight || height > annotationMaxHeight) {\n                    if (height < annotationMinHeight) {\n                        y = annotationMinHeight - annotationElement.height;\n                    }\n                    else {\n                        y = annotationMaxHeight - annotationElement.height;\n                    }\n                }\n                if (width < annotationMinWidth || width > annotationMaxWidth) {\n                    if (width < annotationMinWidth) {\n                        x = annotationMinWidth - annotationElement.width;\n                    }\n                    else {\n                        x = annotationMaxWidth - annotationElement.width;\n                    }\n                }\n            }\n        }\n        var changes = { x: x, y: y };\n        if (this.currentElement.wrapper) {\n            changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        }\n        changes = this.getChanges(changes);\n        this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n        if (!this.helper) {\n            // eslint-disable-next-line\n            var cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n            cobject.id = 'diagram_helper';\n            if (cobject.shapeAnnotationType === 'Stamp') {\n                cobject.strokeColor = '';\n                cobject.borderDashArray = '';\n                cobject.fillColor = 'transparent';\n                cobject.stampFillColor = 'transparent';\n                cobject.data = '';\n            }\n            else if (cobject.shapeAnnotationType === 'FreeText') {\n                cobject.strokeColor = 'blue';\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 1;\n                cobject.opacity = 1;\n                cobject.dynamicText = '';\n            }\n            else {\n                // eslint-disable-next-line max-len\n                cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n                cobject.strokeColor = 'red';\n                cobject.borderDashArray = '5,5';\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 2;\n                cobject.opacity = 1;\n            }\n            if (cobject.enableShapeLabel === true) {\n                cobject.labelContent = '';\n            }\n            if (cobject.shapeAnnotationType === 'SignatureText') {\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 1;\n                cobject.opacity = 1;\n                cobject.data = '';\n            }\n            this.helper = cobject = this.commandHandler.add(cobject);\n            if (this.commandHandler.selectedItems.annotations.length > 0) {\n                this.commandHandler.selectedItems.annotations = [cobject];\n            }\n            else {\n                this.commandHandler.selectedItems.formFields = [cobject];\n            }\n        }\n        var deltaValues = this.updateSize(this.helper, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        // eslint-disable-next-line max-len\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, this.helper, args.info.ctrlKey));\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (pdfAnnotationBaseModel) {\n        return 'W:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.width) + ' ' + 'H:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    ResizeTool.prototype.getPoints = function (x, y) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: x, y: 0 };\n            case 'ResizeSouthEast':\n                return { x: x, y: y };\n            case 'ResizeSouth':\n                return { x: 0, y: y };\n            case 'ResizeNorth':\n                return { x: 0, y: -y };\n            case 'ResizeNorthEast':\n                return { x: x, y: -y };\n            case 'ResizeNorthWest':\n                return { x: -x, y: -y };\n            case 'ResizeWest':\n                return { x: -x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -x, y: y };\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     * Aspect ratio used to resize the width or height based on resizing the height or width.\n     *\n     * @param {number} deltaWidth - Specified the delta width.\n     * @param {number} deltaHeight - Specified the delta height.\n     * @param {string} corner - Specified the corner value.\n     * @param {PointModel} startPoint - Specified the start point of the annotation.\n     * @param {PointModel} endPoint - Specified the end point of the annotation.\n     * @param {SelectorModel | PdfAnnotationBaseModel} source - Specified the annotation object.\n     * @param {boolean} isCtrlKeyPressed - becomes true when ctrl Key is pressed.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source, isCtrlKeyPressed) {\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(source) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        x = x / this.commandHandler.viewerBase.getZoomFactor();\n        y = y / this.commandHandler.viewerBase.getZoomFactor();\n        // eslint-disable-next-line\n        var annotationElement = source;\n        // eslint-disable-next-line\n        var size = this.getPoints(x, y);\n        var width = annotationElement.bounds.width + size.x;\n        var height = annotationElement.bounds.height + size.y;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (source instanceof Selector && source.annotations.length === 1 &&\n            (source.annotations[0].shapeAnnotationType === 'Perimeter' || source.annotations[0].shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp')) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        else if (source.shapeAnnotationType === 'Image' || (source.shapeAnnotationType === 'HandWrittenSignature' || source.shapeAnnotationType === 'SignatureText' || source.shapeAnnotationType === 'SignatureImage')) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                if (isCtrlKeyPressed) {\n                    if (width >= annotationMaxWidth && height < annotationMaxHeight) {\n                        deltaHeight = Math.max(deltaHeight, deltaWidth);\n                    }\n                    if (height >= annotationMaxHeight && width < annotationMaxWidth) {\n                        deltaWidth = Math.max(deltaHeight, deltaWidth);\n                    }\n                    if (width < annotationMaxWidth && height < annotationMaxHeight) {\n                        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n                    }\n                }\n            }\n            if (!isCtrlKeyPressed) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n        }\n        else {\n            if (source.shapeAnnotationType === 'Perimeter' || source.shapeAnnotationType === 'Radius'\n                || source.shapeAnnotationType === 'Stamp') {\n                if (source.shapeAnnotationType === 'Stamp') {\n                    if (!annotationMaxHeight && !deltaHeight) {\n                        deltaHeight = Math.max(deltaHeight === 1 ? 0 : deltaHeight);\n                    }\n                    if (!annotationMaxWidth && !deltaWidth) {\n                        deltaWidth = Math.max(deltaWidth === 1 ? 0 : deltaWidth);\n                    }\n                }\n                else {\n                    if (!annotationMaxHeight || !annotationMaxWidth) {\n                        if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                            deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                        }\n                    }\n                }\n            }\n        }\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, base, sourceObject) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        if (!isNaN(this.pdfViewerBase.activeElements.activePageID) && event.target.className != 'e-pv-page-container') {\n            _super.prototype.mouseDown.call(this, args);\n            this.inAction = true;\n            var node = { bounds: { x: 100, y: 300, width: 100, height: 100 }, pageIndex: 0, strokeColor: 'red', thickness: 3 };\n            node.id = randomId();\n            this.sourceObject.pageIndex = node.pageIndex = this.pdfViewerBase.activeElements.activePageID || 0;\n            this.sourceObject.enableShapeLabel = this.commandHandler.enableShapeLabel;\n            this.pdfViewerBase.updateFreeTextProperties(this.sourceObject);\n            this.isFormDesign = false;\n            // eslint-disable-next-line\n            var formFieldElement = document.getElementById('FormField_helper_html_element');\n            if (formFieldElement) {\n                formFieldElement.remove();\n            }\n            // eslint-disable-next-line\n            this.commandHandler.drawingObject = this.drawingObject = this.commandHandler.add(this.sourceObject || node);\n            if (this.drawingObject.formFieldAnnotationType === 'Textbox' || this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField' ||\n                this.drawingObject.formFieldAnnotationType === 'Checkbox' || this.drawingObject.formFieldAnnotationType === 'ListBox' || this.drawingObject.formFieldAnnotationType === 'RadioButton' ||\n                this.drawingObject.formFieldAnnotationType === 'DropdownList' || this.drawingObject.formFieldAnnotationType === 'PasswordField') {\n                this.inAction = false;\n                // eslint-disable-next-line\n                this.drawingObject.pageNumber = this.pdfViewerBase.getActivePage(true);\n                // eslint-disable-next-line\n                var bounds = this.commandHandler.formDesignerModule.updateFormFieldInitialSize(this.drawingObject.wrapper.children[0], this.drawingObject.formFieldAnnotationType);\n                var pageWidth = this.pdfViewerBase.pageContainer.firstElementChild.clientWidth - bounds.width;\n                var pageHeight = this.pdfViewerBase.pageContainer.firstElementChild.clientHeight - bounds.height;\n                // eslint-disable-next-line\n                var left = this.pdfViewerBase.pageContainer.firstElementChild.offsetLeft;\n                var offsetX = void 0;\n                // eslint-disable-next-line\n                if (this.currentPosition.y >= pageHeight && event.target && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object')) {\n                    // eslint-disable-next-line\n                    var targetParentRect = event.path[3].getBoundingClientRect();\n                    // eslint-disable-next-line\n                    offsetX = event.clientX - targetParentRect.left;\n                }\n                else {\n                    offsetX = this.currentPosition.x - left;\n                }\n                // eslint-disable-next-line\n                var rect = void 0;\n                if (this.currentPosition.x >= pageWidth && this.currentPosition.y >= pageHeight) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: pageWidth, y: pageHeight, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else if (this.currentPosition.x >= pageWidth) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: pageWidth, y: this.currentPosition.y, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else if (this.currentPosition.y >= pageHeight) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: offsetX, y: pageHeight, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else {\n                    // eslint-disable-next-line max-len\n                    rect = { x: this.currentPosition.x, y: this.currentPosition.y, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                this.updateNodeDimension(this.drawingObject, rect);\n                this.commandHandler.formFieldCollection.push(this.drawingObject);\n                // eslint-disable-next-line max-len\n                var formField = {\n                    id: this.drawingObject.id, name: this.drawingObject.name, value: this.drawingObject.value,\n                    // eslint-disable-next-line max-len\n                    type: this.drawingObject.formFieldAnnotationType, isReadOnly: this.drawingObject.isReadonly, fontFamily: this.drawingObject.fontFamily,\n                    // eslint-disable-next-line max-len\n                    fontSize: this.drawingObject.fontSize, fontStyle: this.drawingObject.fontStyle, color: this.drawingObject.color, backgroundColor: this.drawingObject.backgroundColor,\n                    // eslint-disable-next-line max-len\n                    alignment: this.drawingObject.alignment, visibility: this.drawingObject.visibility, maxLength: this.drawingObject.maxLength, isRequired: this.drawingObject.isRequired,\n                    // eslint-disable-next-line max-len\n                    isPrint: this.drawingObject.isPrint, isSelected: this.drawingObject.isSelected, isChecked: this.drawingObject.isChecked, tooltip: this.drawingObject.tooltip, bounds: this.drawingObject.bounds, thickness: this.drawingObject.thickness, borderColor: this.drawingObject.borderColor,\n                    signatureIndicatorSettings: this.drawingObject.signatureIndicatorSettings\n                };\n                this.commandHandler.formFieldCollections.push(formField);\n                // eslint-disable-next-line max-len\n                this.commandHandler.formDesignerModule.drawHTMLContent(this.drawingObject.formFieldAnnotationType, this.drawingObject.wrapper.children[0], this.drawingObject, this.drawingObject.pageIndex, this.commandHandler);\n                this.commandHandler.select([this.commandHandler.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n                if (this.commandHandler.annotation) {\n                    this.commandHandler.annotation.addAction(this.pdfViewerBase.getActivePage(true), null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                }\n                this.endAction();\n                this.pdfViewerBase.tool = null;\n                this.pdfViewerBase.action = 'Select';\n                this.drawingObject = null;\n                this.pdfViewerBase.isMouseDown = false;\n                this.pdfViewerBase.pdfViewer.drawingObject = null;\n                this.isFormDesign = true;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.dragging = true;\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.updateNodeDimension(this.drawingObject, rect);\n            if (this.drawingObject.shapeAnnotationType === 'Radius') {\n                this.updateRadiusLinePosition(this.drawingObject.wrapper.children[1], this.drawingObject);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.dragging) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.select([this.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n            this.commandHandler.annotation.updateCalibrateValues(this.drawingObject, true);\n            if (this.commandHandler && !this.isFormDesign) {\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n            }\n            this.drawingObject = null;\n            this.dragging = false;\n            _super.prototype.mouseUp.call(this, args);\n            this.inAction = false;\n        }\n        else {\n            _super.prototype.mouseUp.call(this, args);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {Rect} rect - Specified the annotation rect element.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.updateNodeDimension = function (obj, rect) {\n        var zoom = this.commandHandler.viewerBase.getZoomFactor();\n        obj.bounds.x = (rect.x / zoom) + rect.width / zoom;\n        obj.bounds.y = (rect.y / zoom) + rect.height / zoom;\n        obj.bounds.width = rect.width / zoom;\n        obj.bounds.height = rect.height / zoom;\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        if (annotationSettings.maxWidth || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            if (obj.bounds.width > annotationMaxWidth) {\n                obj.bounds.width = annotationMaxWidth;\n            }\n            if (obj.bounds.height > annotationMaxHeight) {\n                obj.bounds.height = annotationMaxHeight;\n            }\n            if (obj.bounds.height <= annotationMaxHeight && obj.bounds.width <= annotationMaxWidth) {\n                this.commandHandler.nodePropertyChange(obj, { bounds: obj.bounds });\n            }\n        }\n        else {\n            this.commandHandler.nodePropertyChange(obj, { bounds: obj.bounds });\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the annotation object.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.updateRadiusLinePosition = function (obj, node) {\n        var trasPoint = { x: node.bounds.x + (node.bounds.width / 4), y: node.bounds.y };\n        var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n        var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n        var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n        obj.offsetX = newPoint1.x;\n        obj.offsetY = newPoint1.y;\n        obj.width = node.bounds.width / 2;\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n        var annotationMaxWidth = 0;\n        if (annotationSettings.maxWidth) {\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            if (node.bounds.width > annotationMaxWidth) {\n                node.bounds.width = annotationMaxWidth;\n                obj.width = node.bounds.width / 2;\n            }\n        }\n        this.commandHandler.renderDrawing(undefined, node.pageIndex);\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n *\n * @hidden\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler, base, action) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var nodeAnnotElement = {\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPoint.x / this.pdfViewerBase.getZoomFactor(), y: this.startPoint.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                shapeAnnotationType: 'Line', fillColor: this.commandHandler.drawingObject.fillColor,\n                strokeColor: this.commandHandler.drawingObject.strokeColor, pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                // eslint-disable-next-line max-len\n                notes: this.commandHandler.drawingObject.notes, thickness: this.commandHandler.drawingObject.thickness, author: this.commandHandler.drawingObject.author,\n                subject: this.commandHandler.drawingObject.subject, borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n                modifiedDate: this.commandHandler.drawingObject.modifiedDate, borderStyle: this.commandHandler.drawingObject.borderStyle,\n                // eslint-disable-next-line max-len\n                measureType: this.commandHandler.drawingObject.measureType, enableShapeLabel: this.commandHandler.enableShapeLabel, opacity: this.commandHandler.drawingObject.opacity\n            };\n            this.pdfViewerBase.updateFreeTextProperties(nodeAnnotElement);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(nodeAnnotElement);\n        }\n        else {\n            var pt = void 0;\n            var obj = (this.drawingObject);\n            pt = obj.vertexPoints[obj.vertexPoints.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            var lastPoint = this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1];\n            if (!(lastPoint.x === pt.x && lastPoint.x === pt.y)) {\n                this.drawingObject.vertexPoints.push(pt);\n            }\n            this.commandHandler.nodePropertyChange(obj, { vertexPoints: obj.vertexPoints });\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.dragging = true;\n            var obj = (this.drawingObject);\n            if (this.drawingObject && this.currentPosition) {\n                obj.vertexPoints[obj.vertexPoints.length - 1].x = this.currentPosition.x / this.pdfViewerBase.getZoomFactor();\n                obj.vertexPoints[obj.vertexPoints.length - 1].y = this.currentPosition.y / this.pdfViewerBase.getZoomFactor();\n                this.commandHandler.nodePropertyChange(obj, { vertexPoints: obj.vertexPoints });\n            }\n            if (obj.measureType === 'Perimeter') {\n                updatePerimeterLabel(obj, obj.vertexPoints, this.commandHandler.annotation.measureAnnotationModule);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isDoubleClineck - Specified the double click event or not.\n     * @param {boolean} isMouseLeave - Specified the mouse leave event or not.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseUp = function (args, isDoubleClineck, isMouseLeave) {\n        _super.prototype.mouseMove.call(this, args);\n        // eslint-disable-next-line\n        var currentSelector;\n        if (args.source && args.annotationSelectorSettings !== null) {\n            currentSelector = args.source.annotationSelectorSettings;\n        }\n        if (this.drawingObject) {\n            // eslint-disable-next-line max-len\n            var bounds = new Rect(this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].x - 20, this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].y - 20, 40, 40);\n            var point = { x: this.drawingObject.vertexPoints[0].x, y: this.drawingObject.vertexPoints[0].y };\n            if ((bounds.containsPoint(point) || isDoubleClineck) && this.dragging) {\n                if (this.inAction) {\n                    this.inAction = false;\n                    if (this.drawingObject) {\n                        if (!isMouseLeave) {\n                            if (this.drawingObject.vertexPoints.length > 2) {\n                                this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                            }\n                        }\n                        if (this.action === 'Polygon') {\n                            if (!isMouseLeave) {\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1] = this.drawingObject.vertexPoints[0];\n                            }\n                            else {\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length] = this.drawingObject.vertexPoints[0];\n                            }\n                            this.commandHandler.nodePropertyChange(this.drawingObject, { vertexPoints: this.drawingObject.vertexPoints });\n                            var cobject = cloneObject(this.drawingObject);\n                            cobject.shapeAnnotationType = 'Polygon';\n                            cobject.bounds.width = cobject.wrapper.actualSize.width;\n                            cobject.bounds.height = cobject.wrapper.actualSize.height;\n                            cobject.bounds.x = this.drawingObject.wrapper.bounds.x;\n                            cobject.bounds.y = this.drawingObject.wrapper.bounds.y;\n                            this.commandHandler.add(cobject);\n                            this.commandHandler.remove(this.drawingObject);\n                            this.commandHandler.select([cobject.id], currentSelector);\n                            var drawingObject = this.commandHandler.selectedItems.annotations[0];\n                            if (drawingObject) {\n                                if (this.commandHandler.enableShapeAnnotation && (isNullOrUndefined(drawingObject.measureType) || drawingObject.measureType === '')) {\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.annotation.shapeAnnotationModule.renderShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                                }\n                                if (this.commandHandler.enableMeasureAnnotation && (drawingObject.measureType === 'Area' || drawingObject.measureType === 'Volume')) {\n                                    if (drawingObject.measureType === 'Area') {\n                                        // eslint-disable-next-line max-len\n                                        drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateArea(drawingObject.vertexPoints);\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                                    }\n                                    else if (drawingObject.measureType === 'Volume') {\n                                        // eslint-disable-next-line max-len\n                                        drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateVolume(drawingObject.vertexPoints);\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                                    }\n                                    if (drawingObject.enableShapeLabel) {\n                                        drawingObject.labelContent = drawingObject.notes;\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.nodePropertyChange(drawingObject, { vertexPoints: drawingObject.vertexPoints, notes: drawingObject.notes });\n                                    }\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isMouseLeave) {\n                                if (isDoubleClineck) {\n                                    this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                                }\n                            }\n                            this.commandHandler.nodePropertyChange(this.drawingObject, {\n                                // eslint-disable-next-line max-len\n                                vertexPoints: this.drawingObject.vertexPoints, sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes\n                            });\n                            this.commandHandler.select([this.drawingObject.id], currentSelector);\n                            if (this.commandHandler.enableMeasureAnnotation && this.drawingObject.measureType === 'Perimeter') {\n                                this.commandHandler.renderDrawing(null, this.drawingObject.pageIndex);\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculatePerimeter(this.drawingObject);\n                                if (this.drawingObject.enableShapeLabel) {\n                                    this.drawingObject.labelContent = this.drawingObject.notes;\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.nodePropertyChange(this.drawingObject, { vertexPoints: this.drawingObject.vertexPoints, notes: this.drawingObject.notes });\n                                }\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(this.drawingObject.annotName, this.drawingObject.notes);\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(this.drawingObject, this.drawingObject.pageIndex);\n                            }\n                        }\n                        var annotationObject = this.commandHandler.selectedItems.annotations[0];\n                        // eslint-disable-next-line\n                        this.commandHandler.annotation.addAction(this.pageIndex, null, annotationObject, 'Addition', '', annotationObject, annotationObject);\n                        this.drawingObject = null;\n                    }\n                }\n                this.endAction();\n            }\n            else if (this.inAction && !this.dragging) {\n                this.commandHandler.remove(this.drawingObject);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args, true, true);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n        this.commandHandler.tool = '';\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar LineTool = /** @class */ (function (_super) {\n    __extends(LineTool, _super);\n    function LineTool(commandHandler, base, endPoint, drawingObject) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        _this.endPoint = endPoint;\n        _this.drawingObject = drawingObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        _super.prototype.mouseDown.call(this, args);\n        var oldPointValue;\n        var connectorsShape;\n        if (args.source && args.source.annotations) {\n            oldPointValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectorsShape = this.drawingObject;\n        }\n        this.initialPosition = args.position;\n        this.prevSource = this.drawingObject;\n        this.currentPosition = args.position;\n        if (!this.drawingObject) {\n            var measureModule = this.commandHandler.annotation.measureAnnotationModule;\n            var annotationNode = {\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.startPosition.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes, measureType: 'Distance',\n                // eslint-disable-next-line max-len\n                fillColor: this.commandHandler.drawingObject.fillColor, notes: this.commandHandler.drawingObject.notes, strokeColor: this.commandHandler.drawingObject.strokeColor,\n                // eslint-disable-next-line max-len\n                opacity: this.commandHandler.drawingObject.opacity, thickness: this.commandHandler.drawingObject.thickness, borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n                shapeAnnotationType: 'Distance', pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                author: this.commandHandler.drawingObject.author, subject: this.commandHandler.drawingObject.subject,\n                enableShapeLabel: this.commandHandler.enableShapeLabel, leaderHeight: measureModule.leaderLength\n            };\n            this.pdfViewerBase.updateFreeTextProperties(annotationNode);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(annotationNode);\n        }\n        else if (!this.dragging) {\n            var nodeAnnot = {\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.startPosition.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                // eslint-disable-next-line max-len\n                shapeAnnotationType: this.drawingObject.shapeAnnotationType, sourceDecoraterShapes: this.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.drawingObject.taregetDecoraterShapes, fillColor: this.drawingObject.fillColor,\n                strokeColor: this.drawingObject.strokeColor, pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                // eslint-disable-next-line max-len\n                opacity: this.drawingObject.opacity || 1, borderDashArray: this.drawingObject.borderDashArray, thickness: this.drawingObject.thickness,\n                modifiedDate: this.drawingObject.modifiedDate, author: this.drawingObject.author, subject: this.drawingObject.subject,\n                lineHeadEnd: this.drawingObject.lineHeadEnd, lineHeadStart: this.drawingObject.lineHeadStart,\n                measureType: this.commandHandler.drawingObject.measureType, enableShapeLabel: this.commandHandler.enableShapeLabel\n            };\n            this.pdfViewerBase.updateFreeTextProperties(nodeAnnot);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(nodeAnnot);\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseUp = function (args) {\n        if (this.dragging) {\n            _super.prototype.mouseMove.call(this, args);\n            if (this.commandHandler) {\n                // eslint-disable-next-line\n                var currentSelector = void 0;\n                if (args.source && args.annotationSelectorSettings !== null) {\n                    currentSelector = args.source.annotationSelectorSettings;\n                }\n                else {\n                    currentSelector = '';\n                }\n                // eslint-disable-next-line\n                var node = this.drawingObject;\n                this.commandHandler.nodePropertyChange(node, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                this.commandHandler.select([node.id], currentSelector);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n            }\n            if (this.endPoint && this.endPoint.indexOf('ConnectorSegmentPoint') > -1 && this.dragging) {\n                this.commandHandler.annotation.updateCalibrateValues(this.drawingObject);\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                this.drawingObject = null;\n                this.dragging = false;\n                _super.prototype.mouseUp.call(this, args);\n            }\n            if (this.drawingObject) {\n                this.endPoint = 'ConnectorSegmentPoint_1';\n            }\n        }\n        else {\n            if (this.drawingObject) {\n                this.commandHandler.remove(this.drawingObject);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    LineTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.currentPosition = args.position;\n            this.dragging = true;\n            if (this.currentPosition && this.prevPosition) {\n                var diffX = this.currentPosition.x - this.prevPosition.x;\n                var diffY = this.currentPosition.y - this.prevPosition.y;\n                // eslint-disable-next-line\n                var currentSelector = void 0;\n                if (args.source && args.annotationSelectorSettings !== null) {\n                    currentSelector = args.source.annotationSelectorSettings;\n                }\n                else {\n                    currentSelector = '';\n                }\n                // eslint-disable-next-line max-len\n                if (this.inAction && this.commandHandler && this.drawingObject && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                    // eslint-disable-next-line max-len\n                    this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.drawingObject, this.currentPosition, this.selectedSegment, args.target, null, currentSelector);\n                    this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n                }\n            }\n            this.prevPosition = this.currentPosition;\n        }\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    LineTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return LineTool;\n}(ToolBase));\nexport { LineTool };\n/**\n * Rotates the selected objects\n *\n * @hidden\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler, base) {\n        return _super.call(this, commandHandler, base, true) || this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseDown = function (args) {\n        var nodeMouseDown = cloneObject(args.source);\n        this.undoElement = {\n            bounds: {\n                x: nodeMouseDown.wrapper.offsetX, y: nodeMouseDown.wrapper.offsetY,\n                width: nodeMouseDown.wrapper.actualSize.width, height: nodeMouseDown.wrapper.actualSize.height\n            }, rotateAngle: nodeMouseDown.rotateAngle\n            // eslint-disable-next-line\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object = args.source;\n        // eslint-disable-next-line\n        var newShapeObject;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            // eslint-disable-next-line\n            var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n            this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n            newShapeObject = {\n                bounds: {\n                    x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                }, rotateAngle: args.source.wrapper.rotateAngle\n            };\n        }\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Rotate', '', this.undoElement, newShapeObject);\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Rotate');\n        this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object = args.source;\n        // eslint-disable-next-line\n        var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n        this.currentPosition = args.position;\n        if (object.wrapper) {\n            var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n            var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n            angle = (angle + 360) % 360;\n            this.blocked = !(this.commandHandler.rotate(angle - object.wrapper.rotateAngle, currentSelector));\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n","import { createHtmlElement, getDiagramElement } from '@syncfusion/ej2-drawings';\nimport { setAttributeSvg, createSvgElement } from '@syncfusion/ej2-drawings';\n/**\n * @param {ClientRect} bounds - Specified the bounds of the annotation.\n * @param {string} commonStyle  - Specified the annotation styles.\n * @param {HTMLElement} cavas  - Specified the annotation canvas element.\n * @param {number} index - Specified the page index value.\n * @param {PdfViewer} pdfViewer - Specified the pdfviewer element.\n * @hidden\n * @returns {void}\n */\nexport function renderAdornerLayer(bounds, commonStyle, cavas, index, pdfViewer) {\n    var divElement = createHtmlElement('div', {\n        'id': pdfViewer.element.id + index + '_diagramAdornerLayer',\n        'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n    });\n    if (!getDiagramElement(divElement.id)) {\n        var nextElement = pdfViewer.viewerBase.getElement('_pageDiv_' + index);\n        var pageBound = nextElement.getBoundingClientRect();\n        var svgAdornerSvg = createSvg(pdfViewer.element.id + index + '_diagramAdorner_svg', pageBound.width, pageBound.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer' + index);\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        pdfViewer.adornerSvgLayer = createSvgElement('g', { 'id': pdfViewer.element.id + '_diagramAdorner' });\n        pdfViewer.adornerSvgLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(pdfViewer.adornerSvgLayer);\n        divElement.appendChild(svgAdornerSvg);\n        divElement.style.width = pageBound.width + 'px';\n        divElement.style.height = pageBound.height + 'px';\n        if (nextElement) {\n            nextElement.insertBefore(divElement, nextElement.childNodes[0]);\n        }\n        else {\n            cavas.parentElement.appendChild(divElement);\n        }\n        var svgSelector = createSvgElement('g', { 'id': pdfViewer.element.id + '_SelectorElement' });\n        pdfViewer.adornerSvgLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    }\n    pdfViewer.viewerBase.applyElementStyles(divElement, index);\n}\n/**\n * @param {string} id - Specified the Id of the svg element.\n * @param {string | number} width - Specified the width of the svg element.\n * @param {string | number} height - Specified the height of the svg element.\n * @hidden\n * @returns {SVGElement} - Returns the svg element.\n */\nexport function createSvg(id, width, height) {\n    var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n    return svgObj;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { DrawingElement } from '@syncfusion/ej2-drawings';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     *\n     * @param {string} nodeTemplate - Set the id for each element.\n     * @returns {void}\n     *\n     * @private\n     */\n    function DiagramHtmlElement(nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.templateFn = _this.templateCompiler(nodeTemplate);\n        return _this;\n    }\n    DiagramHtmlElement.prototype.templateCompiler = function (template) {\n        if (template) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            var e = void 0;\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (e) {\n                return baseTemplateComplier(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * getNodeTemplate method \\\n     *\n     * @returns { Function } getNodeTemplate method .\\\n     *\n     * @private\n     */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    return DiagramHtmlElement;\n}(DrawingElement));\nexport { DiagramHtmlElement };\n","import { LineTool } from '../index';\nimport { ZOrderPageTable, PdfAnnotationBase, PdfFormFieldBase } from './pdf-annotation';\nimport { Rect, Point, identityMatrix, rotateMatrix, getDiagramElement, ThumbsConstraints, scaleMatrix, cornersPointsBeforeRotation, ImageElement } from '@syncfusion/ej2-drawings';\nimport { DrawingElement } from '@syncfusion/ej2-drawings';\nimport { PathElement } from '@syncfusion/ej2-drawings';\nimport { createMeasureElements } from '@syncfusion/ej2-drawings';\nimport { randomId } from '@syncfusion/ej2-drawings';\nimport { Size, transformPointByMatrix, RotateTransform, TextElement } from '@syncfusion/ej2-drawings';\nimport { Canvas, refreshDiagramElements, DrawingRenderer } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { SvgRenderer } from '@syncfusion/ej2-drawings';\nimport { isLineShapes, setElementStype, findPointsLength, getBaseShapeAttributes, isLeader, cloneObject } from './drawing-util';\nimport { getConnectorPoints, updateSegmentElement, getSegmentElement, updateDecoratorElement, getDecoratorElement, clipDecorators, initDistanceLabel, initLeaders, initLeader, getPolygonPath, initPerimeterLabel } from './connector-util';\nimport { isNullOrUndefined, isBlazor, Browser } from '@syncfusion/ej2-base';\nimport { DiagramHtmlElement } from './html-element';\n/**\n * Renderer module is used to render basic diagram elements\n *\n * @hidden\n */\nvar Drawing = /** @class */ (function () {\n    function Drawing(viewer) {\n        this.isDynamicStamps = false;\n        this.pdfViewer = viewer;\n        this.renderer = new DrawingRenderer('this.pdfViewer.element.id', false);\n        this.svgRenderer = new SvgRenderer();\n    }\n    /**\n     * @private\n     * @param {PdfViewer} viewer - Specified the pdfViewer element.\n     * @returns {void}\n     */\n    Drawing.prototype.renderLabels = function (viewer) {\n        var annotations = viewer.annotations;\n        if (annotations) {\n            for (var i = 0; i < annotations.length; i++) {\n                var annotation = annotations[i];\n                this.initObject(annotation);\n            }\n        }\n    };\n    Drawing.prototype.createNewZindexTable = function (pageId) {\n        var zIndexTable = new ZOrderPageTable();\n        this.pdfViewer.zIndex++;\n        zIndexTable.pageId = this.pdfViewer.zIndex;\n        this.pdfViewer.zIndexTable.push(zIndexTable);\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} pageId - Specified the page Id.\n     * @returns {ZOrderPageTable} - Returns the ZOrder page table.\n     */\n    Drawing.prototype.getPageTable = function (pageId) {\n        var zIndexTable;\n        if (this.pdfViewer.zIndexTable.length !== undefined) {\n            var notFound = true;\n            for (var i = 0; i < this.pdfViewer.zIndexTable.length; i++) {\n                if (this.pdfViewer.zIndexTable[i].pageId === pageId) {\n                    notFound = false;\n                    zIndexTable = this.pdfViewer.zIndexTable[i];\n                    break;\n                }\n            }\n            if (notFound) {\n                zIndexTable = this.createNewZindexTable(pageId);\n                zIndexTable.pageId = pageId;\n            }\n        }\n        else {\n            zIndexTable = this.createNewZindexTable(pageId);\n        }\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index value.\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.setZIndex = function (index, obj) {\n        if (obj.pageIndex !== undefined) {\n            var pageTable = this.getPageTable(obj.pageIndex);\n            if (obj.zIndex === -1) {\n                pageTable.zIndex++;\n                obj.zIndex = pageTable.zIndex;\n                pageTable.objects.push(obj);\n            }\n            else {\n                var index_1 = obj.zIndex;\n                var tabelLength = pageTable.objects.length;\n                obj.zIndex = tabelLength++;\n                pageTable.objects.push(obj);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel | PdfFormFieldBaseModel} - Returns the annotaion or form fields model.\n     */\n    Drawing.prototype.initObject = function (obj) {\n        //Move the common properties like zindex and id to an abstract class\n        this.setZIndex(this.pdfViewer.zIndex, obj);\n        createMeasureElements();\n        if (!isLineShapes(obj)) {\n            this.initNode(obj);\n        }\n        else {\n            this.initLine(obj);\n            obj.wrapper.measure(new Size(undefined, undefined));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n        }\n        if (obj.wrapper === null) {\n            //Init default wrapper\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.pdfViewer.nameTable[obj.id] = obj;\n        if (obj.formFieldAnnotationType) {\n            this.nodePropertyChange(obj, { bounds: { width: obj.bounds.width, height: obj.bounds.height } });\n        }\n        //Add some methodologies to add the children of group to name table\n        return obj;\n    };\n    Drawing.prototype.initNode = function (obj) {\n        var canvas = this.initContainer(obj);\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (!content) {\n            content = this.init(obj, canvas);\n        }\n        //canvas.children.push(content);\n        canvas.rotateAngle = obj.rotateAngle;\n        // eslint-disable-next-line max-len\n        canvas.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n        canvas.arrange(canvas.desiredSize);\n        if (this.isDynamicStamps) {\n            this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(obj, null, 'dynamicStamp');\n            this.isDynamicStamps = false;\n        }\n    };\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @param {Container} canvas - Specified the canvas element.\n     * @returns {DrawingElement} - Returns the drawing element.\n     */\n    Drawing.prototype.init = function (obj, canvas) {\n        var content;\n        content = new DrawingElement();\n        var pathContent;\n        var basicElement;\n        var isStamp = false;\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule ? this.pdfViewer.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (obj.formFieldAnnotationType) {\n            content = this.initFormFields(obj, content, canvas);\n        }\n        else {\n            // eslint-disable-next-line max-len\n            content = this.initAnnotationObject(obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight);\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (obj.shapeAnnotationType !== 'Stamp') {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            setElementStype(obj, content);\n            if (this.pdfViewer.viewerBase.drawSignatureWithTool && obj.shapeAnnotationType === 'SignatureText') {\n                content.style.strokeWidth = 0;\n            }\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.initFormFields = function (obj, content, canvas) {\n        switch (obj.formFieldAnnotationType) {\n            case 'Textbox':\n            case 'PasswordField':\n            case 'Checkbox':\n            case 'RadioButton':\n            case 'DropdownList':\n            case 'ListBox':\n            case 'SignatureField':\n            case 'InitialField':\n                // eslint-disable-next-line\n                var htmlContent = new DiagramHtmlElement();\n                content = htmlContent;\n                content.id = obj.id + '_content';\n                canvas.children.push(content);\n                break;\n        }\n        return content;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.initAnnotationObject = function (obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight) {\n        switch (obj.shapeAnnotationType) {\n            case 'Ellipse':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Path':\n                pathContent = new PathElement();\n                pathContent.data = obj.data;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'HandWrittenSignature':\n            case 'Ink':\n                pathContent = new PathElement();\n                pathContent.data = obj.data;\n                pathContent.style.strokeColor = obj.strokeColor;\n                pathContent.style.strokeWidth = obj.thickness;\n                pathContent.style.opacity = obj.opacity;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Polygon':\n                pathContent = new PathElement();\n                pathContent.data = getPolygonPath(obj.vertexPoints);\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Stamp':\n                isStamp = true;\n                this.isDynamicStamps = true;\n                if (obj && obj.annotationAddMode && (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation')) {\n                    obj.bounds.width = obj.bounds.width - 20;\n                    obj.bounds.height = obj.bounds.height - 20;\n                }\n                if (obj.isDynamicStamp) {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    var textele_1 = this.textElement(obj);\n                    textele_1 = new TextElement();\n                    textele_1.style.fontFamily = 'Helvetica';\n                    textele_1.style.fontSize = 14;\n                    textele_1.style.italic = true;\n                    textele_1.style.bold = true;\n                    textele_1.style.color = obj.fillColor;\n                    textele_1.rotateValue = undefined;\n                    textele_1.content = obj.dynamicText;\n                    textele_1.relativeMode = 'Point';\n                    textele_1.margin.left = 10;\n                    textele_1.margin.bottom = -7;\n                    textele_1.setOffsetWithRespectToBounds(0, 0.57, null);\n                    textele_1.relativeMode = 'Point';\n                    canvas.children.push(textele_1);\n                    // eslint-disable-next-line\n                    var pathContent1 = new PathElement();\n                    pathContent1.id = randomId() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height / 2;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight / 2;\n                        obj.bounds.height = annotationMaxHeight / 2;\n                    }\n                    pathContent1.rotateValue = undefined;\n                    pathContent1.margin.left = 10;\n                    pathContent1.margin.bottom = -5;\n                    pathContent1.relativeMode = 'Point';\n                    pathContent1.setOffsetWithRespectToBounds(0, 0.1, null);\n                    // eslint-disable-next-line\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                }\n                else {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    // eslint-disable-next-line\n                    var pathContent1 = new PathElement();\n                    pathContent1.id = randomId() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight;\n                        obj.bounds.height = annotationMaxHeight;\n                    }\n                    pathContent1.minWidth = pathContent1.width / 2;\n                    pathContent1.minHeight = pathContent1.height / 2;\n                    // eslint-disable-next-line\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.minWidth = pathContent1.width / 2;\n                    content.minHeight = pathContent1.height / 2;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                    canvas.minHeight = content.minHeight + 20;\n                    canvas.minWidth = content.minWidth + 20;\n                }\n                break;\n            case 'Image':\n            case 'SignatureImage':\n                // eslint-disable-next-line\n                var pathContent11 = new ImageElement();\n                pathContent11.source = obj.data;\n                content = pathContent11;\n                content.style.strokeWidth = 0;\n                canvas.children.push(content);\n                break;\n            case 'Rectangle':\n                basicElement = new DrawingElement();\n                content = basicElement;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Perimeter':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                setElementStype(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new DrawingElement();\n                basicElement.id = 'perimeter_' + randomId();\n                basicElement.height = .2;\n                basicElement.width = .2;\n                basicElement.transform = RotateTransform.Self;\n                basicElement.horizontalAlignment = 'Stretch';\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                setElementStype(obj, basicElement);\n                canvas.children.push(basicElement);\n                // eslint-disable-next-line\n                var textele = this.textElement(obj);\n                textele = new TextElement();\n                textele.content = textele.content = findPointsLength([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]).toString();\n                textele.rotateValue = { y: -10, angle: obj.rotateAngle };\n                canvas.children.push(textele);\n                break;\n            case 'Radius':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                setElementStype(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new DrawingElement();\n                basicElement.id = 'radius_' + randomId();\n                basicElement.height = .2;\n                basicElement.width = obj.bounds.width / 2;\n                basicElement.transform = RotateTransform.Self;\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                setElementStype(obj, basicElement);\n                canvas.children.push(basicElement);\n                // eslint-disable-next-line\n                var radiusTextEle = this.textElement(obj);\n                if (obj.enableShapeLabel) {\n                    radiusTextEle.style.color = obj.fontColor;\n                    radiusTextEle.style.strokeColor = obj.labelBorderColor;\n                    radiusTextEle.style.fill = obj.labelFillColor;\n                    radiusTextEle.style.fontSize = obj.fontSize;\n                    radiusTextEle.style.fontFamily = obj.fontFamily;\n                    radiusTextEle.style.opacity = obj.labelOpacity;\n                }\n                // eslint-disable-next-line\n                var length_1 = findPointsLength([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]);\n                if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                    radiusTextEle.content = obj.notes;\n                }\n                else {\n                    // eslint-disable-next-line max-len\n                    radiusTextEle.content = this.pdfViewer.annotation.measureAnnotationModule.setConversion((obj.bounds.width / 2) * this.pdfViewer.annotation.measureAnnotationModule.pixelToPointFactor, obj);\n                }\n                radiusTextEle.rotateValue = { y: -10, x: obj.bounds.width / 4, angle: obj.rotateAngle };\n                canvas.children.push(radiusTextEle);\n                break;\n            case 'StickyNotes':\n                // eslint-disable-next-line\n                var pathContent2 = new ImageElement();\n                pathContent2.source = obj.data;\n                pathContent2.width = obj.bounds.width;\n                pathContent2.height = obj.bounds.height;\n                pathContent2.style.strokeColor = obj.strokeColor;\n                pathContent2.style.strokeWidth = 0;\n                content = pathContent2;\n                canvas.children.push(content);\n                break;\n            case 'SignatureText':\n                //eslint-disable-next-line\n                var rectElements = new DrawingElement();\n                rectElements.style.strokeWidth = 0;\n                content = rectElements;\n                content.style.strokeWidth = 0;\n                canvas.style.strokeWidth = 0;\n                canvas.children.push(content);\n                // eslint-disable-next-line\n                var signatureText = this.textElement(obj);\n                signatureText.style.fontFamily = obj.fontFamily;\n                signatureText.style.fontSize = obj.fontSize;\n                signatureText.style.textAlign = 'Left';\n                signatureText.rotateValue = undefined;\n                signatureText.content = obj.data;\n                signatureText.style.strokeWidth = 0;\n                canvas.children.push(signatureText);\n                break;\n            case 'FreeText':\n                // eslint-disable-next-line\n                var rectElement = new DrawingElement();\n                content = rectElement;\n                canvas.children.push(content);\n                // eslint-disable-next-line\n                var freeTextEle = this.textElement(obj);\n                freeTextEle = new TextElement();\n                freeTextEle.style.fontFamily = obj.fontFamily;\n                freeTextEle.style.fontSize = obj.fontSize;\n                freeTextEle.style.textAlign = 'Left';\n                if (obj.textAlign.toLowerCase() === 'center') {\n                    freeTextEle.style.textAlign = 'Center';\n                }\n                else if (obj.textAlign.toLowerCase() === 'right') {\n                    freeTextEle.style.textAlign = 'Right';\n                }\n                else if (obj.textAlign.toLowerCase() === 'justify') {\n                    freeTextEle.style.textAlign = 'Justify';\n                }\n                freeTextEle.style.color = obj.fontColor;\n                freeTextEle.style.bold = obj.font.isBold;\n                freeTextEle.style.italic = obj.font.isItalic;\n                if (obj.font.isUnderline === true) {\n                    freeTextEle.style.textDecoration = 'Underline';\n                }\n                else if (obj.font.isStrikeout === true) {\n                    freeTextEle.style.textDecoration = 'LineThrough';\n                }\n                freeTextEle.rotateValue = undefined;\n                freeTextEle.content = obj.dynamicText;\n                freeTextEle.style.opacity = obj.opacity;\n                freeTextEle.margin.left = 4;\n                freeTextEle.margin.top = 5 * (obj.fontSize / 16);\n                if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n                    freeTextEle.style.textWrapping = 'Wrap';\n                }\n                else {\n                    freeTextEle.style.textWrapping = 'WrapWithOverflow';\n                }\n                freeTextEle.relativeMode = 'Point';\n                freeTextEle.setOffsetWithRespectToBounds(0, 0, null);\n                freeTextEle.relativeMode = 'Point';\n                canvas.children.push(freeTextEle);\n                break;\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (!isStamp) {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            setElementStype(obj, content);\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.textElement = function (obj) {\n        var textele = new TextElement();\n        setElementStype(obj, textele);\n        textele.horizontalAlignment = 'Center';\n        obj.shapeAnnotationType === 'SignatureText' ? textele.verticalAlignment = 'Center' : textele.verticalAlignment = 'Top';\n        textele.relativeMode = 'Object';\n        textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n        return textele;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the node element.\n     * @returns {void}\n     */\n    Drawing.prototype.setNodePosition = function (obj, node) {\n        if (node.shapeAnnotationType === 'Perimeter') {\n            obj.offsetX = node.bounds.x + node.bounds.width / 2;\n            obj.offsetY = node.bounds.y + node.bounds.height / 2;\n        }\n        else if (node.shapeAnnotationType === 'Radius') {\n            // eslint-disable-next-line max-len\n            var trasPoint = { x: node.bounds.x + (node.bounds.width / 2) + (node.bounds.width / 4), y: node.bounds.y + (node.bounds.height / 2) };\n            var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n            var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n            var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n            obj.offsetX = newPoint1.x;\n            obj.offsetY = newPoint1.y;\n            obj.width = node.bounds.width / 2;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Container} - Returns the container element.\n     */\n    Drawing.prototype.initContainer = function (obj) {\n        if (!obj.id) {\n            obj.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = new Canvas();\n        canvas.id = obj.id;\n        canvas.offsetX = obj.bounds.x + (obj.bounds.width * 0.5);\n        canvas.offsetY = obj.bounds.y + (obj.bounds.height * 0.5);\n        canvas.style.fill = 'transparent';\n        canvas.style.strokeColor = 'transparent';\n        canvas.rotateAngle = obj.rotateAngle;\n        obj.wrapper = canvas;\n        return canvas;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Canvas} - Returns the canvas element.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Drawing.prototype.initLine = function (obj) {\n        if (!obj.id) {\n            obj.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = obj.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        if (obj.vertexPoints.length) {\n            obj.sourcePoint = obj.vertexPoints[0];\n            obj.targetPoint = obj.vertexPoints[obj.vertexPoints.length - 1];\n            for (var i = 0; i < obj.vertexPoints.length; i++) {\n                if (i !== 0 && i !== obj.vertexPoints.length - 1) {\n                    obj.segments.push(obj.vertexPoints[i]);\n                }\n            }\n        }\n        segment = getSegmentElement(obj, segment);\n        var points = [];\n        points = getConnectorPoints(obj);\n        //  points = this.clipDecorators(this, points);\n        var leaders = [];\n        var labels = [];\n        if (obj.shapeAnnotationType === 'Distance') {\n            leaders = initLeaders(obj, points);\n            labels = initDistanceLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if ((obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead') && obj.measureType === 'Perimeter') {\n            labels = initPerimeterLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if (obj.enableShapeLabel === true && !(obj.shapeAnnotationType === 'Distance') && !(obj.measureType === 'Perimeter')) {\n            var angle = Point.findAngle(points[0], points[1]);\n            var textele = this.textElement(obj);\n            textele.id = randomId();\n            if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                textele.content = obj.notes;\n            }\n            else {\n                textele.content = obj.labelContent;\n            }\n            textele.style.strokeColor = obj.labelBorderColor;\n            textele.style.fill = obj.labelFillColor;\n            textele.style.fontSize = obj.fontSize;\n            textele.style.color = obj.fontColor;\n            textele.style.fontFamily = obj.fontFamily;\n            textele.style.opacity = obj.labelOpacity;\n            textele.rotateValue = { y: -10, angle: angle };\n            labels.push(textele);\n        }\n        points = clipDecorators(obj, points);\n        var bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        var anglePoints = obj.vertexPoints;\n        var accessContent = 'getDescription';\n        // eslint-disable-next-line max-len\n        if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead' || obj.shapeAnnotationType === 'Distance') {\n            srcDecorator = getDecoratorElement(obj, points[0], anglePoints[1], true);\n            targetDecorator = getDecoratorElement(obj, points[points.length - 1], anglePoints[anglePoints.length - 2], false);\n        }\n        srcDecorator.id = obj.id + '_srcDec';\n        targetDecorator.id = obj.id + '_tarDec';\n        /* eslint-disable @typescript-eslint/dot-notation */\n        segment.style['fill'] = 'transparent';\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [];\n        setElementStype(obj, segment);\n        container.children.push(segment);\n        if (leaders.length > 0) {\n            for (var i = 0; i < leaders.length; i++) {\n                container.children.push(leaders[i]);\n            }\n        }\n        if (labels.length > 0) {\n            for (var i = 0; i < labels.length; i++) {\n                container.children.push(labels[i]);\n            }\n        }\n        container.children.push(srcDecorator);\n        container.children.push(targetDecorator);\n        container.id = obj.id;\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        points = getConnectorPoints(obj);\n        obj.wrapper = container;\n        return container;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel} - Returns the added annotaion object.\n     */\n    Drawing.prototype.add = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (obj.formFieldAnnotationType && this.pdfViewer.formDesignerModule) {\n            obj = new PdfFormFieldBase(this.pdfViewer, 'formFields', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.formFields.push(obj);\n        }\n        else {\n            obj = new PdfAnnotationBase(this.pdfViewer, 'annotations', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.annotations.push(obj);\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n        return obj;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.remove = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        var index = obj.pageIndex;\n        for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n            var annotation = this.pdfViewer.annotations[i];\n            if ((annotation.id && (annotation.id === obj.id || annotation.id.split('_')[0] === obj.id)) || (annotation.wrapper && annotation.wrapper.id === obj.id)) {\n                this.pdfViewer.annotations.splice(i, 1);\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[j].id === obj.id) {\n                        objects.splice(j, 1);\n                        if (obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureImage' || obj.shapeAnnotationType === 'SignatureText') {\n                            this.refreshCanvasDiagramLayer(undefined, index, obj.id);\n                        }\n                        else {\n                            this.pdfViewer.renderDrawing(undefined, index);\n                        }\n                    }\n                }\n                // need to add code snippet to remove from z index table   \n            }\n        }\n        for (var i = 0; i < this.pdfViewer.formFields.length; i++) {\n            var element = this.pdfViewer.formFields[i];\n            if (element.id === obj.id || element.wrapper.id === obj.id) {\n                this.pdfViewer.formFields.splice(i, 1);\n                if (this.pdfViewer.formDesignerModule && obj.formFieldAnnotationType) {\n                    this.pdfViewer.formFieldCollection.splice(i, 1);\n                }\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[j].id === obj.id) {\n                        objects.splice(j, 1);\n                    }\n                    if (objects[j] && objects[j].id && objects[j].id.indexOf(obj.id) !== -1) {\n                        objects.splice(j, 1);\n                    }\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            for (var i = 0; i < this.pdfViewer.formFieldCollections.length; i++) {\n                // eslint-disable-next-line\n                var element = this.pdfViewer.formFieldCollections[i];\n                if (element.id === obj.id) {\n                    this.pdfViewer.formFieldCollections.splice(i, 1);\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            // eslint-disable-next-line\n            var inputField = document.getElementById('form_field_' + obj.id + '_content_html_element');\n            if (inputField) {\n                inputField.remove();\n                this.pdfViewer.renderDrawing(undefined, index);\n                var field = {\n                    // eslint-disable-next-line\n                    name: obj.name, id: obj.id, value: obj.value, fontFamily: obj.fontFamily, fontSize: obj.fontSize, fontStyle: obj.fontStyle,\n                    // eslint-disable-next-line\n                    color: obj.color, backgroundColor: obj.backgroundColor, alignment: obj.alignment, isReadonly: obj.isReadonly, visibility: obj.visibility,\n                    // eslint-disable-next-line\n                    maxLength: obj.maxLength, isRequired: obj.isRequired, isPrint: obj.isPrint, rotation: obj.rotateAngle, tooltip: obj.tooltip,\n                    // eslint-disable-next-line\n                    options: obj.options, isChecked: obj.isChecked, isSelected: obj.isSelected\n                };\n                this.pdfViewer.fireFormFieldRemoveEvent('formFieldRemove', field, obj.pageIndex);\n                this.pdfViewer.formDesignerModule.removeFieldsFromAnnotationCollections(obj.id);\n            }\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @private\n     * @param {number} pageIndex - Specified the page index.\n     * @returns {PdfAnnotationBaseModel[]} - Returns the annotation base model collections.\n     */\n    Drawing.prototype.getPageObjects = function (pageIndex) {\n        var pageTable = this.getPageTable(pageIndex);\n        return pageTable.objects;\n    };\n    /**\n     * @private\n     * @param {HTMLCanvasElement} diagramLayer - Specified the diagram layer element.\n     * @param {number} pageIndex - Specified the page index.\n     * @param {string} objectId - Specified the object id.\n     * @returns {void}\n     */\n    Drawing.prototype.refreshCanvasDiagramLayer = function (diagramLayer, pageIndex, objectId) {\n        if (!diagramLayer) {\n            diagramLayer = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        }\n        if (diagramLayer) {\n            var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n            var width = diagramLayer.width / zoom;\n            var height = diagramLayer.height / zoom;\n            var ctx = diagramLayer.getContext('2d');\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            if (zoom < 1) {\n                ctx.lineWidth = ctx.lineWidth / zoom;\n            }\n            var devicePixelRatio_1 = this.pdfViewer.viewerBase.getWindowDevicePixelRatio();\n            var zoomRatio = zoom * devicePixelRatio_1;\n            if (!Browser.isDevice || (Browser.isDevice && zoom <= 0.7)) {\n                ctx.setTransform(zoomRatio, 0, 0, zoomRatio, 0, 0);\n            }\n            else {\n                ctx.setTransform(zoom, 0, 0, zoom, 0, 0);\n            }\n            ctx.clearRect(0, 0, width, height);\n            var objects = this.getPageObjects(pageIndex);\n            for (var i = 0; i < objects.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var renderElement = void 0;\n                if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n                    if (objects[i].isPrint) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n                        if (!isNullOrUndefined(renderElement)) {\n                            refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n                        }\n                    }\n                }\n                else {\n                    // eslint-disable-next-line\n                    renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n                    refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearHighlighter = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id + index + '_diagramAdornerLayer', index);\n        if (adornerSvg) {\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n            if (highlighter) {\n                highlighter.parentNode.removeChild(highlighter);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getSelectorElement = function (diagramId, index) {\n        var adornerLayer = null;\n        var adornerSvg = this.getAdornerLayerSvg(diagramId, index);\n        if (adornerSvg) {\n            adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n        }\n        return adornerLayer;\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getAdornerLayerSvg = function (diagramId, index) {\n        var adornerLayerSvg = null;\n        var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n        // eslint-disable-next-line\n        var elementcoll;\n        if (diagramElement) {\n            elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n            adornerLayerSvg = elementcoll[0];\n        }\n        return adornerLayerSvg;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearSelectorLayer = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id, index);\n        if (adornerSvg) {\n            var selectionRect = adornerSvg.getElementById(this.pdfViewer.adornerSvgLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter(index);\n            var childNodes = this.getSelectorElement(this.pdfViewer.element.id, index).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} select - Specified the select value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector element.\n     * @param {PdfAnnotationBaseModel} helper - Specified the annotation helper element.\n     * @param {boolean} isSelect - Specified the is select or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.renderSelector = function (select, currentSelector, helper, isSelect) {\n        if (!helper || isSelect) {\n            var size = new Size();\n            var selectorModel = this.pdfViewer.selectedItems;\n            this.clearSelectorLayer(select);\n            if (selectorModel.wrapper) {\n                selectorModel.wrapper.measure(size);\n                var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                if (selectorModel.annotations.length === 1) {\n                    selectorModel.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    //selectorModel.pivot = selectorModel.annotations[0].pivot;\n                }\n                var bounds = selectorModel.wrapper.bounds;\n                // eslint-disable-next-line\n                var selectorElement = void 0;\n                if (selectorModel.formFields.length) {\n                    for (var i = 0; i < selectorModel.formFields.length; i++) {\n                        var node = selectorModel.formFields[i];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        if (selectorElement && node.pageIndex === select && this.pdfViewer.designerMode) {\n                            this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                        }\n                        if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                            // eslint-disable-next-line max-len\n                            if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                var field = {\n                                    // eslint-disable-next-line\n                                    name: node.name, id: node.id, value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle, color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                                    // eslint-disable-next-line\n                                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                    // eslint-disable-next-line\n                                    options: node.options, isChecked: node.isChecked, isSelected: node.isSelected\n                                };\n                                this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                            }\n                        }\n                    }\n                }\n                if (selectorModel.annotations.length) {\n                    for (var j = 0; j < selectorModel.annotations.length; j++) {\n                        var node = selectorModel.annotations[j];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        var constraints = true;\n                        if (selectorElement && node.pageIndex === select) {\n                            if (node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'Line' ||\n                                node.shapeAnnotationType === 'LineWidthArrowHead' || node.shapeAnnotationType === 'Polygon') {\n                                this.renderEndPointHandle(node, selectorElement, selectorModel.thumbsConstraints, { scale: zoom, tx: 0, ty: 0 }, undefined, undefined, true, currentSelector);\n                            }\n                            else {\n                                if (node.shapeAnnotationType === 'StickyNotes') {\n                                    this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                                }\n                                else {\n                                    if (this.pdfViewer.tool !== 'Stamp') {\n                                        // eslint-disable-next-line\n                                        var isSignature = node.shapeAnnotationType === 'Path' || node.formFieldAnnotationType === 'SignatureField' || node.formFieldAnnotationType === 'InitialField';\n                                        this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, node.shapeAnnotationType === 'Stamp', false, isSignature, (node.shapeAnnotationType === 'FreeText' || node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureImage' || node.shapeAnnotationType === 'Image' || node.shapeAnnotationType === 'SignatureText'), currentSelector);\n                                    }\n                                }\n                            }\n                            if (!this.pdfViewer.viewerBase.isNewSignatureAdded && (node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureText' || node.shapeAnnotationType === 'SignatureImage')) {\n                                this.pdfViewer.annotationModule.selectSignature(node.signatureName, node.pageIndex, node);\n                            }\n                            if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                                // eslint-disable-next-line max-len\n                                if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                    this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                    var field = {\n                                        // eslint-disable-next-line\n                                        value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                                        // eslint-disable-next-line\n                                        color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                                        // eslint-disable-next-line\n                                        maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                        // eslint-disable-next-line\n                                        options: node.options, isChecked: node.isChecked, isSelected: node.isSelected\n                                    };\n                                    this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                                }\n                            }\n                            if (node.annotName !== '' && node.annotName !== 'SignatureText') {\n                                if (helper && (node === helper) && !node.formFieldAnnotationType) {\n                                    // eslint-disable-next-line max-len\n                                    if (!this.pdfViewer.viewerBase.isAddComment && !this.pdfViewer.viewerBase.isAnnotationSelect && !this.pdfViewer.viewerBase.isAnnotationMouseDown && !this.pdfViewer.viewerBase.isAnnotationMouseMove && !this.pdfViewer.viewerBase.isInkAdded && !this.pdfViewer.viewerBase.isNewStamp) {\n                                        this.pdfViewer.viewerBase.isAnnotationSelect = true;\n                                        this.pdfViewer.annotationModule.annotationSelect(node.annotName, node.pageIndex, node);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     *\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the objects to be rotated.\n     * @param {number} angle - Specified the angle by which the objects have to be rotated.\n     * @param {PointModel} pivot - Specified the reference point with reference to which the objects have to be rotated.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.rotate = function (obj, angle, pivot, currentSelector) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var objects = [];\n                objects = objects.concat(obj.annotations);\n                this.rotateObjects(obj, objects, angle, pivot, null, currentSelector);\n            }\n            else {\n                this.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} parent - Specified the annotation object.\n     * @param {PdfAnnotationBaseModel[]} objects - Specified the annotation objects.\n     * @param {number} angle - Specified the annotation angle.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {boolean} includeParent - Specified the include parent value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent, currentSelector) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (obj instanceof PdfAnnotationBase) {\n                if (includeParent !== false || parent !== obj) {\n                    obj.rotateAngle += angle;\n                    obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                    var newOffset = transformPointByMatrix(matrix, { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n                    obj.wrapper.offsetX = newOffset.x;\n                    obj.wrapper.offsetY = newOffset.y;\n                    this.nodePropertyChange(obj, { rotateAngle: obj.rotateAngle });\n                }\n                this.renderSelector(obj.pageIndex, currentSelector);\n            }\n        }\n    };\n    Drawing.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (element && element.id) {\n            if (targetElement && targetElement === 'selector') {\n                return this.pdfViewer.adornerSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} selector - Specified the annotation selector object.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} transform - Specfied the transform value.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} isBorderTickness - Specified is thickness or not.\n     * @param {boolean} isSwimlane - Specified is swimlane annotation or not.\n     * @param {boolean} isSticky - Specified is sticky annotation or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.renderBorder = function (selector, canvas, currentSelector, transform, enableNode, isBorderTickness, isSwimlane, isSticky) {\n        var wrapper = selector;\n        var options = getBaseShapeAttributes(wrapper, transform);\n        transform = transform || { scale: 1, tx: 0, ty: 0 };\n        if (!isSticky) {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            options.fill = 'transparent';\n            // eslint-disable-next-line max-len\n            var shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                // eslint-disable-next-line max-len\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else {\n                if (!this.pdfViewer.designerMode) {\n                    if ((shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText' || shapeType === 'SignatureImage') || shapeType === 'Ink') {\n                        // eslint-disable-next-line\n                        var formField = this.pdfViewer.nameTable[selector.id.split('_')[0]];\n                        var isFormFieldSign = this.pdfViewer.viewerBase.checkSignatureFormField(selector.id);\n                        // if (isFormFieldSign && options.width + 21 !== formField.bounds.width && options.height + 21 !== formField.bounds.height) {\n                        //     if (this.pdfViewer.signatureFitMode === 'Default') {\n                        //         let selectorBounds: any = this.pdfViewer.formFieldsModule.getDefaultBoundsforSign(formField.bounds);\n                        //         options.x = selectorBounds.x; options.y = selectorBounds.y; options.width = selectorBounds.width; options.height = selectorBounds.height;\n                        //     } else {\n                        //         options.x = formField.bounds.x; options.y = formField.bounds.y; options.width = formField.bounds.width; options.height = formField.bounds.height;\n                        //     }\n                        // }\n                        this.getSignBorder(shapeType, options, isFormFieldSign);\n                    }\n                    else {\n                        this.getBorderSelector(shapeType, options);\n                    }\n                }\n            }\n            options.class = 'e-pv-diagram-border';\n            if (isSwimlane) {\n                options.class += ' e-diagram-lane';\n            }\n            options.id = 'borderRect';\n            options.id = 'borderRect';\n            if (!enableNode) {\n                options.class += ' e-disabled';\n            }\n            if (isBorderTickness) {\n                options.class += ' e-thick-border';\n            }\n            options.cornerRadius = 0;\n        }\n        else {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            // eslint-disable-next-line max-len\n            var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType\n                : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                // eslint-disable-next-line max-len\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else {\n                this.getBorderSelector(shapeType, options);\n            }\n        }\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        // eslint-disable-next-line max-len\n        this.svgRenderer.drawRectangle(canvas, options, this.pdfViewer.element.id, undefined, true, parentSvg);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the options value.\n     * @param {boolean} isFormFieldSign - Specified is form field sign or not.\n     * @returns {void}\n     */\n    Drawing.prototype.getSignBorder = function (type, options, isFormFieldSign) {\n        if (!isFormFieldSign && (type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n            var borderColor = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n            var borderColor = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else {\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n            options.stroke = borderColor;\n            options.strokeWidth = annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n            // eslint-disable-next-line max-len\n            var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the base attributes.\n     * @returns {void}\n     */\n    Drawing.prototype.getBorderSelector = function (type, options) {\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        var borderColor = isNullOrUndefined(annotationSelector.selectionBorderColor) || annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        // eslint-disable-next-line max-len\n        options.strokeWidth = isNullOrUndefined(annotationSelector.selectionBorderThickness) || annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n        // eslint-disable-next-line max-len\n        var lineDash = isNullOrUndefined(annotationSelector.selectorLineDashArray) || annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n        if (lineDash.length > 2) {\n            lineDash = [lineDash[0], lineDash[1]];\n        }\n        options.dashArray = lineDash.toString();\n        if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_1;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_1.length > 2) {\n                lineDash_1 = [lineDash_1[0], lineDash_1[1]];\n            }\n            options.dashArray = lineDash_1.toString();\n        }\n        else if ((type === 'Textbox' || type === 'Checkbox' || type === 'RadioButton' || type === 'SignatureField' || type === 'InitialField' || type === 'DropdownList' || type === 'ListBox' || type === 'PasswordField') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_2;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_2.length > 2) {\n                lineDash_2 = [lineDash_2[0], lineDash_2[1]];\n            }\n            options.dashArray = lineDash_2.toString();\n        }\n        else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n            var borderColor_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_3;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_3.length > 2) {\n                lineDash_3 = [lineDash_3[0], lineDash_3[1]];\n            }\n            options.dashArray = lineDash_3.toString();\n        }\n        else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n            var borderColor_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_4;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_4.length > 2) {\n                lineDash_4 = [lineDash_4[0], lineDash_4[1]];\n            }\n            options.dashArray = lineDash_4.toString();\n        }\n        else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n            var borderColor_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_5;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_5.length > 2) {\n                lineDash_5 = [lineDash_5[0], lineDash_5[1]];\n            }\n            options.dashArray = lineDash_5.toString();\n        }\n        else if (type === 'StickyNotes' && this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) {\n            var borderColor_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_6;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [6, 3] : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_6.length > 2) {\n                lineDash_6 = [lineDash_6[0], lineDash_6[1]];\n            }\n            options.dashArray = lineDash_6.toString();\n        }\n        else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n            var borderColor_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_7;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_7.length > 2) {\n                lineDash_7 = [lineDash_7[0], lineDash_7[1]];\n            }\n            options.dashArray = lineDash_7.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {string} id - Specified the annotaion id.\n     * @param {DrawingElement} selector - Specified the drawing element.\n     * @param {number} cx - Specified the cx number.\n     * @param {number} cy - Specified the cy number.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the html canvas element.\n     * @param {boolean} visible - Specified the annotation visible or not.\n     * @param {number} enableSelector - Specified the enable selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @param {boolean} connected - Specified is connected or not.\n     * @param {boolean} canMask - Specified is mask or not.\n     * @param {Object} ariaLabel - Specified the aria label object.\n     * @param {number} count - Specified the count value.\n     * @param {string} className - Specified the class name.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector settings.\n     * @returns {void}\n     */\n    Drawing.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className, currentSelector) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        t = t || { scale: 1, tx: 0, ty: 0 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = getBaseShapeAttributes(wrapper);\n        var shapeType;\n        if (this.pdfViewer.selectedItems.annotations.length > 0 && this.pdfViewer.selectedItems.annotations[0].measureType) {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].measureType;\n        }\n        else if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            shapeType = this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        }\n        else {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n        }\n        this.getResizerColors(shapeType, options, currentSelector, t);\n        this.getShapeSize(shapeType, options, currentSelector, t);\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        options.opacity = 1;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        options.x = (newPoint.x * t.scale) - (options.width / 2);\n        options.y = (newPoint.y * t.scale) - (options.height / 2);\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        if (this.getShape(shapeType, currentSelector) === 'Square') {\n            this.svgRenderer.drawRectangle(canvas, options, id, undefined, true, parentSvg);\n        }\n        else if (this.getShape(shapeType, currentSelector) === 'Circle') {\n            this.svgRenderer.drawCircle(canvas, options, 1);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getShapeSize = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            // eslint-disable-next-line\n            var annotationSelector = JSON.parse(currentSelector);\n            // eslint-disable-next-line max-len\n            options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n            // eslint-disable-next-line max-len\n            options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            // eslint-disable-next-line max-len\n            options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n        }\n        else {\n            // eslint-disable-next-line\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            // eslint-disable-next-line max-len\n            options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n            // eslint-disable-next-line max-len\n            options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            // eslint-disable-next-line max-len\n            options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {AnnotationSelectorSettingsModel} - Specified the annotation selector settings model.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getShape = function (type, currentSelector) {\n        // eslint-disable-next-line\n        var shapeType;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n            }\n            else {\n                // eslint-disable-next-line\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape;\n                }\n            }\n            return shapeType;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getResizerColors = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            // eslint-disable-next-line\n            var annotationSelector = JSON.parse(currentSelector);\n            options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n        }\n        else {\n            // eslint-disable-next-line\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} wrapper - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform value.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX, y: pivotY - 25 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = getBaseShapeAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.opacity = 1;\n        options.fill = '#FF4081';\n        options.centerX = newPoint.x;\n        options.centerY = newPoint.y;\n        options.radius = 4;\n        options.angle = 0;\n        options.visible = true;\n        options.class = 'e-diagram-rotate-handle';\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawCircle(canvas, options, ThumbsConstraints.Rotate, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {ThumbsConstraints} constraints - Specified the thumbs constraints element.\n     * @param {number} currentZoom - Specified the current zoom value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} nodeConstraints - Specified the node constraints or not.\n     * @param {boolean} isStamp - Specified is stamp or not.\n     * @param {boolean} isSticky - Specified is sticky or not.\n     * @param {boolean} isPath - Specified is path or not.\n     * @param {boolean} isFreeText - Specified is free text or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector settings value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, canMask, enableNode, nodeConstraints, isStamp, isSticky, isPath, isFreeText, currentSelector) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        var transform = { scale: currentZoom, tx: 0, ty: 0 };\n        if (isStamp) {\n            this.renderPivotLine(element, canvas, transform);\n            this.renderRotateThumb(element, canvas, transform);\n        }\n        if (isFreeText) {\n            isStamp = true;\n        }\n        this.renderBorder(element, canvas, currentSelector, transform, enableNode, nodeConstraints, true, isSticky);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        // eslint-disable-next-line max-len\n        var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        var allowPermission = false;\n        if (!this.pdfViewer.formDesignerModule) {\n            // eslint-disable-next-line\n            var annotation = this.pdfViewer.selectedItems.annotations[0];\n            // eslint-disable-next-line\n            var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n            if ((isLock || annotation.annotationSettings.isLock) && this.getAllowedInteractions(allowedInteraction)) {\n                allowPermission = true;\n            }\n        }\n        var resizerLocation = this.getResizerLocation(shapeType, currentSelector);\n        if (resizerLocation < 1 || resizerLocation > 3) {\n            resizerLocation = 3;\n        }\n        var isNodeShape = false;\n        if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ellipse' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Radius' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Rectangle' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink')) {\n            isNodeShape = true;\n        }\n        if (!this.pdfViewer.viewerBase.checkSignatureFormField(element.id) && !nodeConstraints && !isSticky && !isPath && !allowPermission) {\n            if (isStamp || (isNodeShape && (nodeWidth >= 40 && nodeHeight >= 40) && (resizerLocation === 1 || resizerLocation === 3))) {\n                //Hide corners when the size is less than 40\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-pv-diagram-resize-handle e-northwest', currentSelector);\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-pv-diagram-resize-handle e-northeast', currentSelector);\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-pv-diagram-resize-handle e-southwest', currentSelector);\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-pv-diagram-resize-handle e-southeast', currentSelector);\n            }\n            // eslint-disable-next-line max-len\n            if ((!isStamp && !isNodeShape) || (isNodeShape && (resizerLocation === 2 || resizerLocation === 3 || (!(nodeWidth >= 40 && nodeHeight >= 40) && resizerLocation === 1)))) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n            }\n        }\n        if ((shapeType === 'Textbox' || shapeType === 'Checkbox' || shapeType === 'RadioButton' || shapeType === 'SignatureField' || shapeType === 'InitialField' || shapeType === 'DropdownList' ||\n            shapeType === 'ListBox' || shapeType === 'PasswordField')) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n        }\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.getAllowedInteractions = function (allowedInteraction) {\n        if (allowedInteraction && allowedInteraction.length > 0) {\n            for (var i = 0; i < allowedInteraction.length; i++) {\n                if (allowedInteraction[0] !== 'None' && allowedInteraction[i] === 'Resize') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation base model.\n     * @param {any} currentSelector - Specified the current selector value\n     * @returns {AnnotationResizerLocation} - Returns the annotation resizer location value.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getResizerLocation = function (type, currentSelector) {\n        // eslint-disable-next-line\n        var resizerLocation;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                // eslint-disable-next-line max-len\n                resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n            }\n            else {\n                // eslint-disable-next-line\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                // eslint-disable-next-line max-len\n                resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Distance') {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation;\n                }\n            }\n            return resizerLocation;\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified is mask value or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = true;\n        if (canMask) {\n            visible = false;\n        }\n        var options = getBaseShapeAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} selector - Specified the annotation element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {SelectorConstraints} constraints - Specified the selector constraints value.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {boolean} connectedSource - Specified is connected source or not.\n     * @param {boolean} connectedTarget - Specified is connected target or not.\n     * @param {boolean} isSegmentEditing - Specified is segment editing or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderEndPointHandle = function (selector, canvas, constraints, transform, connectedSource, connectedTarget, isSegmentEditing, currentSelector) {\n        transform = transform || { tx: 0, ty: 0, scale: 1 };\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        for (i = 0; i < selector.vertexPoints.length; i++) {\n            var segment = selector.vertexPoints[i];\n            this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.x, segment.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n        }\n        var leaderCount = 0;\n        if (selector.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < selector.wrapper.children.length; i++) {\n                var segment = selector.wrapper.children[i];\n                var newPoint1 = void 0;\n                var angle = Point.findAngle(selector.sourcePoint, selector.targetPoint);\n                if (segment.id.indexOf('leader') > -1) {\n                    var center = selector.wrapper.children[0].bounds.center;\n                    if (leaderCount === 0) {\n                        newPoint1 = { x: selector.sourcePoint.x, y: selector.sourcePoint.y - selector.leaderHeight };\n                        center = sourcePoint;\n                    }\n                    else {\n                        newPoint1 = { x: selector.targetPoint.x, y: selector.targetPoint.y - selector.leaderHeight };\n                        center = targetPoint;\n                    }\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, angle, center.x, center.y);\n                    var rotatedPoint = transformPointByMatrix(matrix, { x: newPoint1.x, y: newPoint1.y });\n                    this.renderCircularHandle(('leaderThumb_' + (i + 1)), wrapper, rotatedPoint.x, rotatedPoint.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n                    leaderCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Drawing.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.pdfViewer.selectedItems;\n        selectorModel.init(this);\n    };\n    /**\n     * @private\n     * @param {string[]} objArray - Specified the annotation object array.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {boolean} multipleSelection - Specified the multiple selection or not.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.select = function (objArray, currentSelector, multipleSelection, preventUpdate) {\n        var selectorModel = this.pdfViewer.selectedItems;\n        for (var i = 0; i < objArray.length; i++) {\n            // eslint-disable-next-line\n            var obj = this.pdfViewer.nameTable[objArray[i]];\n            if (obj.formFieldAnnotationType && this.pdfViewer.designerMode) {\n                selectorModel.formFields.push(obj);\n                this.initSelectorWrapper();\n                selectorModel.wrapper.children.push(obj.wrapper);\n                this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n            }\n            else if (obj && !obj.formFieldAnnotationType) {\n                if (!(obj instanceof Selector) && obj.wrapper.visible && this.pdfViewer.annotationModule) {\n                    // eslint-disable-next-line\n                    var annotationSettings = void 0;\n                    if (obj.annotationSettings) {\n                        annotationSettings = obj.annotationSettings;\n                        annotationSettings.isLock = JSON.parse(annotationSettings.isLock);\n                    }\n                    else if (!obj.formFieldAnnotationType) {\n                        annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(obj, true);\n                        obj.annotationSettings = annotationSettings;\n                    }\n                    var isLock = !obj.formFieldAnnotationType ? annotationSettings.isLock : false;\n                    if (annotationSettings && annotationSettings.isLock && this.pdfViewer.annotationModule.checkAllowedInteractions('Select', obj)) {\n                        isLock = false;\n                    }\n                    if (!isLock) {\n                        selectorModel.annotations.push(obj);\n                        this.initSelectorWrapper();\n                        selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                        selectorModel.wrapper.children.push(obj.wrapper);\n                        if (!preventUpdate) {\n                            this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.dragSelectedObjects = function (tx, ty, pageIndex, currentSelector, helper) {\n        var obj = this.pdfViewer.selectedItems;\n        this.drag(obj, tx, ty, currentSelector, helper);\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.drag = function (obj, tx, ty, currentSelector, helper) {\n        if (obj instanceof Selector) {\n            if (obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n            else if (obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n        }\n        else {\n            this.dragAnnotation(obj, tx, ty);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @returns {void}\n     */\n    Drawing.prototype.dragAnnotation = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        // eslint-disable-next-line\n        var oldValues = { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n        obj.wrapper.offsetX += tx;\n        obj.wrapper.offsetY += ty;\n        if (isLineShapes(obj) || obj.shapeAnnotationType === 'Polygon') {\n            if (obj.wrapper.children.length) {\n                var nodes = obj.wrapper.children;\n                for (var i = 0; i < nodes.length; i++) {\n                    nodes[i].offsetX += tx;\n                    nodes[i].offsetY += ty;\n                }\n            }\n            this.dragControlPoint(obj, tx, ty, true);\n        }\n        this.nodePropertyChange(obj, { bounds: { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY } });\n        obj.wrapper.measureChildren = false;\n        // eslint-disable-next-line\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex);\n        // eslint-disable-next-line\n        this.pdfViewer.renderDrawing(canvas, obj.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @param {number} segmentNumber - Specified the segment value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        // eslint-disable-next-line\n        var connector = this.pdfViewer.nameTable[obj.id];\n        for (var i = 0; i < connector.vertexPoints.length; i++) {\n            (connector.vertexPoints[i]).x += tx;\n            (connector.vertexPoints[i]).y += ty;\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @returns {void}\n     */\n    Drawing.prototype.updateEndPoint = function (connector) {\n        this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n        this.renderSelector(connector.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} actualObject - Specified the actual annotaion object.\n     * @param {PdfAnnotationBaseModel} node - Specified the node annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.nodePropertyChange = function (actualObject, node) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.bounds) {\n            if (node.bounds.width !== undefined) {\n                actualObject.bounds.width = actualObject.wrapper.width = node.bounds.width;\n            }\n            if (node.bounds.height !== undefined) {\n                actualObject.bounds.height = actualObject.wrapper.height = node.bounds.height;\n            }\n            if (node.bounds.x !== undefined) {\n                actualObject.bounds.x = node.bounds.x - (actualObject.bounds.width * 0.5);\n                actualObject.wrapper.offsetX = node.bounds.x;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.bounds.y !== undefined) {\n                actualObject.bounds.y = node.bounds.y - (actualObject.bounds.height * 0.5);\n                actualObject.wrapper.offsetY = node.bounds.y;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.leaderHeight !== undefined) {\n                actualObject.leaderHeight = node.leaderHeight;\n                this.updateConnector(actualObject, actualObject.vertexPoints);\n            }\n            if (actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                for (var i_1 = 0; i_1 < children.length; i_1++) {\n                    if (children[i_1].id) {\n                        var names = children[i_1].id.split('_');\n                        if (names.length && (names.indexOf('perimeter') > -1 || names.indexOf('radius') > -1)) {\n                            this.setNodePosition(children[i_1], actualObject);\n                        }\n                        else if (names.length && (names.indexOf('srcDec') > -1)) {\n                            children[i_1].offsetX = actualObject.vertexPoints[0].x;\n                            children[i_1].offsetY = actualObject.vertexPoints[0].y;\n                        }\n                        else if (names.length && names.indexOf('tarDec') > -1) {\n                            children[i_1].offsetX = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].x;\n                            children[i_1].offsetY = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].y;\n                        }\n                        else if (names.length && (names.indexOf('stamp') > -1)) {\n                            // eslint-disable-next-line\n                            var ratio = 0;\n                            var heightRatio = 2;\n                            if (actualObject.wrapper.width !== undefined && actualObject.wrapper.height !== undefined) {\n                                ratio = 20;\n                                heightRatio = 2.9;\n                            }\n                            if (actualObject.isDynamicStamp) {\n                                children[i_1].width = actualObject.bounds.width - ratio;\n                                children[i_1].height = (actualObject.bounds.height / 2) - ratio;\n                                // eslint-disable-next-line\n                                var element = children[1];\n                                // eslint-disable-next-line\n                                var annotationSettings = this.pdfViewer.stampSettings ? this.pdfViewer.stampSettings : this.pdfViewer.annotationSettings;\n                                // eslint-disable-next-line max-len\n                                if (annotationSettings && (annotationSettings.maxHeight || annotationSettings.maxWidth) && (actualObject.bounds.height > 60)) {\n                                    if (ratio != 0) {\n                                        element.style.fontSize = (actualObject.bounds.width / ratio);\n                                    }\n                                    else {\n                                        element.style.fontSize = (actualObject.wrapper.bounds.width / 20);\n                                    }\n                                }\n                                else {\n                                    if (ratio != 0) {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.bounds.width - 20));\n                                    }\n                                    else {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.wrapper.bounds.width - 20));\n                                    }\n                                }\n                                if (ratio !== 0) {\n                                    element.margin.bottom = -(children[i_1].height / 2);\n                                }\n                            }\n                            else {\n                                children[i_1].width = actualObject.bounds.width - ratio;\n                                children[i_1].height = actualObject.bounds.height - ratio;\n                            }\n                            children[i_1].offsetX = actualObject.wrapper.offsetX;\n                            children[i_1].offsetY = actualObject.wrapper.offsetX;\n                            children[i_1].isDirt = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.sourceDecoraterShapes !== undefined) {\n            actualObject.sourceDecoraterShapes = node.sourceDecoraterShapes;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.isReadonly !== undefined && actualObject.shapeAnnotationType === 'FreeText') {\n            actualObject.isReadonly = node.isReadonly;\n        }\n        if (node.taregetDecoraterShapes !== undefined) {\n            actualObject.taregetDecoraterShapes = node.taregetDecoraterShapes;\n            update = true;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.fillColor !== undefined) {\n            actualObject.fillColor = node.fillColor;\n            actualObject.wrapper.children[0].style.fill = node.fillColor;\n            if ((actualObject.enableShapeLabel || actualObject.measureType) && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_2 = 0; i_2 < children.length; i_2++) {\n                    if (children[i_2].textNodes) {\n                        if (actualObject.enableShapeLabel) {\n                            actualObject.labelFillColor = node.fillColor;\n                            children[i_2].style.fill = node.fillColor;\n                        }\n                        if (actualObject.measureType) {\n                            children[i_2].style.fill = node.fillColor;\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelFillColor !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_3 = 0; i_3 < children.length; i_3++) {\n                    if (children[i_3].textNodes) {\n                        actualObject.labelFillColor = node.labelFillColor;\n                        children[i_3].style.fill = node.labelFillColor;\n                    }\n                }\n            }\n        }\n        if (node.opacity !== undefined) {\n            if (actualObject.shapeAnnotationType === 'Stamp' || actualObject.shapeAnnotationType === 'FreeText') {\n                actualObject.wrapper.children[1].style.opacity = node.opacity;\n                if (actualObject.wrapper.children[2]) {\n                    actualObject.wrapper.children[2].style.opacity = node.opacity;\n                }\n            }\n            else {\n                if (actualObject.shapeAnnotationType === 'StickyNotes') {\n                    // eslint-disable-next-line\n                    this.pdfViewer.nameTable[actualObject.annotName].wrapper.children[0].style.opacity = node.opacity;\n                }\n                actualObject.opacity = node.opacity;\n            }\n            actualObject.wrapper.children[0].style.opacity = node.opacity;\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_4 = 0; i_4 < children.length; i_4++) {\n                    if (children[i_4].textNodes) {\n                        children[i_4].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelOpacity !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_5 = 0; i_5 < children.length; i_5++) {\n                    if (children[i_5].textNodes) {\n                        children[i_5].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            actualObject.rotateAngle = node.rotateAngle;\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.strokeColor !== undefined) {\n            actualObject.strokeColor = node.strokeColor;\n            actualObject.wrapper.children[0].style.strokeColor = node.strokeColor;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontColor !== undefined) {\n            actualObject.fontColor = node.fontColor;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.color = node.fontColor;\n                if (actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_6 = 0; i_6 < children.length; i_6++) {\n                    if (children[i_6].textNodes) {\n                        children[i_6].style.color = node.fontColor;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontFamily !== undefined) {\n            actualObject.fontFamily = node.fontFamily;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.fontFamily = node.fontFamily;\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_7 = 0; i_7 < children.length; i_7++) {\n                    if (children[i_7].textNodes) {\n                        children[i_7].style.fontFamily = node.fontFamily;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontSize !== undefined) {\n            actualObject.fontSize = node.fontSize;\n            if ((actualObject.shapeAnnotationType === 'FreeText' || actualObject.shapeAnnotationType === 'SignatureText') && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.fontSize = node.fontSize;\n                if (actualObject.shapeAnnotationType === 'SignatureText') {\n                    actualObject.wrapper.children[1].bounds.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].desiredSize.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].actualSize.width = actualObject.bounds.width;\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].verticalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_8 = 0; i_8 < children.length; i_8++) {\n                    if (children[i_8].textNodes) {\n                        children[i_8].style.fontSize = node.fontSize;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.font !== undefined) {\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (node.font.isBold !== undefined) {\n                    children[1].style.bold = node.font.isBold;\n                    actualObject.font.isBold = node.font.isBold;\n                }\n                if (node.font.isItalic !== undefined) {\n                    children[1].style.italic = node.font.isItalic;\n                    actualObject.font.isItalic = node.font.isItalic;\n                }\n                if (node.font.isUnderline !== undefined) {\n                    if (node.font.isUnderline) {\n                        actualObject.font.isStrikeout = false;\n                    }\n                    if (node.font.isUnderline === true) {\n                        children[1].style.textDecoration = 'Underline';\n                    }\n                    else {\n                        if (!node.font.isStrikeout) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isUnderline = node.font.isUnderline;\n                }\n                if (node.font.isStrikeout !== undefined) {\n                    if (node.font.isStrikeout) {\n                        actualObject.font.isUnderline = false;\n                    }\n                    if (node.font.isStrikeout === true) {\n                        children[1].style.textDecoration = 'LineThrough';\n                    }\n                    else {\n                        if (!node.font.isUnderline) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isStrikeout = node.font.isStrikeout;\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.textAlign !== undefined) {\n            actualObject.textAlign = node.textAlign;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.textAlign = node.textAlign;\n                if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n                    }\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.thickness !== undefined) {\n            actualObject.thickness = node.thickness;\n            actualObject.wrapper.children[0].style.strokeWidth = node.thickness;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.borderDashArray !== undefined) {\n            actualObject.borderDashArray = node.borderDashArray;\n            actualObject.wrapper.children[0].style.strokeDashArray = node.borderDashArray;\n        }\n        if (node.borderStyle !== undefined) {\n            actualObject.borderStyle = node.borderStyle;\n        }\n        if (node.author !== undefined) {\n            actualObject.author = node.author;\n        }\n        if (node.modifiedDate !== undefined) {\n            actualObject.modifiedDate = node.modifiedDate;\n        }\n        if (node.subject !== undefined) {\n            actualObject.subject = node.subject;\n        }\n        if (node.vertexPoints !== undefined) {\n            actualObject.vertexPoints = node.vertexPoints;\n            // eslint-disable-next-line\n            this.pdfViewer.nameTable[actualObject.id].vertexPoints = node.vertexPoints;\n            this.updateConnector(actualObject, node.vertexPoints);\n        }\n        if (node.leaderHeight !== undefined && actualObject.shapeAnnotationType !== 'Polygon') {\n            actualObject.leaderHeight = node.leaderHeight;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.notes !== undefined) {\n            actualObject.notes = node.notes;\n        }\n        if (node.annotName !== undefined) {\n            actualObject.annotName = node.annotName;\n        }\n        if (actualObject.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < actualObject.wrapper.children.length; i++) {\n                // eslint-disable-next-line\n                var segment = actualObject.wrapper.children[i];\n                // eslint-disable-next-line\n                var points = getConnectorPoints(actualObject);\n                if (segment.id.indexOf('leader1') > -1) {\n                    this.setLineDistance(actualObject, points, segment, false);\n                }\n                if (segment.id.indexOf('leader2') > -1) {\n                    this.setLineDistance(actualObject, points, segment, true);\n                }\n            }\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (actualObject.shapeAnnotationType === 'Polygon' && node.vertexPoints) {\n            actualObject.data = getPolygonPath(actualObject.vertexPoints);\n            // eslint-disable-next-line\n            var path = actualObject.wrapper.children[0];\n            path.data = actualObject.data;\n            path.canMeasurePath = true;\n        }\n        if (isLineShapes(actualObject)) {\n            for (var i_9 = 0; i_9 < actualObject.wrapper.children.length; i_9++) {\n                // eslint-disable-next-line\n                var childElement = actualObject.wrapper.children[i_9];\n                if (!childElement.textNodes) {\n                    setElementStype(actualObject, actualObject.wrapper.children[i_9]);\n                }\n                if (actualObject.enableShapeLabel === true) {\n                    if (actualObject.wrapper.children[i_9] instanceof TextElement) {\n                        actualObject.wrapper.children[i_9].style.fill = actualObject.labelFillColor;\n                    }\n                    if ((actualObject.wrapper.children[i_9] instanceof PathElement && actualObject.measureType === 'Perimeter')) {\n                        actualObject.wrapper.children[i_9].style.fill = 'transparent';\n                    }\n                }\n                else {\n                    if ((actualObject.wrapper.children[i_9] instanceof PathElement && actualObject.measureType === 'Perimeter') || actualObject.wrapper.children[i_9] instanceof TextElement) {\n                        actualObject.wrapper.children[i_9].style.fill = 'transparent';\n                    }\n                }\n            }\n        }\n        if (actualObject && (actualObject.shapeAnnotationType === 'FreeText' || actualObject.enableShapeLabel === true)) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_10 = 0; i_10 < children.length; i_10++) {\n                    if (children[i_10].textNodes) {\n                        if (actualObject.shapeAnnotationType === 'FreeText') {\n                            if (node.dynamicText) {\n                                children[i_10].content = node.dynamicText;\n                                actualObject.dynamicText = node.dynamicText;\n                            }\n                            else {\n                                children[i_10].content = actualObject.dynamicText;\n                            }\n                            children[i_10].width = actualObject.bounds.width - 8;\n                        }\n                        else if (actualObject.enableShapeLabel === true && actualObject.measureType) {\n                            if (node.labelContent) {\n                                children[i_10].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[i_10].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[i_10].content;\n                        }\n                        else if (actualObject.enableShapeLabel === true) {\n                            if (node.labelContent) {\n                                children[i_10].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[i_10].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[i_10].content;\n                        }\n                        children[i_10].isDirt = true;\n                    }\n                    /** set text node width less than the parent */\n                }\n            }\n        }\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (actualObject && actualObject.formFieldAnnotationType) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children[0];\n                children.actualSize.width = actualObject.wrapper.desiredSize.width;\n                children.actualSize.height = actualObject.wrapper.desiredSize.height;\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && actualObject.subject === 'Text Box') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n                    }\n                }\n                for (var i_11 = 0; i_11 < children.length; i_11++) {\n                    if (children[i_11].textNodes && children[i_11].textNodes.length > 0) {\n                        children[i_11].isDirt = true;\n                        var childNodeHeight = children[i_11].textNodes.length * children[i_11].textNodes[0].dy;\n                        var heightDiff = actualObject.bounds.height - childNodeHeight;\n                        if (heightDiff > 0 && heightDiff < children[i_11].textNodes[0].dy) {\n                            childNodeHeight = childNodeHeight + children[i_11].textNodes[0].dy;\n                        }\n                        if (childNodeHeight > actualObject.bounds.height) {\n                            var contString = '';\n                            for (var index = 0; index < children[i_11].textNodes.length; index++) {\n                                // eslint-disable-next-line\n                                var childHeight = children[i_11].textNodes[0].dy * (index + 1);\n                                // eslint-disable-next-line\n                                childHeight = childHeight;\n                                contString = contString + children[i_11].textNodes[index].text;\n                            }\n                            children[i_11].content = contString;\n                        }\n                    }\n                    /** set text node width less than the parent */\n                    children[i_11].width = actualObject.bounds.width - 8;\n                }\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        }\n        this.pdfViewer.renderDrawing(undefined, actualObject.pageIndex);\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length === 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Left';\n                    children[1].setOffsetWithRespectToBounds(0.5, 0, null);\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, null);\n                }\n            }\n        }\n    };\n    Drawing.prototype.fontSizeCalculation = function (actualObject, element, boundsWidth) {\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + actualObject.pageIndex);\n        var context = canvas.getContext(\"2d\");\n        var textwidth = 0;\n        var newsize = 0;\n        var fontStyle = '';\n        if (element.style.italic && element.style.bold) {\n            fontStyle = 'bold italic ';\n        }\n        else if (element.style.bold) {\n            fontStyle = 'bold ';\n        }\n        else if (element.style.italic) {\n            fontStyle = 'italic ';\n        }\n        while (boundsWidth > textwidth) {\n            context.font = fontStyle + newsize + 'px ' + element.style.fontFamily;\n            textwidth = context.measureText(actualObject.dynamicText).width;\n            newsize += 0.1;\n        }\n        newsize -= 0.1;\n        return newsize;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.setLineDistance = function (actualObject, points, segment, leader) {\n        var node1;\n        if (leader) {\n            node1 = initLeader(actualObject, points[1], points[0], leader);\n        }\n        else {\n            node1 = initLeader(actualObject, points[0], points[1], leader);\n        }\n        segment.data = node1.data;\n        segment.offsetX = node1.offsetX;\n        segment.offsetY = node1.offsetY;\n        segment.rotateAngle = node1.rotateAngle;\n        segment.width = node1.width;\n        segment.height = node1.height;\n        segment.pivot = node1.pivot;\n        segment.canMeasurePath = true;\n        segment.isDirt = true;\n    };\n    /**\n     * @private\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.pdfViewer.selectedItems;\n        return this.scale(obj, sx, sy, pivot);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the annotaion object.\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.annotations && obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n            else if (obj.formFields && obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n        }\n        else {\n            checkBoundaryConstraints = this.scaleAnnotation(obj, sx, sy, pivot, undefined);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} obj - Specified the annotation object.\n     * @param {DrawingElement} element - Specified the annotation element.\n     * @param {IElement} refObject - Specified the annotation reference object.\n     * @returns {void}\n     */\n    Drawing.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (!isLineShapes(obj)) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.wrapper.actualSize.width;\n                sh = height / node.wrapper.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            if (!refObject) {\n                refObject = obj;\n            }\n            var refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (!isLineShapes(obj)) {\n                var node = obj;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                if (width > 0) {\n                    node.wrapper.width = width;\n                    node.wrapper.offsetX = newPosition.x;\n                }\n                if (height > 0) {\n                    node.wrapper.height = height;\n                    node.wrapper.offsetY = newPosition.y;\n                }\n                this.nodePropertyChange(obj, {\n                    bounds: { width: node.wrapper.width, height: node.wrapper.height, x: node.wrapper.offsetX, y: node.wrapper.offsetY }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} refObject - Specified the reference object.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleAnnotation = function (obj, sw, sh, pivot, refObject) {\n        // eslint-disable-next-line\n        var node = this.pdfViewer.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = this.getShapePoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined) {\n            this.scaleObject(sw, sh, refPoint, node, element, refObject);\n        }\n        // eslint-disable-next-line max-len\n        var constraints = this.checkBoundaryConstraints(undefined, undefined, obj.pageIndex, obj.wrapper.bounds);\n        if (!constraints) {\n            this.scaleObject(1 / sw, 1 / sh, refPoint, node, element, refObject);\n        }\n        return constraints;\n    };\n    /**\n     * @private\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {Rect} nodeBounds - Specified the node bounds value.\n     * @param {boolean} isStamp - Specified the annotation is stamp or not.\n     * @param {boolean} isSkip - Specified the annotaion is skip or not.\n     * @returns {boolean} - Returns true or false.\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.checkBoundaryConstraints = function (tx, ty, pageIndex, nodeBounds, isStamp, isSkip) {\n        var selectorBounds = !nodeBounds ? this.pdfViewer.selectedItems.wrapper.bounds : undefined;\n        var bounds = nodeBounds;\n        // eslint-disable-next-line\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        var heightDifference = 10;\n        if (canvas) {\n            var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n            var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_1 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (isStamp) {\n                heightDifference = 50;\n                if (this.pdfViewer.viewerBase.eventArgs && this.pdfViewer.viewerBase.eventArgs.source) {\n                    if (this.RestrictStamp(this.pdfViewer.viewerBase.eventArgs.source)) {\n                        return false;\n                    }\n                }\n            }\n            if ((right <= width - 10 && left >= 10 && bottom <= height - 10 && top_1 >= heightDifference) || isSkip) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.RestrictStamp = function (source) {\n        // eslint-disable-next-line max-len\n        if (source && source.pageIndex !== undefined && this.pdfViewer.viewerBase.activeElements && source.pageIndex !== this.pdfViewer.viewerBase.activeElements.activePageID) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} shapeElement - Specified the shape element.\n     * @returns {Rect} - Returns the rectangle object.\n     */\n    Drawing.prototype.getShapeBounds = function (shapeElement) {\n        var shapeBounds = new Rect();\n        var shapeCorners = cornersPointsBeforeRotation(shapeElement);\n        var shapeMiddleLeft = shapeCorners.middleLeft;\n        var shapeTopCenter = shapeCorners.topCenter;\n        var shapeBottomCenter = shapeCorners.bottomCenter;\n        var shapeMiddleRight = shapeCorners.middleRight;\n        var shapeTopLeft = shapeCorners.topLeft;\n        var shapeTopRight = shapeCorners.topRight;\n        var shapeBottomLeft = shapeCorners.bottomLeft;\n        var shapeBottomRight = shapeCorners.bottomRight;\n        shapeElement.corners = {\n            topLeft: shapeTopLeft, topCenter: shapeTopCenter, topRight: shapeTopRight, middleLeft: shapeMiddleLeft,\n            middleRight: shapeMiddleRight, bottomLeft: shapeBottomLeft, bottomCenter: shapeBottomCenter, bottomRight: shapeBottomRight\n        };\n        if (shapeElement.rotateAngle !== 0 || shapeElement.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, shapeElement.rotateAngle + shapeElement.parentTransform, shapeElement.offsetX, shapeElement.offsetY);\n            shapeElement.corners.topLeft = shapeTopLeft = transformPointByMatrix(matrix, shapeTopLeft);\n            shapeElement.corners.topCenter = shapeTopCenter = transformPointByMatrix(matrix, shapeTopCenter);\n            shapeElement.corners.topRight = shapeTopRight = transformPointByMatrix(matrix, shapeTopRight);\n            shapeElement.corners.middleLeft = shapeMiddleLeft = transformPointByMatrix(matrix, shapeMiddleLeft);\n            shapeElement.corners.middleRight = shapeMiddleRight = transformPointByMatrix(matrix, shapeMiddleRight);\n            shapeElement.corners.bottomLeft = shapeBottomLeft = transformPointByMatrix(matrix, shapeBottomLeft);\n            shapeElement.corners.bottomCenter = shapeBottomCenter = transformPointByMatrix(matrix, shapeBottomCenter);\n            shapeElement.corners.bottomRight = shapeBottomRight = transformPointByMatrix(matrix, shapeBottomRight);\n            //Set corners based on rotate angle\n        }\n        shapeBounds = Rect.toBounds([shapeTopLeft, shapeTopRight, shapeBottomLeft, shapeBottomRight]);\n        shapeElement.corners.left = shapeBounds.left;\n        shapeElement.corners.right = shapeBounds.right;\n        shapeElement.corners.top = shapeBounds.top;\n        shapeElement.corners.bottom = shapeBounds.bottom;\n        shapeElement.corners.center = shapeBounds.center;\n        shapeElement.corners.width = shapeBounds.width;\n        shapeElement.corners.height = shapeBounds.height;\n        return shapeBounds;\n    };\n    /**\n     * @private\n     * @param {number} x - Specified the x value.\n     * @param {number} y - Specified the y value.\n     * @param {number} w - Specified the w value.\n     * @param {number} h - Specified the h value.\n     * @param {number} angle - Specified the angle value.\n     * @param {number} offsetX - Specified the offset x value.\n     * @param {number} offsetY - Specified the offset y value.\n     * @param {PointModel} cornerPoint - Specified the corner point value.\n     * @returns {PointModel} - Returns the point model.\n     */\n    Drawing.prototype.getShapePoint = function (x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n        var pivotPoint = { x: 0, y: 0 };\n        var transformMatrix = identityMatrix();\n        rotateMatrix(transformMatrix, angle, offsetX, offsetY);\n        switch (cornerPoint.x) {\n            case 1:\n                switch (cornerPoint.y) {\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y + h / 2 }));\n                        break;\n                }\n                break;\n            case 0:\n                switch (cornerPoint.y) {\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y }));\n                        break;\n                }\n                break;\n            case 0.5:\n                switch (cornerPoint.y) {\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y + h }));\n                        break;\n                }\n                break;\n        }\n        return { x: pivotPoint.x, y: pivotPoint.y };\n    };\n    /**\n     * @private\n     * @param {string} endPoint - Specified the end point value.\n     * @param {IElement} obj - Specified the annotaion object.\n     * @param {PointModel} point - Specified the annotation points.\n     * @param {PointModel} segment - Specified the annotaion segment.\n     * @param {IElement} target - Specified the target element.\n     * @param {string} targetPortId - Specified the target port id.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {boolean} - Returns true or false.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId, currentSelector) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        // eslint-disable-next-line\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.annotations[0];\n        }\n        else {\n            connector = obj;\n        }\n        point = { x: point.x / this.pdfViewer.viewerBase.getZoomFactor(), y: point.y / this.pdfViewer.viewerBase.getZoomFactor() };\n        if (this.checkBoundaryConstraints(undefined, undefined, connector.pageIndex, connector.wrapper.bounds)) {\n            if (connector.shapeAnnotationType === 'Distance') {\n                var leader = isLeader(connector, endPoint);\n                if (endPoint === 'Leader0') {\n                    if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n                        connector.vertexPoints[0].x = point.x;\n                        connector.vertexPoints[0].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n                else if (endPoint === 'Leader1') {\n                    var length_2 = connector.vertexPoints.length - 1;\n                    if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n                        connector.vertexPoints[length_2].x = point.x;\n                        connector.vertexPoints[length_2].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[length_2].x += tx;\n                        connector.vertexPoints[length_2].y += ty;\n                    }\n                }\n                else {\n                    // eslint-disable-next-line\n                    var angle = Point.findAngle(connector.sourcePoint, connector.targetPoint);\n                    // eslint-disable-next-line\n                    var center = obj.wrapper.children[0].bounds.center;\n                    // eslint-disable-next-line\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, -angle, center.x, center.y);\n                    // eslint-disable-next-line\n                    var rotatedPoint = transformPointByMatrix(matrix, { x: point.x, y: point.y });\n                    if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                        // eslint-disable-next-line\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, -angle, center.x, center.y);\n                        // eslint-disable-next-line\n                        var rotatedPoint1 = transformPointByMatrix(matrix, connector.vertexPoints[0]);\n                        // eslint-disable-next-line\n                        var rotatedPoint2 = transformPointByMatrix(matrix, connector.vertexPoints[connector.vertexPoints.length - 1]);\n                        ty = rotatedPoint.y - rotatedPoint1.y;\n                        if (connector.leaderHeight === 0 && connector.leaderHeight != null) {\n                            connector.leaderHeight = this.pdfViewer.distanceSettings.leaderLength;\n                        }\n                        else {\n                            connector.leaderHeight += ty;\n                            rotatedPoint1.y += ty;\n                            rotatedPoint2.y += ty;\n                            // eslint-disable-next-line\n                            var matrix = identityMatrix();\n                            rotateMatrix(matrix, angle, center.x, center.y);\n                            connector.vertexPoints[0] = transformPointByMatrix(matrix, rotatedPoint1);\n                            connector.vertexPoints[connector.vertexPoints.length - 1] = transformPointByMatrix(matrix, rotatedPoint2);\n                        }\n                    }\n                }\n            }\n            else if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                var i = Number(endPoint.split('_')[1]);\n                tx = point.x - connector.vertexPoints[i].x;\n                ty = point.y - connector.vertexPoints[i].y;\n                connector.vertexPoints[i].x += tx;\n                connector.vertexPoints[i].y += ty;\n                if (connector.vertexPoints.length > 2 && obj.measureType !== 'Perimeter') {\n                    if (parseFloat(endPoint.split('_')[1]) === 0) {\n                        connector.vertexPoints[connector.vertexPoints.length - 1].x += tx;\n                        connector.vertexPoints[connector.vertexPoints.length - 1].y += ty;\n                    }\n                    else if (parseFloat(endPoint.split('_')[1]) === connector.vertexPoints.length - 1) {\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n            }\n            this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n            this.renderSelector(connector.pageIndex, currentSelector);\n        }\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the y value.\n     * @param {number} i - Specified the index value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragSourceEnd = function (obj, tx, ty, i) {\n        // eslint-disable-next-line\n        var connector = this.pdfViewer.nameTable[obj.id];\n        connector.vertexPoints[i].x += tx;\n        connector.vertexPoints[i].y += ty;\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @param {PointModel[]} points - Specified the points value.\n     * @returns {void}\n     */\n    Drawing.prototype.updateConnector = function (connector, points) {\n        var srcDecorator;\n        var tarDecorator;\n        var targetPoint;\n        connector.vertexPoints = points;\n        updateSegmentElement(connector, points, connector.wrapper.children[0]);\n        var srcPoint = connector.sourcePoint;\n        var anglePoint = connector.vertexPoints;\n        //  points = this.clipDecorators(connector, points);\n        var element = connector.wrapper.children[0];\n        element.canMeasurePath = true;\n        for (var i = 0; i < connector.wrapper.children.length; i++) {\n            element = connector.wrapper.children[i];\n            if (connector.shapeAnnotationType !== 'Polygon') {\n                if (element.id.indexOf('srcDec') > -1) {\n                    updateDecoratorElement(connector, element, points[0], anglePoint[1], true);\n                }\n                targetPoint = connector.targetPoint;\n                if (element.id.indexOf('tarDec') > -1) {\n                    updateDecoratorElement(connector, element, points[points.length - 1], anglePoint[anglePoint.length - 2], false);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {Object} - Returns the object.\n     */\n    Drawing.prototype.copy = function () {\n        this.pdfViewer.clipboardData.pasteIndex = 1;\n        this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n        return this.pdfViewer.clipboardData.clipObject;\n    };\n    /**\n     * @private\n     * @returns {Object[]} - Returns the object array.\n     */\n    Drawing.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.pdfViewer.clipboardData.childTable = {};\n        if (this.pdfViewer.selectedItems.annotations.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.annotations;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = cloneObject((selectedItems[j]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.formFields;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = cloneObject((selectedItems[j]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.clipboardData.pasteIndex === 0) {\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                // eslint-disable-next-line\n                if (this.pdfViewer.nameTable[item.id]) {\n                    if (!item.formFieldAnnotationType) {\n                        if (item.annotName)\n                            this.pdfViewer.annotationModule.deleteAnnotationById(item.annotName);\n                        else\n                            this.pdfViewer.annotationModule.deleteAnnotation();\n                    }\n                    else {\n                        this.pdfViewer.clearSelection(item.pageIndex);\n                        this.pdfViewer.formDesignerModule.deleteFormField(item.id);\n                    }\n                }\n            }\n            //this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    Drawing.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.pdfViewer.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel[]} obj - Specified the annotation object.\n     * @param {number} index - Specified the annotation index.\n     * @returns {void}\n     */\n    Drawing.prototype.paste = function (obj, index) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (obj || this.pdfViewer.clipboardData.clipObject) {\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.pdfViewer.clipboardData.clipObject;\n            if (copiedItems) {\n                var objectTable = {};\n                if (this.pdfViewer.clipboardData.pasteIndex !== 0) {\n                    this.pdfViewer.clearSelection(index);\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    // eslint-disable-next-line\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    var pageDiv = this.pdfViewer.viewerBase.getElement('_pageDiv_' + copy.pageIndex);\n                    // eslint-disable-next-line\n                    var events = event;\n                    if (events && !events.clientX && !events.clientY) {\n                        events = { clientX: this.pdfViewer.viewerBase.mouseLeft, clientY: this.pdfViewer.viewerBase.mouseTop };\n                    }\n                    if (isBlazor()) {\n                        events = this.pdfViewer.viewerBase.mouseDownEvent;\n                    }\n                    if (isLineShapes(copy)) {\n                        this.calculateCopyPosition(copy, pageDiv, events);\n                    }\n                    else {\n                        if (pageDiv) {\n                            var pageCurrentRect = pageDiv.getBoundingClientRect();\n                            copy.bounds.x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                            copy.bounds.y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                        }\n                    }\n                    var newNode = cloneObject(copy);\n                    if (this.pdfViewer.viewerBase.contextMenuModule.previousAction !== 'Cut') {\n                        newNode.id += randomId();\n                        if (this.pdfViewer.annotationModule && newNode.shapeAnnotationType !== 'HandWrittenSignature') {\n                            newNode.annotName = newNode.id;\n                            // eslint-disable-next-line max-len\n                            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], false);\n                        }\n                        if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                            this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                        }\n                        if (!newNode.formFieldAnnotationType) {\n                            this.pdfViewer.annotation.addAction(newNode.pageIndex, null, newNode, 'Addition', '', newNode, newNode);\n                        }\n                    }\n                    else {\n                        if (this.pdfViewer.annotationModule) {\n                            // eslint-disable-next-line max-len\n                            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], true);\n                        }\n                        if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                            this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                        }\n                    }\n                    var addedAnnot = this.add(newNode);\n                    if (this.pdfViewer.formDesigner && addedAnnot.formFieldAnnotationType) {\n                        this.pdfViewer.annotation.addAction(newNode.pageIndex, null, addedAnnot, 'Addition', '', addedAnnot, addedAnnot);\n                    }\n                    if ((newNode.shapeAnnotationType === 'FreeText' || newNode.enableShapeLabel) && addedAnnot) {\n                        this.nodePropertyChange(addedAnnot, {});\n                    }\n                    if (addedAnnot.formFieldAnnotationType && addedAnnot.pageIndex === index) {\n                        this.pdfViewer.formFieldCollection.push(addedAnnot);\n                        // eslint-disable-next-line max-len\n                        var formField = { id: addedAnnot.id, name: addedAnnot.name, value: addedAnnot.value, type: addedAnnot.formFieldAnnotationType,\n                            isReadOnly: addedAnnot.isReadonly, fontFamily: addedAnnot.fontFamily,\n                            // eslint-disable-next-line max-len\n                            fontSize: addedAnnot.fontSize, fontStyle: addedAnnot.fontStyle, color: addedAnnot.color, backgroundColor: addedAnnot.backgroundColor,\n                            // eslint-disable-next-line max-len\n                            alignment: addedAnnot.alignment, visibility: addedAnnot.visibility, maxLength: addedAnnot.maxLength, isRequired: addedAnnot.isRequired,\n                            // eslint-disable-next-line max-len\n                            isPrint: addedAnnot.isPrint, isSelected: addedAnnot.isSelected, isChecked: addedAnnot.isChecked, tooltip: addedAnnot.tooltip, bounds: addedAnnot.bounds, thickness: addedAnnot.thickness, borderColor: addedAnnot.borderColor, signatureIndicatorSettings: addedAnnot.signatureIndicatorSettings };\n                        this.pdfViewer.formFieldCollections.push(formField);\n                        // eslint-disable-next-line max-len\n                        this.pdfViewer.formDesigner.drawHTMLContent(addedAnnot.formFieldAnnotationType, addedAnnot.wrapper.children[0], addedAnnot, addedAnnot.pageIndex, this.pdfViewer);\n                    }\n                    this.pdfViewer.select([newNode.id], this.pdfViewer.annotationSelectorSettings);\n                    if (!addedAnnot.formFieldAnnotationType) {\n                        this.pdfViewer.annotationModule.triggerAnnotationAddEvent(newNode);\n                    }\n                    ;\n                }\n            }\n            this.pdfViewer.renderDrawing(undefined, index);\n            this.pdfViewer.clipboardData.pasteIndex++;\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    Drawing.prototype.calculateCopyPosition = function (copy, pageDiv, events) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0; i < copy.vertexPoints.length; i++) {\n            if (pageDiv) {\n                if (i === 0) {\n                    var pageCurrentRect = pageDiv.getBoundingClientRect();\n                    x1 = copy.vertexPoints[i].x;\n                    y1 = copy.vertexPoints[i].y;\n                    copy.vertexPoints[i].x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                    copy.vertexPoints[i].y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                    x2 = copy.vertexPoints[i].x;\n                    y2 = copy.vertexPoints[i].y;\n                }\n                else {\n                    copy.vertexPoints[i].x += x2 - x1;\n                    copy.vertexPoints[i].y += y2 - y1;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the annotaion index.\n     * @returns {void}\n     */\n    Drawing.prototype.cut = function (index) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.removedAnnotationCollection = [];\n        }\n        this.pdfViewer.clipboardData.pasteIndex = 0;\n        this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n        this.pdfViewer.renderDrawing(undefined, index);\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @private\n     * @param {Object[]} nodeArray - Specified the node array.\n     * @param {string} sortID - Specified the sort id.\n     * @returns {Object[]} - Returns the node array.\n     */\n    Drawing.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            // eslint-disable-next-line\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    return Drawing;\n}());\nexport { Drawing };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Container } from '@syncfusion/ej2-drawings';\nimport { Point } from '@syncfusion/ej2-drawings';\nimport { PdfAnnotationBase, PdfFormFieldBase } from './pdf-annotation';\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n *\n * @hidden\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     *\n     * @param  {any} diagram - diagram element.\n     * @returns {Container} - Returns the container element.\n     */\n    // eslint-disable-next-line\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        container.children = [];\n        if (this.formFields && this.formFields.length > 0) {\n            for (var i = 0; i < this.formFields.length; i++) {\n                var node = diagram.pdfViewer.nameTable[this.formFields[i].id];\n                var wrapper = node.wrapper;\n                container.children.push(wrapper);\n            }\n        }\n        else if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                if (!isNullOrUndefined(this.annotations[i])) {\n                    var node = diagram.pdfViewer.nameTable[this.annotations[i].id];\n                    var wrapper = node.wrapper;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], PdfAnnotationBase)\n    ], Selector.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PdfFormFieldBase)\n    ], Selector.prototype, \"formFields\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Point, rotateMatrix, identityMatrix, transformPointByMatrix } from '@syncfusion/ej2-drawings';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the shape annotation object.\n * @hidden\n * @returns {void}\n */\nexport function isLineShapes(obj) {\n    if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead'\n        || obj.shapeAnnotationType === 'Distance' || obj.shapeAnnotationType === 'Polygon') {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation or form fields object.\n * @param {DrawingElement} element - Specified the annotation drawing element.\n * @returns {void}\n * @hidden\n */\nexport function setElementStype(obj, element) {\n    if (obj && element) {\n        if (obj.formFieldAnnotationType) {\n            if (obj.id.indexOf('diagram_helper') !== -1) {\n                element.style.fill = 'transparent';\n                element.style.strokeWidth = 1;\n                element.style.strokeDashArray = obj.borderDashArray;\n            }\n            else {\n                element.style.fill = 'transparent';\n                element.style.strokeWidth = 0;\n            }\n        }\n        else {\n            var fillColor = (obj.fillColor === '#ffffff00' ? 'transparent' : obj.fillColor);\n            element.style.fill = fillColor ? fillColor : 'white';\n            // eslint-disable-next-line max-len\n            element.style.strokeColor = obj.strokeColor ? obj.strokeColor : obj.borderColor;\n            // eslint-disable-next-line max-len\n            element.style.color = obj.strokeColor ? obj.strokeColor : obj.borderColor;\n            element.style.strokeWidth = obj.thickness;\n            if (obj.shapeAnnotationType === 'Image' || obj.shapeAnnotationType === 'SignatureText' || obj.shapeAnnotationType === 'SignatureImage') {\n                element.style.strokeWidth = 0;\n            }\n            element.style.strokeDashArray = obj.borderDashArray;\n            element.style.opacity = obj.opacity;\n        }\n    }\n}\n/**\n * @param {PointModel[]} points - Specified the annotation points value.\n * @hidden\n * @returns {number} - Returns the points length.\n */\nexport function findPointsLength(points) {\n    var length = 0;\n    for (var i = 0; i < points.length - 1; i++) {\n        length += Point.findLength(points[i], points[i + 1]);\n    }\n    return length;\n}\n/**\n * @param {PointModel[]} points - Specified the annotation points value.\n * @hidden\n * @returns {number} - Returns the points length.\n */\nexport function findPerimeterLength(points) {\n    var length = Point.getLengthFromListOfPoints(points);\n    return length;\n}\n/**\n * @private\n * @param {DrawingElement} element - Specified the drawing element.\n * @param {Transforms} transform - Specified the transform value.\n * @returns {BaseAttributes} - Returns the base attributes value.\n */\nexport function getBaseShapeAttributes(element, transform) {\n    var baseShapeAttributes = {\n        width: element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n        angle: element.rotateAngle + element.parentTransform, fill: element.style.fill, stroke: element.style.strokeColor,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n        opacity: element.style.opacity, dashArray: element.style.strokeDashArray || '',\n        visible: element.visible, id: element.id\n    };\n    if (transform) {\n        baseShapeAttributes.x += transform.tx;\n        baseShapeAttributes.y += transform.ty;\n    }\n    return baseShapeAttributes;\n}\n/**\n * Get function\n *\n * @private\n * @param {Function | string} value - Type of the function.\n * @returns {Function} - Returns the function.\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n/**\n * @private\n * @param {any} obj - Specified the annotation object.\n * @param {Function | string} additionalProp - Specified the annotation additional properties.\n * @param {string} key - Specified the annotation key value.\n * @returns {Object} - Returns the cloned object.\n */\n// eslint-disable-next-line\nexport function cloneObject(obj, additionalProp, key) {\n    // eslint-disable-next-line\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    // eslint-disable-next-line\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/**\n * @private\n * @param {Object[]} sourceArray - Specified the annotation source collections.\n * @param {Function | string} additionalProp - Specified the annotation additional properties.\n * @param {string} key - Specified the annotation key value.\n * @returns {Object[]} - Returns the cloned object array.\n */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/**\n * @private\n * @param {string} propName - Specified the annotation property name.\n * @returns {string[]} - Returns the internal properties.\n */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/**\n * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n * @param {string} position - Specified the annotation position.\n * @hidden\n * @returns {Leader} - Returns the leader value.\n */\nexport function isLeader(obj, position) {\n    var rotatedPoint;\n    if (obj.shapeAnnotationType === 'Distance') {\n        var leaderCount = 0;\n        var newPoint1 = void 0;\n        for (var i = 0; i < obj.wrapper.children.length; i++) {\n            var angle = Point.findAngle(obj.sourcePoint, obj.targetPoint);\n            // eslint-disable-next-line\n            var segment = obj.wrapper.children[i];\n            if (segment.id.indexOf('leader') > -1) {\n                var center = obj.wrapper.children[0].bounds.center;\n                if (leaderCount === 0) {\n                    newPoint1 = { x: obj.sourcePoint.x, y: obj.sourcePoint.y - obj.leaderHeight };\n                    center = obj.sourcePoint;\n                }\n                else {\n                    newPoint1 = { x: obj.targetPoint.x, y: obj.targetPoint.y - obj.leaderHeight };\n                    center = obj.targetPoint;\n                }\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, angle, center.x, center.y);\n                rotatedPoint = transformPointByMatrix(matrix, { x: newPoint1.x, y: newPoint1.y });\n                if (position === 'Leader' + leaderCount) {\n                    return { leader: 'leader' + leaderCount, point: rotatedPoint };\n                }\n                leaderCount++;\n            }\n        }\n    }\n    return { leader: '', point: rotatedPoint };\n}\n"],"sourceRoot":""}